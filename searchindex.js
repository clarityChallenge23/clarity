Search.setIndex({"docnames": ["CODE_OF_CONDUCT", "CONTRIBUTING", "clarity", "clarity.data", "clarity.data.HOA_tools_cec2", "clarity.data.demo_data", "clarity.data.scene_builder_cec2", "clarity.data.scene_renderer_cec1", "clarity.data.scene_renderer_cec2", "clarity.data.utils", "clarity.engine", "clarity.engine.losses", "clarity.engine.system", "clarity.enhancer", "clarity.enhancer.compressor", "clarity.enhancer.dnn", "clarity.enhancer.dnn.mc_conv_tasnet", "clarity.enhancer.dsp", "clarity.enhancer.dsp.filter", "clarity.enhancer.gha", "clarity.enhancer.gha.gainrule_camfit", "clarity.enhancer.gha.gha_interface", "clarity.enhancer.gha.gha_utils", "clarity.enhancer.nalr", "clarity.evaluator", "clarity.evaluator.haaqi", "clarity.evaluator.haaqi.haaqi", "clarity.evaluator.haspi", "clarity.evaluator.haspi.eb", "clarity.evaluator.haspi.ebm", "clarity.evaluator.haspi.haspi", "clarity.evaluator.haspi.ip", "clarity.evaluator.hasqi", "clarity.evaluator.hasqi.hasqi", "clarity.evaluator.mbstoi", "clarity.evaluator.mbstoi.mbstoi", "clarity.evaluator.mbstoi.mbstoi_utils", "clarity.evaluator.msbg", "clarity.evaluator.msbg.cochlea", "clarity.evaluator.msbg.msbg", "clarity.evaluator.msbg.msbg_hparams", "clarity.evaluator.msbg.msbg_utils", "clarity.evaluator.msbg.smearing", "clarity.predictor", "clarity.predictor.torch_msbg", "clarity.predictor.torch_stoi", "clarity.utils", "clarity.utils.audiogram", "clarity.utils.car_noise_simulator", "clarity.utils.car_noise_simulator.carnoise_parameters_generator", "clarity.utils.car_noise_simulator.carnoise_signal_generator", "clarity.utils.file_io", "clarity.utils.flac_encoder", "clarity.utils.results_support", "clarity.utils.signal_processing", "clarity.utils.source_separation_support", "index", "installation", "introduction", "modules", "recipe_rsync_exclude", "recipes", "recipes.cad1", "recipes.cad1.task1", "recipes.cad1.task1.baseline", "recipes.cad1.task1.baseline.enhance", "recipes.cad1.task1.baseline.evaluate", "recipes.cad1.task1.baseline.merge_batches_results", "recipes.cad1.task1.baseline.test", "recipes.cad1.task2", "recipes.cad1.task2.baseline", "recipes.cad1.task2.baseline.audio_manager", "recipes.cad1.task2.baseline.baseline_utils", "recipes.cad1.task2.baseline.car_scene_acoustics", "recipes.cad1.task2.baseline.enhance", "recipes.cad1.task2.baseline.evaluate", "recipes.cad1.task2.baseline.merge_batches_results", "recipes.cad1.task2.baseline.test", "recipes.cad1.task2.data_preparation", "recipes.cad1.task2.data_preparation.build_scene_metadata", "recipes.cad_icassp_2024", "recipes.cec1", "recipes.cec1.baseline", "recipes.cec1.baseline.enhance", "recipes.cec1.baseline.evaluate", "recipes.cec1.baseline.results", "recipes.cec1.data_preparation", "recipes.cec1.data_preparation.prepare_cec1_data", "recipes.cec1.e009_sheffield", "recipes.cec1.e009_sheffield.test", "recipes.cec1.e009_sheffield.train", "recipes.cec2", "recipes.cec2.baseline", "recipes.cec2.baseline.enhance", "recipes.cec2.baseline.evaluate", "recipes.cec2.baseline.exp", "recipes.cec2.data_preparation", "recipes.cec2.data_preparation.build_scenes", "recipes.cec2.data_preparation.render_scenes", "recipes.cec3", "recipes.cec3.baseline", "recipes.cec3.baseline.enhance", "recipes.cec3.baseline.evaluate", "recipes.cec3.baseline.report_score", "recipes.cpc1", "recipes.cpc1.baseline", "recipes.cpc1.baseline.compute_scores", "recipes.cpc1.baseline.run", "recipes.cpc1.e029_sheffield", "recipes.cpc1.e029_sheffield.evaluate", "recipes.cpc1.e029_sheffield.infer", "recipes.cpc1.e029_sheffield.prepare_data", "recipes.cpc1.e029_sheffield.train_asr", "recipes.cpc1.e029_sheffield.transformer_cpc1_ensemble_decoder", "recipes.cpc1.e032_sheffield", "recipes.cpc1.e032_sheffield.evaluate", "recipes.cpc1.e032_sheffield.infer", "recipes.cpc1.e032_sheffield.prepare_data", "recipes.cpc1.e032_sheffield.train_asr", "recipes.cpc1.e032_sheffield.transformer_cpc1_decoder", "recipes.cpc1.test_listener_responses", "recipes.cpc2", "recipes.cpc2.baseline", "recipes.cpc2.baseline.compute_haspi", "recipes.cpc2.baseline.evaluate", "recipes.cpc2.baseline.predict", "recipes.icassp_2023", "recipes.icassp_2023.baseline", "recipes.icassp_2023.baseline.enhance", "recipes.icassp_2023.baseline.evaluate", "recipes.icassp_2023.baseline.report_score", "recipes/cad1/README", "recipes/cad1/task1/baseline/README", "recipes/cad1/task2/baseline/README", "recipes/cad_icassp_2024/baseline/README", "recipes/cad_icassp_2024/generate_dataset/README", "recipes/cec1/README", "recipes/cec1/baseline/README", "recipes/cec1/data_preparation/README", "recipes/cec1/e009_sheffield/README", "recipes/cec2/README", "recipes/cec3/README", "recipes/cpc1/README", "recipes/cpc1/e029_sheffield/README", "recipes/cpc1/e032_sheffield/README", "recipes/cpc2/README", "recipes/cpc2/baseline/README", "recipes/icassp_2023/README", "recipes_doc", "usage"], "filenames": ["CODE_OF_CONDUCT.md", "CONTRIBUTING.md", "clarity.rst", "clarity.data.rst", "clarity.data.HOA_tools_cec2.rst", "clarity.data.demo_data.rst", "clarity.data.scene_builder_cec2.rst", "clarity.data.scene_renderer_cec1.rst", "clarity.data.scene_renderer_cec2.rst", "clarity.data.utils.rst", "clarity.engine.rst", "clarity.engine.losses.rst", "clarity.engine.system.rst", "clarity.enhancer.rst", "clarity.enhancer.compressor.rst", "clarity.enhancer.dnn.rst", "clarity.enhancer.dnn.mc_conv_tasnet.rst", "clarity.enhancer.dsp.rst", "clarity.enhancer.dsp.filter.rst", "clarity.enhancer.gha.rst", "clarity.enhancer.gha.gainrule_camfit.rst", "clarity.enhancer.gha.gha_interface.rst", "clarity.enhancer.gha.gha_utils.rst", "clarity.enhancer.nalr.rst", "clarity.evaluator.rst", "clarity.evaluator.haaqi.rst", "clarity.evaluator.haaqi.haaqi.rst", "clarity.evaluator.haspi.rst", "clarity.evaluator.haspi.eb.rst", "clarity.evaluator.haspi.ebm.rst", "clarity.evaluator.haspi.haspi.rst", "clarity.evaluator.haspi.ip.rst", "clarity.evaluator.hasqi.rst", "clarity.evaluator.hasqi.hasqi.rst", "clarity.evaluator.mbstoi.rst", "clarity.evaluator.mbstoi.mbstoi.rst", "clarity.evaluator.mbstoi.mbstoi_utils.rst", "clarity.evaluator.msbg.rst", "clarity.evaluator.msbg.cochlea.rst", "clarity.evaluator.msbg.msbg.rst", "clarity.evaluator.msbg.msbg_hparams.rst", "clarity.evaluator.msbg.msbg_utils.rst", "clarity.evaluator.msbg.smearing.rst", "clarity.predictor.rst", "clarity.predictor.torch_msbg.rst", "clarity.predictor.torch_stoi.rst", "clarity.utils.rst", "clarity.utils.audiogram.rst", "clarity.utils.car_noise_simulator.rst", "clarity.utils.car_noise_simulator.carnoise_parameters_generator.rst", "clarity.utils.car_noise_simulator.carnoise_signal_generator.rst", "clarity.utils.file_io.rst", "clarity.utils.flac_encoder.rst", "clarity.utils.results_support.rst", "clarity.utils.signal_processing.rst", "clarity.utils.source_separation_support.rst", "index.md", "installation.md", "introduction.md", "modules.rst", "recipe_rsync_exclude.txt", "recipes.rst", "recipes.cad1.rst", "recipes.cad1.task1.rst", "recipes.cad1.task1.baseline.rst", "recipes.cad1.task1.baseline.enhance.rst", "recipes.cad1.task1.baseline.evaluate.rst", "recipes.cad1.task1.baseline.merge_batches_results.rst", "recipes.cad1.task1.baseline.test.rst", "recipes.cad1.task2.rst", "recipes.cad1.task2.baseline.rst", "recipes.cad1.task2.baseline.audio_manager.rst", "recipes.cad1.task2.baseline.baseline_utils.rst", "recipes.cad1.task2.baseline.car_scene_acoustics.rst", "recipes.cad1.task2.baseline.enhance.rst", "recipes.cad1.task2.baseline.evaluate.rst", "recipes.cad1.task2.baseline.merge_batches_results.rst", "recipes.cad1.task2.baseline.test.rst", "recipes.cad1.task2.data_preparation.rst", "recipes.cad1.task2.data_preparation.build_scene_metadata.rst", "recipes.cad_icassp_2024.rst", "recipes.cec1.rst", "recipes.cec1.baseline.rst", "recipes.cec1.baseline.enhance.rst", "recipes.cec1.baseline.evaluate.rst", "recipes.cec1.baseline.results.rst", "recipes.cec1.data_preparation.rst", "recipes.cec1.data_preparation.prepare_cec1_data.rst", "recipes.cec1.e009_sheffield.rst", "recipes.cec1.e009_sheffield.test.rst", "recipes.cec1.e009_sheffield.train.rst", "recipes.cec2.rst", "recipes.cec2.baseline.rst", "recipes.cec2.baseline.enhance.rst", "recipes.cec2.baseline.evaluate.rst", "recipes.cec2.baseline.exp.rst", "recipes.cec2.data_preparation.rst", "recipes.cec2.data_preparation.build_scenes.rst", "recipes.cec2.data_preparation.render_scenes.rst", "recipes.cec3.rst", "recipes.cec3.baseline.rst", "recipes.cec3.baseline.enhance.rst", "recipes.cec3.baseline.evaluate.rst", "recipes.cec3.baseline.report_score.rst", "recipes.cpc1.rst", "recipes.cpc1.baseline.rst", "recipes.cpc1.baseline.compute_scores.rst", "recipes.cpc1.baseline.run.rst", "recipes.cpc1.e029_sheffield.rst", "recipes.cpc1.e029_sheffield.evaluate.rst", "recipes.cpc1.e029_sheffield.infer.rst", "recipes.cpc1.e029_sheffield.prepare_data.rst", "recipes.cpc1.e029_sheffield.train_asr.rst", "recipes.cpc1.e029_sheffield.transformer_cpc1_ensemble_decoder.rst", "recipes.cpc1.e032_sheffield.rst", "recipes.cpc1.e032_sheffield.evaluate.rst", "recipes.cpc1.e032_sheffield.infer.rst", "recipes.cpc1.e032_sheffield.prepare_data.rst", "recipes.cpc1.e032_sheffield.train_asr.rst", "recipes.cpc1.e032_sheffield.transformer_cpc1_decoder.rst", "recipes.cpc1.test_listener_responses.rst", "recipes.cpc2.rst", "recipes.cpc2.baseline.rst", "recipes.cpc2.baseline.compute_haspi.rst", "recipes.cpc2.baseline.evaluate.rst", "recipes.cpc2.baseline.predict.rst", "recipes.icassp_2023.rst", "recipes.icassp_2023.baseline.rst", "recipes.icassp_2023.baseline.enhance.rst", "recipes.icassp_2023.baseline.evaluate.rst", "recipes.icassp_2023.baseline.report_score.rst", "recipes/cad1/README.md", "recipes/cad1/task1/baseline/README.md", "recipes/cad1/task2/baseline/README.md", "recipes/cad_icassp_2024/baseline/README.md", "recipes/cad_icassp_2024/generate_dataset/README.md", "recipes/cec1/README.md", "recipes/cec1/baseline/README.md", "recipes/cec1/data_preparation/README.md", "recipes/cec1/e009_sheffield/README.md", "recipes/cec2/README.md", "recipes/cec3/README.md", "recipes/cpc1/README.md", "recipes/cpc1/e029_sheffield/README.md", "recipes/cpc1/e032_sheffield/README.md", "recipes/cpc2/README.md", "recipes/cpc2/baseline/README.md", "recipes/icassp_2023/README.md", "recipes_doc.md", "usage.md"], "titles": ["Contributor Covenant Code of Conduct", "Contributing to pyClarity", "clarity package", "clarity.data package", "clarity.data.HOA_tools_cec2 module", "clarity.data.demo_data module", "clarity.data.scene_builder_cec2 module", "clarity.data.scene_renderer_cec1 module", "clarity.data.scene_renderer_cec2 module", "clarity.data.utils module", "clarity.engine package", "clarity.engine.losses module", "clarity.engine.system module", "clarity.enhancer package", "clarity.enhancer.compressor module", "clarity.enhancer.dnn package", "clarity.enhancer.dnn.mc_conv_tasnet module", "clarity.enhancer.dsp package", "clarity.enhancer.dsp.filter module", "clarity.enhancer.gha package", "clarity.enhancer.gha.gainrule_camfit module", "clarity.enhancer.gha.gha_interface module", "clarity.enhancer.gha.gha_utils module", "clarity.enhancer.nalr module", "clarity.evaluator package", "clarity.evaluator.haaqi package", "clarity.evaluator.haaqi.haaqi module", "clarity.evaluator.haspi package", "clarity.evaluator.haspi.eb module", "clarity.evaluator.haspi.ebm module", "clarity.evaluator.haspi.haspi module", "clarity.evaluator.haspi.ip module", "clarity.evaluator.hasqi package", "clarity.evaluator.hasqi.hasqi module", "clarity.evaluator.mbstoi package", "clarity.evaluator.mbstoi.mbstoi module", "clarity.evaluator.mbstoi.mbstoi_utils module", "clarity.evaluator.msbg package", "clarity.evaluator.msbg.cochlea module", "clarity.evaluator.msbg.msbg module", "clarity.evaluator.msbg.msbg_hparams package", "clarity.evaluator.msbg.msbg_utils module", "clarity.evaluator.msbg.smearing module", "clarity.predictor package", "clarity.predictor.torch_msbg module", "clarity.predictor.torch_stoi module", "clarity.utils package", "clarity.utils.audiogram module", "clarity.utils.car_noise_simulator package", "clarity.utils.car_noise_simulator.carnoise_parameters_generator module", "clarity.utils.car_noise_simulator.carnoise_signal_generator module", "clarity.utils.file_io module", "clarity.utils.flac_encoder module", "clarity.utils.results_support module", "clarity.utils.signal_processing module", "clarity.utils.source_separation_support module", "Welcome to pyClarity\u2019s documentation", "Installation", "Introduction", "clarity", "&lt;no title&gt;", "recipes package", "recipes.cad1 package", "recipes.cad1.task1 package", "recipes.cad1.task1.baseline package", "recipes.cad1.task1.baseline.enhance module", "recipes.cad1.task1.baseline.evaluate module", "recipes.cad1.task1.baseline.merge_batches_results module", "recipes.cad1.task1.baseline.test module", "recipes.cad1.task2 package", "recipes.cad1.task2.baseline package", "recipes.cad1.task2.baseline.audio_manager module", "recipes.cad1.task2.baseline.baseline_utils module", "recipes.cad1.task2.baseline.car_scene_acoustics module", "recipes.cad1.task2.baseline.enhance module", "recipes.cad1.task2.baseline.evaluate module", "recipes.cad1.task2.baseline.merge_batches_results module", "recipes.cad1.task2.baseline.test module", "recipes.cad1.task2.data_preparation package", "recipes.cad1.task2.data_preparation.build_scene_metadata module", "recipes.cad_icassp_2024 package", "recipes.cec1 package", "recipes.cec1.baseline package", "recipes.cec1.baseline.enhance module", "recipes.cec1.baseline.evaluate module", "recipes.cec1.baseline.results package", "recipes.cec1.data_preparation package", "recipes.cec1.data_preparation.prepare_cec1_data module", "recipes.cec1.e009_sheffield package", "recipes.cec1.e009_sheffield.test module", "recipes.cec1.e009_sheffield.train module", "recipes.cec2 package", "recipes.cec2.baseline package", "recipes.cec2.baseline.enhance module", "recipes.cec2.baseline.evaluate module", "recipes.cec2.baseline.exp package", "recipes.cec2.data_preparation package", "recipes.cec2.data_preparation.build_scenes module", "recipes.cec2.data_preparation.render_scenes module", "recipes.cec3 package", "recipes.cec3.baseline package", "recipes.cec3.baseline.enhance module", "recipes.cec3.baseline.evaluate module", "recipes.cec3.baseline.report_score module", "recipes.cpc1 package", "recipes.cpc1.baseline package", "recipes.cpc1.baseline.compute_scores module", "recipes.cpc1.baseline.run module", "recipes.cpc1.e029_sheffield package", "recipes.cpc1.e029_sheffield.evaluate module", "recipes.cpc1.e029_sheffield.infer module", "recipes.cpc1.e029_sheffield.prepare_data module", "recipes.cpc1.e029_sheffield.train_asr module", "recipes.cpc1.e029_sheffield.transformer_cpc1_ensemble_decoder module", "recipes.cpc1.e032_sheffield package", "recipes.cpc1.e032_sheffield.evaluate module", "recipes.cpc1.e032_sheffield.infer module", "recipes.cpc1.e032_sheffield.prepare_data module", "recipes.cpc1.e032_sheffield.train_asr module", "recipes.cpc1.e032_sheffield.transformer_cpc1_decoder module", "recipes.cpc1.test_listener_responses package", "recipes.cpc2 package", "recipes.cpc2.baseline package", "recipes.cpc2.baseline.compute_haspi module", "recipes.cpc2.baseline.evaluate module", "recipes.cpc2.baseline.predict module", "recipes.icassp_2023 package", "recipes.icassp_2023.baseline package", "recipes.icassp_2023.baseline.enhance module", "recipes.icassp_2023.baseline.evaluate module", "recipes.icassp_2023.baseline.report_score module", "The First Cadenza Challenge", "The First Cadenza Challenge (CAD1) - Task 1: Listening music via headphones", "The First Cadenza Challenge (CAD1) - Task 2: Listening music in a car", "The ICASSP 2024 Cadenza Challenge (CAD_ICASSP_2024)", "Generate music dataset for the ICASSP 2024 Cadenza Challenge", "The 1st Clarity Enhancement Challenge", "CLARITY CEC1 Baseline", "CLARITY CEC1 Data Preparation", "E009 - Implementation of the Sheffield entry for the first Clarity enhancement challenge (CEC1)", "The 2nd Clarity Enhancement Challenge (CEC2)", "The 3rd Clarity Enhancement Challenge (CEC3)", "The 1st Clarity Prediction Challenge (CPC1)", "E029 - Unsupervised Uncertainty Measures of Automatic Speech Recognition for Non-intrusive Speech Intelligibility Prediction", "E032 - Exploiting Hidden Representations from a DNN-based Speech Recogniser for Speech Intelligibility Prediction in Hearing-impaired Listeners", "The 2nd Clarity Prediction Challenge (CPC2)", "The 2nd Clarity Prediction Challenge (CPC2) baseline code", "The ICASSP 2023 Clarity Enhancement Challenge (CEC_ICASSP2023)", "Recipes", "Usage"], "terms": {"we": [0, 1, 20, 36, 45, 73, 132, 133, 134, 136, 138, 140, 141, 143, 144, 146, 147, 149], "member": 0, "leader": 0, "make": [0, 1, 39, 42, 66, 72, 102, 125, 129, 132, 133, 134, 140, 141, 147], "particip": [0, 79, 132, 134], "commun": [0, 28, 34, 35, 136, 139, 140, 141, 146, 147], "harass": 0, "free": [0, 20, 39], "experi": [0, 131, 139, 141], "everyon": 0, "regardless": 0, "ag": 0, "bodi": 0, "size": [0, 16, 25, 26, 28, 29, 32, 33, 34, 35, 36, 45, 141], "visibl": 0, "invis": 0, "disabl": 0, "ethnic": 0, "sex": 0, "characterist": [0, 73, 107, 132, 133], "gender": 0, "ident": [0, 20, 22, 132, 133, 134, 140, 147], "express": [0, 20, 28, 54], "level": [0, 4, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 32, 33, 36, 38, 39, 41, 44, 46, 47, 50, 71, 73, 132, 133, 137, 140, 147, 149], "educ": [0, 134, 135], "socio": 0, "econom": 0, "statu": 0, "nation": [0, 132, 133, 134, 140, 141, 147], "person": 0, "appear": [0, 132, 133, 134, 140, 141, 143, 144, 147], "race": 0, "religion": 0, "sexual": 0, "orient": [0, 1], "act": [0, 149], "interact": [0, 4, 131, 140, 141, 147, 149], "wai": 0, "contribut": [0, 56], "an": [0, 6, 16, 21, 27, 28, 30, 31, 38, 39, 41, 42, 44, 45, 47, 51, 52, 53, 58, 65, 68, 75, 77, 132, 133, 134, 137, 139, 141, 143, 149], "open": [0, 20, 131, 132, 134, 136, 142, 143, 144, 149], "welcom": [0, 1], "divers": [0, 34, 35, 136, 139], "inclus": [0, 28], "healthi": 0, "exampl": [0, 49, 50, 58, 135, 140, 141, 147], "behavior": [0, 12, 90], "posit": [0, 4, 6, 28, 39, 135], "environ": [0, 57, 73, 133, 139, 149], "includ": [0, 1, 27, 28, 29, 30, 38, 39, 45, 47, 58, 65, 72, 73, 75, 131, 132, 134, 138, 142, 143, 146, 149], "demonstr": [0, 149], "empathi": 0, "kind": [0, 45], "toward": 0, "other": [0, 1, 28, 50, 51, 65, 68, 132, 134, 135, 136, 141, 149], "peopl": [0, 28], "Being": 0, "respect": [0, 41, 47, 140, 143, 144], "differ": [0, 6, 12, 28, 29, 36, 38, 41, 47, 51, 55, 65, 73, 90, 132, 133, 134, 140, 147, 149], "opinion": 0, "viewpoint": 0, "give": [0, 1, 28, 31], "gracefulli": 0, "accept": [0, 143, 144], "construct": [0, 6, 21, 149], "feedback": 0, "apolog": 0, "those": [0, 41, 47, 149], "affect": [0, 38], "mistak": [0, 131], "learn": [0, 58, 136, 139, 142, 149], "from": [0, 1, 4, 5, 6, 12, 16, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 42, 45, 47, 51, 52, 55, 57, 58, 65, 73, 79, 103, 106, 109, 115, 125, 132, 133, 134, 135, 137, 141, 143, 148], "focus": 0, "what": [0, 1, 132, 149], "i": [0, 1, 4, 6, 12, 16, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 41, 45, 47, 50, 51, 52, 54, 55, 57, 58, 65, 66, 67, 68, 73, 74, 75, 77, 79, 90, 102, 125, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 149], "best": 0, "just": [0, 28, 141, 149], "u": [0, 1, 2, 3, 4, 28, 149], "individu": [0, 28, 41, 149], "overal": [0, 22, 41, 131, 132, 133, 137, 139, 140, 147], "unaccept": 0, "The": [0, 1, 6, 12, 16, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 45, 47, 49, 50, 51, 52, 53, 54, 57, 58, 65, 67, 68, 71, 72, 73, 74, 75, 77, 79, 90, 106, 109, 115, 135, 137, 138, 139, 143, 144, 148], "us": [0, 4, 6, 12, 16, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 41, 45, 47, 49, 50, 52, 54, 55, 57, 58, 65, 66, 73, 75, 79, 90, 102, 106, 109, 115, 129, 132, 133, 134, 136, 137, 139, 140, 141, 143, 144, 146, 147], "languag": [0, 1, 45, 132, 133, 134, 139], "imageri": 0, "attent": 0, "advanc": [0, 136], "ani": [0, 1, 4, 11, 12, 14, 20, 45, 51, 52, 79, 90, 132, 141, 145, 149], "troll": 0, "insult": 0, "derogatori": 0, "comment": 0, "polit": 0, "attack": [0, 14], "public": 0, "privat": 0, "publish": [0, 28], "inform": [0, 1, 4, 75, 131, 132, 133, 134, 136, 140, 141, 142, 145, 146, 147], "physic": 0, "email": [0, 1, 149], "address": [0, 1], "without": [0, 36, 47], "explicit": 0, "permiss": 0, "which": [0, 1, 4, 6, 20, 21, 22, 27, 30, 36, 38, 41, 45, 47, 51, 55, 57, 65, 75, 136, 137, 138, 140, 141, 143, 144, 146, 147, 149], "could": [0, 36, 45, 138, 141, 143, 144], "reason": [0, 131], "consid": 0, "inappropri": 0, "profession": 0, "set": [0, 6, 20, 21, 27, 28, 29, 30, 31, 38, 39, 41, 44, 45, 47, 49, 51, 66, 75, 79, 102, 123, 125, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 147, 149], "ar": [0, 1, 4, 6, 12, 20, 21, 22, 23, 28, 29, 31, 34, 35, 36, 44, 47, 49, 50, 51, 57, 58, 65, 67, 79, 90, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 144, 146, 147, 149], "clarifi": 0, "take": [0, 6, 18, 21, 39, 44, 45, 49, 50, 65, 131, 132, 133, 134, 141, 147, 149], "appropri": [0, 1, 141, 149], "fair": [0, 132, 134], "action": [0, 1, 131], "thei": [0, 1, 28, 132, 137, 141, 149], "deem": 0, "threaten": 0, "offens": 0, "harm": 0, "have": [0, 1, 4, 28, 29, 31, 54, 57, 79, 132, 133, 134, 137, 141, 146, 147, 149], "right": [0, 4, 20, 21, 22, 27, 30, 32, 33, 34, 35, 36, 47, 65, 68, 73, 74, 75, 132, 134, 141, 147, 149], "remov": [0, 28, 29, 36, 45, 149], "edit": 0, "reject": 0, "commit": 0, "wiki": 0, "issu": [0, 27, 30, 44], "align": [0, 28, 29], "thi": [0, 1, 6, 12, 16, 18, 20, 21, 27, 28, 30, 36, 38, 44, 45, 47, 51, 52, 54, 57, 58, 72, 73, 75, 79, 90, 132, 133, 134, 136, 137, 139, 140, 141, 143, 144, 146, 147, 149], "moder": [0, 47], "decis": 0, "when": [0, 1, 12, 32, 33, 52, 55, 65, 90, 147, 149], "appli": [0, 1, 4, 12, 13, 20, 22, 23, 27, 28, 29, 30, 41, 45, 50, 55, 65, 68, 73, 132, 134, 142, 143, 144], "within": [0, 1, 6, 18, 20, 44, 58, 132, 133, 134, 136, 140, 149], "all": [0, 1, 4, 6, 12, 16, 18, 20, 28, 34, 35, 44, 58, 79, 90, 132, 134, 135, 140, 141, 143, 144, 149], "space": [0, 28, 36, 37, 38, 41], "also": [0, 1, 6, 28, 47, 54, 58, 132, 133, 134, 136, 140, 141, 143, 144, 147, 149], "offici": [0, 58, 132], "repres": [0, 6, 47, 65, 73, 106, 109, 115, 125, 149], "e": [0, 1, 4, 6, 20, 28, 45, 54, 55, 57, 65, 132, 133, 134, 140, 141, 142, 143, 144, 146, 147, 149], "mail": 0, "post": [0, 39, 137], "via": [0, 6, 39], "social": 0, "media": 0, "account": [0, 1, 45], "appoint": 0, "onlin": 0, "offlin": 0, "event": 0, "instanc": [0, 18, 44, 75], "abus": 0, "otherwis": [0, 12, 55, 65, 74, 90], "mai": [0, 1, 16, 28, 47, 131, 132, 149], "report": [0, 1, 103, 131], "claritychallengecontact": [0, 1], "gmail": [0, 1], "com": [0, 1, 12, 16, 27, 30, 45, 57, 58, 143, 144, 149], "complaint": 0, "review": 0, "investig": 0, "promptli": 0, "fairli": 0, "oblig": 0, "privaci": 0, "secur": 0, "incid": 0, "follow": [0, 1, 6, 25, 26, 27, 29, 30, 32, 33, 38, 50, 57, 73, 132, 133, 137, 141, 142, 146, 149], "impact": 0, "determin": [0, 4, 20, 22, 36, 45, 49, 54, 67, 140, 141, 147], "consequ": 0, "violat": [0, 140], "unprofession": 0, "unwelcom": 0, "A": [0, 4, 6, 16, 28, 34, 35, 36, 41, 42, 45, 47, 49, 50, 52, 53, 58, 65, 71, 72, 73, 75, 79, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 147, 149], "written": [0, 51, 53], "provid": [0, 4, 25, 26, 27, 28, 30, 31, 32, 33, 47, 55, 58, 65, 132, 133, 134, 136, 137, 140, 141, 142, 143, 144, 146, 147, 149], "clariti": [0, 1, 56, 57, 58, 143, 144, 148, 149], "around": [0, 54, 141], "natur": [0, 28, 51], "explan": 0, "why": 0, "wa": [0, 27, 30, 45], "apologi": 0, "request": [0, 1, 58], "through": [0, 12, 27, 28, 29, 30, 38, 90, 132, 133, 134, 137, 141, 147, 149], "singl": [0, 6, 28, 36, 50, 67, 74, 75, 76, 132, 133, 140, 141, 149], "seri": [0, 28, 58], "continu": [0, 1, 6], "No": 0, "involv": [0, 1, 149], "unsolicit": 0, "specifi": [0, 6, 25, 26, 27, 28, 30, 32, 33, 44, 51, 52, 137, 138, 139, 140, 141, 143, 144, 146, 147], "period": [0, 137], "time": [0, 1, 6, 25, 26, 28, 29, 32, 33, 34, 35, 36, 45, 51, 54, 55, 65, 132, 136, 139, 140, 141, 146, 147], "avoid": [0, 57, 141], "well": [0, 39, 144], "extern": [0, 39], "channel": [0, 4, 6, 16, 19, 20, 21, 22, 27, 29, 30, 32, 33, 36, 38, 51, 52, 55, 65, 68, 73, 74, 132, 134, 139, 141, 147, 149], "like": [0, 1, 4, 72, 75, 141, 143, 149], "term": [0, 25, 26, 28, 32, 33, 45, 54], "lead": [0, 28, 45], "seriou": 0, "sustain": [0, 132, 134], "sort": 0, "allow": [0, 1, 6, 51, 141, 146, 149], "dure": 0, "pattern": [0, 28], "aggress": 0, "disparag": 0, "class": [0, 4, 6, 11, 12, 14, 16, 18, 21, 22, 23, 38, 39, 41, 42, 44, 45, 47, 49, 50, 52, 53, 71, 73, 75, 79, 90, 102, 106, 109, 115, 125, 129, 149], "adapt": [0, 28, 41, 52], "covenantvers": 0, "0": [0, 4, 6, 14, 20, 21, 25, 26, 27, 28, 30, 32, 33, 34, 35, 38, 39, 41, 44, 45, 49, 50, 51, 52, 55, 65, 73, 106, 109, 115, 131, 132, 133, 134, 137, 140, 141, 143, 144, 147, 149], "avail": [0, 4, 6, 21, 28, 55, 57, 58, 65, 131, 140, 141, 147, 149], "www": [0, 4, 20, 28, 58], "conven": 0, "org": [0, 4, 20, 28, 34, 35, 55, 65, 142], "were": [0, 39, 137], "inspir": [0, 45], "mozilla": 0, "": [0, 11, 16, 26, 34, 35, 65, 124, 137, 142], "ladder": 0, "For": [0, 1, 4, 20, 27, 28, 29, 30, 58, 131, 132, 133, 134, 140, 141, 142, 143, 144, 145, 146, 147, 149], "answer": 0, "common": [0, 12, 50, 90], "question": [0, 1, 149], "about": [0, 75, 133, 140, 142, 145, 146], "see": [0, 1, 4, 20, 34, 35, 36, 41, 45, 58, 132, 133, 134, 137, 140, 141, 142, 143, 144, 149], "faq": 0, "http": [0, 4, 12, 16, 20, 27, 28, 30, 34, 35, 45, 55, 57, 58, 65, 140, 143, 144, 149], "translat": [0, 1, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 42, 58], "encourag": 1, "you": [1, 12, 57, 58, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 149], "base": [1, 4, 6, 11, 12, 14, 16, 18, 20, 21, 22, 23, 28, 29, 36, 38, 39, 41, 42, 44, 45, 47, 49, 50, 52, 53, 55, 58, 65, 68, 71, 73, 75, 77, 79, 90, 102, 106, 109, 115, 125, 129, 132, 133, 134, 135, 139, 148, 149], "These": [1, 49, 50, 79, 132, 141, 146, 149], "guidelin": 1, "outlin": 1, "how": [1, 58, 67, 131, 138, 140, 141, 147, 149], "can": [1, 6, 12, 50, 51, 57, 58, 73, 79, 90, 106, 109, 115, 132, 133, 134, 140, 141, 146, 147, 149], "do": [1, 12, 20, 22, 39, 45, 57, 141, 149], "so": [1, 20, 28, 31, 57, 141, 147, 149], "simpli": [1, 57, 132, 133, 134, 136, 141, 147], "If": [1, 12, 21, 23, 25, 26, 27, 30, 32, 33, 45, 47, 51, 52, 53, 57, 65, 73, 90, 125, 132, 133, 134, 136, 138, 139, 140, 141, 143, 144, 149], "someth": [1, 12, 90], "isn": [1, 149], "t": [1, 5, 16, 28, 45, 57, 133, 134, 149], "clear": [1, 27, 30, 32, 33], "pleas": [1, 27, 30, 34, 35, 45, 58, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149], "ask": 1, "discuss": [1, 27, 30], "find": [1, 6, 36, 131, 149], "error": [1, 51, 52, 124, 133, 146], "run": [1, 18, 21, 36, 39, 44, 65, 68, 69, 74, 77, 78, 79, 81, 88, 89, 90, 91, 96, 97, 101, 104, 105, 106, 108, 109, 114, 115, 123, 128, 130, 132, 133, 134, 135, 137, 138, 139, 140, 142, 146, 147], "them": [1, 6, 18, 44, 65, 132, 133, 141, 143, 144, 149], "bug": [1, 27, 30], "templat": [1, 21], "featur": [1, 31, 140], "improv": [1, 144, 149], "think": 1, "would": [1, 6, 51, 149], "benefit": [1, 149], "suggest": [1, 28], "new": [1, 31, 47, 49, 53, 54, 132, 133, 134, 140, 141, 147], "github": [1, 12, 16, 27, 30, 45, 58, 140, 149], "work": [1, 44, 52, 58, 132, 139, 149], "collabor": 1, "document": [1, 141, 148], "algorithm": [1, 45, 136, 139], "get": [1, 4, 6, 41, 50, 55, 65, 71, 79, 132, 133, 134, 138, 140, 141, 147, 149], "touch": 1, "happi": 1, "help": [1, 58, 132, 133, 134, 141, 149], "integr": 1, "your": [1, 57, 132, 133, 134, 140, 143, 144, 147, 149], "framework": 1, "even": [1, 6], "g": [1, 6, 20, 28, 55, 65, 132, 133, 134, 141, 147, 149], "matlab": [1, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 58], "veri": [1, 149], "repositori": [1, 58, 139, 149], "yourself": 1, "pull": 1, "howev": [1, 79, 132, 134, 147, 149], "number": [1, 6, 12, 28, 29, 34, 35, 36, 41, 42, 50, 51, 52, 54, 58, 71, 79, 90, 143, 149], "practic": 1, "standard": [1, 6, 28, 47, 50, 54, 65, 124, 141, 147, 149], "adher": 1, "order": [1, 4, 28, 38, 41, 49, 55, 65, 147, 149], "maintain": [1, 41], "qualiti": [1, 25, 26, 28, 32, 33, 132, 133, 134, 147], "It": [1, 41, 50, 52, 54, 57, 58, 65, 73, 133, 141, 146], "recommend": [1, 47, 57], "undertak": 1, "befor": [1, 45, 125, 137, 140, 149], "should": [1, 5, 18, 27, 28, 30, 44, 49, 79, 132, 133, 134, 135, 140, 141, 143, 144, 147, 149], "requir": [1, 6, 41, 146, 149], "defin": [1, 18, 20, 31, 44, 47, 123, 132, 133, 134, 140, 141, 147, 149], "To": [1, 16, 27, 30, 36, 41, 57, 58, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 146, 147, 149], "one": [1, 18, 23, 28, 31, 36, 39, 44, 47, 132, 133, 137, 141, 146, 149], "pip": [1, 45, 149], "dev": [1, 6, 28, 136, 138, 140, 141, 143, 144, 147, 149], "git": [1, 57], "ssh": 1, "claritychalleng": [1, 27, 30, 57, 140, 142, 149], "local": [1, 55, 65, 140, 149], "clone": [1, 149], "here": [1, 45, 58, 132, 133, 134, 136, 138, 140, 142, 143, 144, 147], "There": [1, 57, 137, 142, 149], "keep": [1, 16, 45, 49, 132, 134], "overview": 1, "being": [1, 6, 41, 73, 75, 137, 141], "undertaken": 1, "opportun": 1, "intend": 1, "solut": [1, 58, 145], "onc": [1, 57, 106, 109, 115, 133, 141, 146, 147], "own": [1, 34, 35, 41, 132, 133, 134, 140, 141, 143, 144, 147], "branch": [1, 57], "pep8": 1, "write": [1, 21, 51, 52, 53, 102, 129], "facilit": 1, "lint": 1, "tool": [1, 4, 57, 140, 141, 147, 149], "flake8": 1, "black": 1, "isort": 1, "mypi": 1, "pylint": 1, "ensur": [1, 6, 16, 28, 29, 54, 79, 132, 134, 149], "convent": [1, 137, 149], "submit": [1, 140, 145, 149], "main": [1, 55, 57, 65, 79, 99, 100, 103, 149], "ci": 1, "hook": [1, 18, 44], "each": [1, 6, 20, 21, 22, 28, 29, 31, 38, 65, 68, 131, 132, 133, 134, 137, 140, 141, 147, 149], "made": [1, 39, 58, 106, 109, 115, 146, 149], "former": [1, 18, 44, 51], "latter": [1, 18, 44], "abov": [1, 25, 26, 28, 32, 33, 41, 44, 132, 133, 136, 141, 149], "more": [1, 4, 6, 12, 28, 39, 41, 51, 79, 131, 132, 133, 134, 140, 141, 142, 145, 146, 147, 149], "markdown": 1, "check": [1, 47, 51, 132, 133, 134, 140, 149], "whilst": [1, 149], "python": [1, 16, 25, 26, 27, 28, 29, 30, 31, 32, 33, 57, 58, 132, 133, 134, 135, 140, 141, 143, 144, 146, 147], "packag": [1, 56, 58, 59, 132, 133, 134, 135, 136, 140, 141, 146, 147, 149], "been": [1, 25, 26, 29, 31, 32, 33, 45, 106, 109, 115, 140, 141, 147, 149], "need": [1, 12, 18, 44, 79, 90, 106, 109, 115, 132, 134, 137, 143, 144, 149], "configur": [1, 21, 65, 67, 68, 72, 74, 75, 77, 79, 137], "precommit": 1, "config": [1, 6, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 79, 123, 132, 133, 134, 135, 137, 140, 141, 143, 144, 146, 147, 149], "yaml": [1, 60, 132, 133, 134, 135, 137, 138, 140, 141, 143, 144, 146, 147, 149], "copi": 1, "directori": [1, 5, 68, 73, 75, 77, 131, 132, 133, 134, 135, 136, 139, 140, 141, 145, 146, 147, 149], "trigger": 1, "fail": 1, "pass": [1, 12, 18, 27, 28, 29, 30, 38, 41, 44, 50, 51, 133, 137, 141, 147, 149], "read": [1, 6, 21, 41, 47, 51, 52, 72, 79, 133, 141, 149], "messag": 1, "carefulli": 1, "some": [1, 41, 45, 47, 49, 58, 133, 148, 149], "chang": [1, 28, 45, 79, 137, 149], "fix": [1, 28, 38, 41, 51, 133], "automat": [1, 58, 133, 140, 141, 147, 148, 149], "format": [1, 4, 6, 21, 22, 51, 52, 141, 146, 149], "file": [1, 4, 6, 21, 22, 41, 45, 47, 51, 52, 53, 65, 67, 68, 71, 72, 73, 76, 77, 79, 94, 102, 103, 129, 132, 133, 134, 137, 140, 141, 143, 144, 146, 147], "place": [1, 6, 143, 144, 149], "where": [1, 6, 16, 29, 39, 41, 52, 79, 132, 133, 134, 135, 141, 146, 147, 149], "output": [1, 4, 16, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 52, 54, 65, 125, 133, 137, 141, 146, 147], "out": [1, 21, 44, 51, 132, 134, 137, 146, 149], "manual": 1, "object": [1, 4, 6, 12, 14, 21, 23, 25, 26, 34, 35, 38, 39, 42, 45, 47, 49, 50, 52, 53, 58, 65, 71, 72, 73, 75, 79, 90, 102, 106, 109, 115, 125, 129, 132, 133, 134, 136, 139, 140, 141, 147, 149], "throughout": 1, "oper": [1, 4, 29, 73, 149], "system": [1, 2, 10, 57, 65, 68, 74, 77, 90, 131, 132, 133, 134, 139, 140, 141, 142, 147, 149], "path": [1, 6, 28, 47, 51, 52, 53, 65, 68, 71, 72, 73, 75, 77, 79, 94, 106, 107, 109, 115, 123, 132, 133, 134, 135, 136, 137, 139, 140, 141, 146, 147, 149], "compon": [1, 4, 25, 26, 32, 33, 42, 73], "easier": 1, "rather": [1, 41, 149], "than": [1, 6, 16, 28, 36, 41, 45, 51, 149], "1": [1, 4, 6, 14, 16, 20, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 41, 45, 49, 51, 55, 65, 71, 79, 136, 139, 140, 141, 143, 144, 147, 149], "2": [1, 4, 14, 16, 20, 25, 26, 27, 28, 29, 30, 32, 33, 39, 42, 45, 49, 51, 58, 73, 75, 79, 135, 136, 139, 140, 141, 142, 143, 144, 147, 149], "most": [1, 12, 16, 90], "popular": 1, "plugin": [1, 140, 141], "save": [1, 5, 6, 12, 52, 53, 54, 65, 71, 133, 135, 137, 140, 143, 144, 146, 149], "link": [1, 5, 31, 136, 146, 148], "visual": 1, "studio": [1, 4], "support": [1, 4, 41, 141, 146], "pycharm": 1, "emac": 1, "flymak": 1, "pyflak": 1, "cover": [1, 142], "unit": [1, 36, 54], "least": [1, 16], "70": [1, 44, 47, 49], "coverag": 1, "regress": [1, 146], "ad": [1, 6, 16, 25, 26, 28, 29, 32, 33, 73, 79, 143, 144], "captur": 1, "pytest": 1, "under": [1, 57, 132, 133, 134, 135, 136, 140, 141, 143, 144, 146, 147, 149], "resid": 1, "option": [1, 4, 6, 22, 25, 26, 27, 28, 30, 32, 33, 39, 41, 42, 51, 65, 67, 68, 74, 77], "modul": [1, 56, 59, 133, 137, 139, 149], "fixtur": 1, "conftest": 1, "py": [1, 12, 16, 36, 58, 60, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 146, 147, 149], "resourc": [1, 28, 58], "newli": 1, "successfulli": 1, "merg": 1, "sometim": [1, 149], "sensibl": 1, "against": [1, 124], "too": [1, 6, 41], "addit": [1, 25, 26, 28, 29, 32, 33, 58, 140], "call": [1, 18, 27, 28, 30, 31, 44, 50, 106, 109, 115, 125, 133, 146, 149], "root": [1, 4, 28, 41, 68, 77, 124, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 146, 147, 149], "project": [1, 149], "folder": [1, 75, 132, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 147, 149], "data": [2, 12, 21, 31, 41, 47, 52, 58, 59, 72, 79, 90, 103, 131, 137, 139, 148], "submodul": [2, 24, 59, 61, 62, 63, 69, 81, 91, 99, 104, 121, 126], "hoa_tools_cec2": [2, 3], "hoarot": [2, 3, 4], "p": [2, 3, 4, 16, 28, 45, 132, 133, 134], "v": [2, 3, 4, 28], "w": [2, 3, 4], "ambisonic_convolv": [2, 3, 4], "binaural_mixdown": [2, 3, 4], "centred_el": [2, 3, 4], "compute_uvw_coeffici": [2, 3, 4], "compute_band_rot": [2, 3, 4], "compute_rm": [2, 3, 4, 46, 54], "compute_rotation_matrix": [2, 3, 4], "compute_rotation_vector": [2, 3, 4], "convert_a_to_b_format": [2, 3, 4], "db_to_gain": [2, 3, 4], "dot": [2, 3, 4, 149], "equalise_rms_level": [2, 3, 4], "rotation_control_vector": [2, 3, 4], "smoothstep": [2, 3, 4], "demo_data": [2, 3, 132, 133, 149], "get_demo_data": [2, 3, 5], "get_hrirs_demo": [2, 3, 5], "get_interferers_demo": [2, 3, 5], "get_metadata_demo": [2, 3, 5, 149], "get_rooms_demo": [2, 3, 5], "get_scenes_demo": [2, 3, 5, 149], "get_targets_demo": [2, 3, 5], "scene_builder_cec2": [2, 3], "interferertyp": [2, 3, 6], "roombuild": [2, 3, 6], "roundingfloat": [2, 3, 6], "scenebuild": [2, 3, 6], "add_interferer_to_scene_inn": [2, 3, 6], "add_this_target_to_scen": [2, 3, 6], "build_room": [2, 3, 6], "generate_rot": [2, 3, 6], "generate_snr": [2, 3, 6], "get_num_post_sampl": [2, 3, 6], "get_num_pre_sampl": [2, 3, 6], "get_random_hrir_set": [2, 3, 6], "get_random_interferer_offset": [2, 3, 6], "get_room_dim": [2, 3, 6], "get_room_nam": [2, 3, 6], "get_vector": [2, 3, 6], "make_rpf_filename_dict": [2, 3, 6], "read_rpf_fil": [2, 3, 6], "select_interferer_typ": [2, 3, 6], "select_random_interfer": [2, 3, 6], "set_random_se": [2, 3, 6], "scene_renderer_cec1": [2, 3], "scene_renderer_cec2": [2, 3], "util": [2, 3, 36, 59, 71, 72], "engin": [2, 50, 59, 147], "loss": [2, 10, 12, 25, 26, 27, 28, 30, 32, 33, 39, 41, 42, 44, 45, 58, 74, 90, 133, 136, 137, 139, 142, 143, 144, 149], "sisnrloss": [2, 10, 11], "snrloss": [2, 10, 11], "stoilevelloss": [2, 10, 11], "stoiloss": [2, 10, 11], "enhanc": [2, 58, 59, 63, 64, 66, 68, 69, 70, 73, 75, 77, 81, 82, 91, 92, 99, 100, 102, 126, 127, 129, 130, 137, 148, 149], "dnn": [2, 13, 58, 148], "dsp": [2, 13], "gha": [2, 13, 137], "compressor": [2, 13, 28, 52, 65, 73, 101, 129, 140, 141, 147], "nalr": [2, 13, 65, 73], "evalu": [2, 45, 58, 59, 63, 64, 67, 69, 70, 72, 73, 81, 82, 91, 92, 99, 100, 103, 104, 108, 114, 121, 122, 126, 127, 136, 142], "haaqi": [2, 24, 28, 66, 75, 132, 133, 134], "haspi": [2, 24, 58, 102, 103, 123, 125, 129, 140, 141, 147], "hasqi": [2, 24, 28, 102, 129, 147], "mbstoi": [2, 24, 58, 106, 109, 115, 136, 137, 142], "msbg": [2, 24, 44, 58, 84, 107, 136, 137, 139, 142, 143, 144], "predictor": [2, 59], "torch_msbg": [2, 43], "msbghearingmodel": [2, 43, 44], "torchloudnorm": [2, 43, 44], "torch_stoi": [2, 43], "negstoiloss": [2, 43, 45], "masked_mean": [2, 43, 45], "masked_norm": [2, 43, 45], "meanvar_norm": [2, 43, 45], "car_noise_simul": [2, 46], "audiogram": [2, 20, 22, 23, 25, 26, 27, 28, 30, 32, 33, 38, 39, 44, 46, 65, 73, 101, 129, 137, 141, 147, 149], "listen": [2, 6, 20, 21, 25, 26, 27, 30, 32, 33, 46, 47, 58, 65, 66, 72, 73, 74, 75, 81, 82, 84, 102, 104, 105, 107, 129, 134, 137, 139, 140, 141, 142, 147, 148], "file_io": [2, 46], "read_jsonl": [2, 46, 51], "read_sign": [2, 46, 51], "write_jsonl": [2, 46, 51], "write_sign": [2, 46, 51], "flac_encod": [2, 46], "filedecod": [2, 46, 52], "flacencod": [2, 46, 52], "wavencod": [2, 46, 52], "read_flac_sign": [2, 46, 52], "results_support": [2, 46], "resultsfil": [2, 46, 53, 99, 100, 102, 126, 127, 129], "signal_process": [2, 46], "clip_sign": [2, 46, 54], "denormalize_sign": [2, 46, 54], "normalize_sign": [2, 46, 54], "resampl": [2, 28, 45, 46, 47, 51, 54, 65, 143, 144], "to_16bit": [2, 46, 54], "source_separation_support": [2, 46], "get_devic": [2, 46, 55, 63, 64, 65], "separate_sourc": [2, 46, 55, 63, 64, 65], "pyclar": [2, 57, 58], "rotat": [3, 4, 6, 73, 79, 133], "music": [3, 6, 25, 26, 28, 65, 68, 74, 75, 77, 134, 140, 147], "nois": [3, 6, 20, 25, 26, 27, 28, 29, 30, 32, 33, 39, 41, 42, 45, 49, 50, 58, 73, 75, 79, 132, 133, 134, 136, 137, 139, 140, 143, 144, 147, 149], "speech": [3, 6, 20, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 39, 41, 45, 58, 132, 133, 134, 136, 137, 139, 140, 141, 146, 147, 148, 149], "build_from_rpf": [3, 6], "get_room": [3, 6], "load": [3, 6, 72, 73, 103], "rebuild_dict": [3, 6], "save_room": [3, 6], "add_snr_to_scen": [3, 6], "add_interferer_to_scen": [3, 6], "add_listener_details_to_scen": [3, 6], "add_target_to_scen": [3, 6], "initialise_scen": [3, 6], "instantiate_scen": [3, 6, 91, 96, 97], "save_scen": [3, 6], "higher": [4, 20, 28, 149], "ambison": 4, "process": [4, 6, 13, 14, 16, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 45, 46, 52, 54, 58, 65, 66, 72, 84, 102, 107, 123, 129, 132, 133, 134, 136, 137, 139, 141, 143, 144], "resolut": 4, "sourc": [4, 5, 6, 11, 12, 14, 16, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 79, 83, 84, 89, 90, 93, 94, 97, 101, 102, 103, 106, 107, 109, 115, 123, 124, 125, 128, 129, 130, 132, 134], "method": [4, 6, 12, 28, 41, 47, 49, 50, 52, 54, 57, 90, 125, 140], "signal": [4, 6, 11, 14, 16, 21, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 49, 50, 51, 52, 54, 58, 65, 66, 71, 72, 73, 74, 75, 77, 84, 101, 102, 107, 123, 129, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147], "numpi": [4, 20, 41, 42, 45, 47, 51, 52, 73, 75, 149], "ndarrai": [4, 14, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 47, 50, 51, 52, 54, 65, 71, 72, 73, 74, 75, 84, 102, 124, 125, 129], "rotation_vector": 4, "hoa": 4, "precomput": 4, "matric": 4, "paramet": [4, 5, 6, 12, 14, 16, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 65, 67, 68, 71, 72, 73, 74, 75, 77, 79, 90, 106, 109, 115, 123, 132, 133, 134, 135, 140, 149], "arrai": [4, 14, 20, 22, 27, 28, 29, 30, 31, 39, 41, 42, 51, 52, 73, 75, 124, 149], "vector": [4, 6, 25, 26, 27, 28, 29, 30, 31, 32, 33, 45], "radian": 4, "return": [4, 5, 6, 11, 12, 14, 16, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 47, 49, 50, 51, 52, 54, 55, 65, 68, 71, 72, 73, 74, 75, 77, 79, 84, 90, 107, 123, 147, 149], "transform": [4, 28, 36, 143, 144], "type": [4, 6, 12, 14, 16, 20, 21, 22, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 41, 42, 47, 49, 50, 51, 52, 53, 54, 55, 65, 68, 71, 72, 73, 74, 75, 79, 90, 123], "int": [4, 6, 12, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 49, 50, 51, 52, 54, 55, 65, 71, 72, 73, 75, 79, 90, 149], "b": [4, 16, 20, 28, 149], "rotation_matric": 4, "numba": 4, "list": [4, 6, 12, 14, 20, 21, 22, 25, 26, 28, 31, 32, 33, 39, 41, 51, 53, 65, 66, 71, 72, 90, 102, 129, 132, 133, 134, 146, 149], "function": [4, 5, 6, 12, 18, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 39, 44, 45, 50, 51, 55, 65, 72, 73, 75, 79, 90, 106, 109, 115, 139, 141, 143, 144, 147, 149], "matrix": [4, 28, 29, 31, 36, 42], "calcul": [4, 20, 22, 25, 26, 27, 28, 29, 30, 32, 33, 41, 42, 137, 140, 141, 147, 149], "index": [4, 6, 25, 26, 27, 30, 32, 33, 34, 35, 56, 58, 65, 132, 133, 134, 140, 141, 146, 147, 149], "valu": [4, 6, 12, 20, 23, 25, 26, 28, 29, 31, 32, 33, 36, 38, 39, 41, 45, 51, 53, 71, 79, 90, 124, 125, 141, 146, 149], "r": [4, 6, 16, 23, 25, 26, 28, 32, 33, 45, 58, 65, 68, 132, 133, 134, 136, 139, 140, 141, 147, 149], "float": [4, 6, 14, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 49, 50, 51, 52, 53, 54, 55, 65, 71, 72, 73, 74, 75, 79, 94, 102, 123, 124, 129, 149], "degre": [4, 38, 73, 79], "n": [4, 11, 16, 28, 39, 41, 134, 139, 143, 149], "coeffici": [4, 27, 28, 29, 30, 36, 41, 142], "initialis": [4, 6, 132, 134], "rotation_degre": 4, "upper": [4, 28, 42], "spheric": 4, "harmon": [4, 50], "y": [4, 11, 16, 27, 28, 30, 36, 106, 109, 115, 124, 125, 134, 139], "lower": [4, 28, 36, 42, 45], "valid": [4, 6, 12, 28, 34, 35, 47, 72, 90, 131, 132, 133, 134, 136, 139, 140, 147], "input": [4, 16, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 38, 41, 42, 44, 45, 52, 54, 65, 74, 77, 79, 125, 137, 141, 147], "m": [4, 16, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 42, 132, 133, 134, 139, 140, 141, 146, 147], "hoa_impulse_respons": 4, "convolv": 4, "impuls": [4, 28, 36, 73, 75, 133, 140, 147], "respons": [4, 28, 31, 73, 75, 132, 133, 134, 139, 140, 141, 142, 147], "sampl": [4, 6, 16, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 51, 52, 54, 55, 65, 71, 72, 75, 125, 132, 133, 135, 137, 141, 149], "convol": 4, "np": [4, 14, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 41, 44, 50, 51, 52, 54, 65, 71, 72, 73, 74, 75, 125, 149], "ambisonic_sign": 4, "hrir": [4, 6, 73, 140, 141, 147], "dict": [4, 6, 20, 22, 31, 47, 49, 50, 53, 65, 66, 68, 72, 73, 74, 75, 77, 79, 94, 123, 124, 149], "str": [4, 5, 6, 16, 18, 21, 22, 39, 41, 44, 47, 50, 51, 52, 53, 54, 55, 65, 66, 68, 71, 72, 73, 75, 77, 79, 94, 102, 123, 129], "hrir_metadata": 4, "perform": [4, 12, 18, 21, 36, 41, 44, 65, 131, 132, 133, 134, 141, 147, 149], "binaur": [4, 34, 35, 36, 58, 73, 75, 84, 107, 133, 136, 139, 140], "mixdown": 4, "hrir_filenam": 4, "string": [4, 6, 22, 41, 65, 75, 123, 149], "name": [4, 6, 21, 51, 53, 57, 71, 73, 123, 141, 146, 149], "select": [4, 6, 12, 27, 30, 32, 33, 39, 55, 65, 79, 132, 133, 134, 140, 141, 147], "decod": [4, 13, 15, 16, 46, 52, 144], "stereo": [4, 21, 52, 65, 73, 132, 133, 141, 147, 149], "audio": [4, 28, 32, 33, 45, 51, 52, 55, 65, 71, 73, 132, 133, 134, 135, 139, 147, 149], "refer": [4, 11, 20, 25, 26, 27, 28, 29, 30, 32, 33, 39, 45, 50, 54, 58, 73, 75, 136, 144, 149], "row": [4, 53, 144], "col": 4, "center": [4, 20, 23, 28, 29, 36], "element": [4, 41, 149], "column": [4, 29, 53, 54], "comput": [4, 12, 18, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 54, 55, 65, 74, 90, 102, 123, 124, 129, 132, 133, 134, 137, 140, 141, 142, 143, 144, 147, 149], "el": 4, "tupl": [4, 6, 14, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 41, 50, 52, 54, 55, 65, 66, 71, 72, 74, 75, 123], "submatrix": 4, "rotationmatric": 4, "previou": [4, 140], "current": [4, 38, 47], "submatric": 4, "destin": 4, "input_sign": [4, 39, 42], "axi": [4, 45, 47, 149], "rm": [4, 11, 25, 26, 27, 28, 29, 30, 32, 33, 39, 41, 44, 54, 66, 137], "along": [4, 28], "given": [4, 6, 12, 21, 22, 31, 36, 42, 47, 49, 55, 65, 66, 71, 73, 75, 90, 101, 102, 123, 125, 129, 132, 133, 134, 140, 147, 149], "param": [4, 50, 65, 68, 73, 84, 105, 106, 107, 108, 109, 114, 115, 122, 125], "mean": [4, 6, 12, 28, 41, 45, 52, 54, 124, 134, 137, 141], "squar": [4, 28, 41, 124, 137], "default": [4, 5, 6, 20, 22, 23, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 39, 41, 42, 47, 51, 53, 68, 71, 77, 79, 132, 133, 141, 144, 146, 149], "foa_rotmat": 4, "gener": [4, 6, 21, 28, 39, 41, 49, 50, 58, 73, 75, 79, 84, 107, 132, 133, 134, 136, 137, 138, 141, 142, 143, 144, 146, 147, 149], "soundfield": 4, "_": [4, 28, 34, 35, 149], "azimuth": 4, "theta": 4, "elev": [4, 136], "phi": 4, "arraylik": 4, "expand": [4, 38], "ivan": 4, "j": [4, 20, 28, 34, 35, 45, 132, 133, 134, 136, 139, 140, 141, 142, 146, 147], "ruedenberg": 4, "k": [4, 16, 132, 133, 134, 140, 141, 146, 147], "1996": 4, "real": [4, 45], "direct": [4, 39, 42, 73], "phy": 4, "chem": 4, "100": [4, 20, 21, 27, 28, 30, 32, 33, 39, 49, 50, 106, 109, 115, 137, 141, 143, 144, 149], "15": [4, 20, 28, 34, 35, 141, 147, 149], "6342": 4, "6347": 4, "pub": 4, "ac": [4, 28, 136, 140, 147, 149], "doi": [4, 28, 34, 35, 132, 133, 134], "10": [4, 20, 27, 28, 30, 31, 34, 35, 44, 55, 65, 132, 133, 134, 140, 141, 143, 144, 149], "1021": 4, "jp953350u": 4, "jp9833350": 4, "gorzel": 4, "allen": 4, "kelli": 4, "kammerl": 4, "gungormusl": 4, "yeh": 4, "h": [4, 16, 34, 35, 45, 49, 50, 132, 133, 134, 139, 140, 141, 146, 147], "boland": 4, "f": [4, 14, 37, 38, 41, 45, 134, 136, 137, 142, 149], "effici": [4, 28, 149], "encod": [4, 46, 52, 132, 133, 144], "sound": [4, 28, 149], "reson": 4, "In": [4, 20, 45, 47, 51, 52, 58, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 147, 149], "proc": 4, "ae": [4, 28], "intern": [4, 131, 132, 133, 134, 136, 139, 149], "confer": [4, 132, 134, 139], "immers": 4, "march": [4, 27, 28, 29, 30, 31], "2019": [4, 29, 31, 133, 134, 139], "lib": [4, 28, 149], "brows": [4, 28], "cfm": [4, 28], "elib": [4, 28], "20446": 4, "start_angl": 4, "end_angl": 4, "signal_length": 4, "start_idx": 4, "end_idx": 4, "_description_": 4, "front_left_up": 4, "front_right_down": 4, "back_left_down": 4, "back_right_up": 4, "convert": [4, 28, 41, 54, 132, 149], "1st": [4, 28, 58, 143, 144, 148], "gerzon": 4, "michael": [4, 136, 142], "part": [4, 20, 50, 143, 144], "two": [4, 16, 20, 22, 28, 29, 57, 58, 73, 124, 132, 133, 136, 139, 142, 147], "techniqu": 4, "1975": 4, "front": [4, 21, 73, 141, 147, 149], "left": [4, 20, 21, 22, 27, 30, 32, 33, 34, 35, 36, 47, 65, 68, 73, 74, 75, 132, 134, 141, 147, 149], "up": [4, 20, 38, 41, 45, 135, 137, 141, 149], "down": [4, 28, 54], "back": [4, 54, 149], "rais": [4, 6, 21, 28, 29, 41, 51, 52, 125, 133], "typeerror": [4, 6, 125], "must": [4, 16, 28, 41, 52, 79, 149], "valueerror": [4, 6, 21, 41, 52], "same": [4, 16, 25, 26, 27, 28, 30, 32, 33, 39, 41, 45, 79, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 147, 149], "dimens": [4, 6, 16, 45, 149], "4xn": 4, "contain": [4, 6, 16, 20, 28, 29, 36, 41, 45, 55, 72, 73, 75, 79, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149], "x": [4, 6, 11, 16, 18, 27, 28, 30, 31, 32, 33, 36, 38, 42, 44, 45, 58, 106, 109, 115, 124, 125, 132, 133, 134], "z": [4, 34, 35, 139], "nd": [4, 27, 30], "db": [4, 20, 22, 25, 26, 27, 28, 29, 30, 32, 33, 36, 38, 39, 41, 44, 47, 50, 73, 74, 137, 149], "gain": [4, 13, 19, 20, 22, 25, 26, 27, 28, 30, 32, 33, 41, 73, 132, 133, 134, 135, 137, 140, 141, 147, 149], "wrap": 4, "njit": 4, "equalis": [4, 25, 26, 32, 33, 36, 73], "normalis": [4, 41, 65, 73, 140, 142, 147], "array_length": 4, "start_index": 4, "end_index": 4, "smooth": [4, 28], "map": [4, 28, 51, 65, 106, 109, 115, 125, 146, 149], "control": [4, 28, 38, 141, 149], "length": [4, 16, 28, 29, 39, 41, 55, 65], "start": [4, 6, 39, 41, 51, 132, 133, 137, 149], "x_min": 4, "x_max": 4, "clamp": 4, "minimum": [4, 34, 35, 71, 79], "maximum": [4, 20, 22, 28, 31, 34, 35, 36, 71, 73, 79, 137], "factor": [4, 20, 28, 42, 50, 65], "download": [5, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 146, 147, 149], "demo": [5, 134], "metadata_url": 5, "target_dir": 5, "none": [5, 6, 14, 16, 18, 21, 23, 27, 28, 29, 30, 31, 39, 41, 44, 45, 49, 51, 52, 55, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 79, 83, 84, 89, 90, 93, 94, 97, 101, 102, 106, 107, 109, 115, 123, 124, 125, 128, 129, 130, 149], "url": 5, "googl": [5, 143, 144, 146, 149], "drive": [5, 143, 144, 146], "clarity_data": [5, 136, 140, 141, 142, 143, 144, 146, 147, 149], "creat": [5, 21, 47, 52, 53, 57, 135, 141, 143, 144, 149], "doesn": 5, "exist": [5, 51, 52, 53, 140, 141, 147], "hiri": 5, "interfer": [5, 6, 36, 136, 137, 140, 141, 147, 149], "metadata": [5, 6, 47, 79, 123, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 146, 147], "room": [5, 6, 73, 75, 133, 136, 140, 147, 149], "secn": 5, "target": [5, 6, 45, 50, 71, 73, 136, 137, 140, 141, 147, 149], "code": [6, 34, 35, 36, 51, 56, 58, 131, 132, 133, 134, 136, 138, 140, 141, 142, 143, 144, 145, 147, 149], "build": [6, 13, 23, 139, 140, 149], "scene": [6, 58, 66, 72, 73, 75, 79, 102, 103, 129, 134, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147], "json": [6, 60, 79, 103, 132, 134, 135, 140, 141, 142, 143, 144, 147, 149], "enum": 6, "handl": [6, 12, 90, 132, 133, 134, 149], "rpf_locat": 6, "n_interfer": [6, 149], "3": [6, 25, 26, 28, 36, 38, 39, 45, 49, 50, 57, 133, 134, 136, 139, 140, 141, 142, 143, 144, 147, 149], "n_room": 6, "10000": [6, 34, 35], "start_room": 6, "extract": [6, 67, 149], "info": 6, "raven": 6, "rpf": [6, 136, 140, 147], "store": [6, 21, 42, 55, 65, 132, 133, 134, 137, 140, 141, 143, 144, 146, 147, 149], "definit": 6, "expect": [6, 51, 133], "n_scene": [6, 141], "first": [6, 28, 31, 41, 50, 73, 79, 106, 109, 115, 134, 136, 140, 141, 143, 144, 147, 148, 149], "filenam": [6, 21, 47, 51, 52, 65, 73, 149], "dictionari": [6, 47, 49, 50, 51, 65, 67, 68, 72, 73, 74, 75, 77, 79, 149], "round": [6, 28, 79], "4": [6, 20, 21, 28, 31, 38, 44, 45, 49, 79, 134, 136, 139, 140, 141, 144, 147, 149], "decim": [6, 79], "rb": 6, "scene_dataset": 6, "snr_rang": 6, "shuffle_room": 6, "add": [6, 16, 25, 26, 28, 29, 32, 33, 36, 39, 53, 55, 65, 71, 73, 75, 102, 129, 133, 149], "ratio": [6, 20, 22, 28, 38, 137], "snr": [6, 73, 79, 133, 137, 141, 149], "rang": [6, 20, 28, 34, 35, 36, 45, 51, 71, 137, 140, 141], "speech_interfer": 6, "noise_interfer": 6, "music_interfer": 6, "start_time_rang": 6, "end_early_time_rang": 6, "descript": [6, 14, 58, 149], "interef": 6, "randomli": [6, 79, 137, 143, 144, 149], "point": [6, 39, 41, 51, 132, 133, 134, 137, 146, 147, 149], "end": [6, 45, 51, 58, 137, 139, 149], "head": [6, 73, 75, 79, 133, 135], "relative_start_time_rang": 6, "duration_mean": 6, "duration_sd": 6, "angle_initial_mean": 6, "angle_initial_sd": 6, "angle_final_rang": 6, "random": [6, 29, 49, 75, 79, 123, 132, 133, 134, 140, 147, 149], "offset": [6, 16, 29, 31, 51], "turn": 6, "deviat": [6, 28, 50], "dataset": [6, 65, 72, 132, 133, 134, 146, 147, 149], "target_speak": 6, "target_select": 6, "pre_samples_rang": 6, "post_samples_rang": 6, "speaker": 6, "sequenti": 6, "prior": [6, 29], "onset": [6, 29], "player": 6, "after": [6, 28, 41, 141, 147, 149], "room_select": 6, "scene_start_index": 6, "train": [6, 12, 15, 16, 17, 18, 43, 44, 65, 72, 81, 88, 125, 132, 133, 134, 135, 136, 138, 140, 141, 142, 146, 147], "eval": [6, 136, 149], "id": [6, 46, 47, 68, 75, 77, 79, 139, 149], "instanti": [6, 149], "chosen": [6, 22], "possibl": [6, 149], "nonspeech": 6, "accord": [6, 20, 133, 149], "care": [6, 18, 44], "match": [6, 28, 140, 147], "field": [6, 20, 39, 47, 149], "ie": [6, 41], "test": [6, 63, 64, 69, 70, 81, 88, 125, 132, 133, 142, 143, 144], "suppli": [6, 149], "kei": [6, 41, 47, 79, 149], "partit": 6, "idea": [6, 138, 149], "split": [6, 41, 65, 75, 132, 134, 136, 140, 141, 143, 144, 146, 147], "subcondit": 6, "draw": 6, "equal": [6, 16, 25, 26, 28, 32, 33, 38, 137], "wash": 6, "machin": [6, 136, 139, 142, 149], "microwav": 6, "etc": [6, 55, 65, 149], "exemplar": 6, "note": [6, 34, 35, 36, 45, 47, 65, 79, 132, 133, 134, 137, 138, 140, 141, 143, 144, 146, 147, 149], "modifi": [6, 28, 34, 35, 58, 140, 149], "integ": [6, 16, 51, 149], "between": [6, 12, 20, 28, 29, 49, 50, 55, 65, 90, 106, 109, 115, 124, 144, 147], "detail": [6, 27, 30, 36, 141, 143, 144, 148], "taken": [6, 20], "cec2": [6, 58, 59, 61, 123, 146, 147], "specif": [6, 20, 28, 131, 141, 149], "complet": [6, 147, 149], "target_fil": 6, "interferer_fil": 6, "content": [6, 59, 133, 146, 149], "relat": [6, 73, 75], "represent": [6, 16, 39, 58, 143, 148], "suitabl": 6, "behaviour": [6, 27, 30], "studi": 6, "hadlei": 6, "et": [6, 20, 28, 41, 136, 139], "al": [6, 20, 28, 41, 136, 139], "todo": 6, "ref": [6, 28, 29, 54, 102, 129, 143, 144], "uniformli": [6, 28], "view_vector": 6, "motion": [6, 28], "uniform": 6, "distribut": [6, 132, 133, 134, 141], "required_sampl": 6, "masker": [6, 45], "segment": [6, 25, 26, 28, 32, 33, 55, 65, 149], "late": [6, 132, 134], "overrun": 6, "go": [6, 149], "text": 6, "search": [6, 36, 56, 149], "form": [6, 29, 149], "projectnam": 6, "cuboidroom_5": 6, "9x3": 6, "4186x2": 6, "9": [6, 20, 28, 141, 143, 144, 149], "three": [6, 28, 137, 140, 141, 147, 149], "5": [6, 14, 20, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 39, 49, 50, 52, 132, 134, 136, 137, 140, 143, 144, 147, 149], "digit": [6, 132, 133, 134, 140, 147], "vector_nam": 6, "quantiti": 6, "Will": 6, "eg": 6, "sourceviewvector": 6, "095": 6, "995": 6, "000": [6, 28, 132], "scene_str": 6, "locat": [6, 36, 41], "rpf_filenam": 6, "sourceposit": 6, "allowed_n_interfer": 6, "drawn": 6, "sublist": 6, "item": [6, 79, 149], "constraint": 6, "desir": [6, 73], "found": [6, 58, 141, 149], "random_se": [6, 49], "cal_sisnr": [10, 11], "forward": [10, 11, 12, 15, 16, 17, 18, 39, 43, 44, 45, 90], "l2norm": [10, 11], "alpha": [10, 11], "gamma_a": [10, 11, 44], "measure_loud": [10, 11], "common_step": [10, 12, 88, 90], "configure_optim": [10, 12], "on_save_checkpoint": [10, 12], "on_validation_epoch_end": [10, 12], "train_dataload": [10, 12], "training_step": [10, 12, 90], "val_dataload": [10, 12], "validation_step": [10, 12, 90], "arg": [11, 12, 21, 31, 45, 90], "kwarg": [11, 12, 45, 90], "ep": [11, 45], "1e": [11, 28, 147], "08": 11, "argument": [11, 12, 25, 26, 27, 28, 30, 31, 32, 33, 90, 149], "separ": [11, 29, 49, 55, 65, 132, 134, 139, 141, 143, 149], "tensor": [11, 12, 16, 18, 44, 45, 55, 65, 90], "sisnr": 11, "mat": 11, "keepdim": [11, 45], "fals": [11, 16, 39, 45, 47, 51, 52, 53, 54, 65, 66, 71, 72, 102, 129], "measur": [11, 34, 35, 36, 41, 44, 45, 47, 51, 58, 136, 139, 148], "mse": 11, "adopt": [12, 16], "asteroid": 12, "team": [12, 68, 77, 149], "blob": [12, 16], "master": [12, 20, 58, 136], "lightningmodul": 12, "batch": [12, 16, 45, 55, 65, 67, 76, 90], "batch_nb": [12, 90], "true": [12, 22, 39, 44, 45, 47, 49, 50, 51, 52, 65, 79, 90, 137, 141, 147], "step": [12, 39, 57, 90, 131, 135], "unpack": [12, 90, 132, 133, 134, 136, 137, 138, 140, 141, 146, 147], "loader": [12, 90], "model": [12, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 41, 42, 44, 55, 58, 65, 72, 90, 104, 105, 106, 108, 109, 114, 115, 132, 134, 136, 137, 139, 142, 144, 146], "pytorch": [12, 55, 65, 90, 132, 134, 139], "lightn": [12, 90], "rest": [12, 90], "torch": [12, 44, 45, 55, 65, 90, 143, 144], "case": [12, 51, 90], "els": [12, 51, 90], "_batch_nb": [12, 90], "epoch": [12, 90], "_train": [12, 90], "bool": [12, 16, 18, 21, 22, 39, 41, 44, 45, 47, 49, 50, 51, 52, 53, 54, 65, 66, 71, 90], "whether": [12, 16, 45, 49, 53, 54, 65, 75, 90, 140], "mode": [12, 25, 26, 32, 33, 90], "onli": [12, 20, 21, 28, 41, 45, 55, 65, 79, 90, 132, 134, 144, 146, 149], "fundament": [12, 90, 132, 134], "usual": [12, 90], "typic": [12, 90, 149], "overwrit": [12, 90], "subclass": [12, 18, 44, 90], "somehow": [12, 90], "except": [12, 90, 142], "backward": [12, 28, 39, 90], "optimz": [12, 90], "switch": [12, 39, 90], "overwriten": [12, 90], "initi": [12, 36, 79, 141], "optim": [12, 143, 144], "wise": [12, 16], "schedul": 12, "checkpoint": [12, 143, 144], "want": [12, 132, 137, 141, 149], "thing": 12, "log": [12, 28, 29, 47, 60], "hp_metric": 12, "tensorboard": 12, "hparam": 12, "dataload": 12, "backprop": 12, "pl": 12, "mc_conv_tasnet": [13, 15], "channelwiselayernorm": [13, 15, 16], "chomp1d": [13, 15, 16], "convtasnet": [13, 15, 16], "depthwiseseparableconv": [13, 15, 16], "globallayernorm": [13, 15, 16], "spatialencod": [13, 15, 16], "spectralencod": [13, 15, 16], "temporalblock": [13, 15, 16], "temporalconvnet": [13, 15, 16], "chose_norm": [13, 15, 16], "overlap_and_add": [13, 15, 16], "filter": [13, 17, 23, 28, 29, 38, 39, 41, 42, 44, 49, 50, 139, 149], "audiometricfir": [13, 17, 18], "gainrule_camfit": [13, 19], "compute_proportion_overlap": [13, 19, 20], "gainrule_camfit_compr": [13, 19, 20], "gainrule_camfit_linear": [13, 19, 20], "isothr": [13, 19, 20], "gha_interfac": [13, 19], "ghahearingaid": [13, 19, 21], "gha_util": [13, 19], "fittingparam": [13, 19, 20, 22], "gaintabl": [13, 19, 21, 22], "format_gaint": [13, 19, 22], "get_gaint": [13, 19, 22], "multifit_apply_noiseg": [13, 19, 22], "set_attack": [13, 14], "set_releas": [13, 14], "44100": [14, 18, 21, 38, 39, 41, 44, 50, 71], "releas": [14, 39, 57, 139, 141], "20": [14, 20, 21, 28, 31, 34, 35, 39, 73, 135, 136, 137], "threshold": [14, 20, 22, 23, 25, 26, 28, 29, 32, 33, 41, 44, 47, 136, 137, 147], "attenu": [14, 28, 133], "0001": [14, 143], "rms_buffer_s": 14, "makeup_gain": 14, "_kwarg": 14, "t_msec": 14, "reset_paramet": [15, 16], "kaituoxu": 16, "conv": [16, 139], "tasnet": [16, 139], "channel_s": 16, "layer": [16, 31], "normal": [16, 25, 26, 27, 28, 30, 31, 32, 33, 45, 124], "cln": 16, "cln_y": 16, "chomp_siz": 16, "kpad": 16, "n_spec": 16, "n_spat": 16, "l": [16, 143, 144, 149], "c": [16, 28, 45, 132, 133, 134, 139], "num_channel": 16, "norm_typ": 16, "causal": [16, 140], "mask_nonlinear": 16, "relu": 16, "devic": [16, 18, 21, 44, 55, 65], "mixtur": [16, 55, 65, 134, 135], "est_sourc": 16, "mixture_w": 16, "est_mask": 16, "in_channel": 16, "out_channel": 16, "kernel_s": [16, 44], "stride": 16, "pad": [16, 24, 36, 37, 41, 44], "dilat": 16, "gln": 16, "result": [16, 27, 28, 30, 32, 33, 53, 81, 82, 102, 103, 129, 133, 134, 136, 137, 140, 143, 144, 146, 149], "global": [16, 49], "gln_y": 16, "estim": [16, 27, 30, 32, 33, 45, 55, 65, 132, 134, 136, 137], "nonneg": 16, "weight": [16, 28, 31, 45, 139], "d": [16, 20, 28, 34, 35, 36, 41, 42, 133], "2t": 16, "api": 16, "normliz": 16, "sequenc": [16, 28, 29], "frame_step": 16, "reconstruct": 16, "frame": [16, 34, 35, 36, 41, 44, 45], "potenti": 16, "overlap": [16, 20, 28, 44, 45, 55, 65], "shape": [16, 38, 39, 41, 45, 51, 55, 65, 73, 75, 137], "frame_length": [16, 36], "subsequ": [16, 28], "ha": [16, 25, 26, 27, 28, 30, 32, 33, 45, 47, 51, 106, 109, 115, 137, 140, 141, 146, 147, 149], "output_s": 16, "unknown": 16, "rank": 16, "denot": 16, "less": [16, 41, 149], "cpu": [16, 55, 65], "cuda": [16, 55, 65], "inner": [16, 28], "tensorflow": 16, "r1": 16, "12": [16, 28, 29, 39, 41, 49, 137, 141, 142, 149], "contrib": 16, "op": 16, "reconstruction_op": 16, "sample_r": [18, 21, 23, 27, 28, 30, 32, 33, 34, 35, 36, 39, 41, 42, 44, 45, 50, 51, 52, 54, 55, 65, 71, 72, 73, 75, 102, 129], "nfir": [18, 23, 28], "220": [18, 49], "everi": [18, 36, 44, 141], "overridden": [18, 44, 149], "although": [18, 27, 30, 44], "recip": [18, 44, 56, 58, 59, 132, 133, 134, 140, 143, 144, 146, 147, 149], "afterward": [18, 44, 137], "instead": [18, 44, 45, 65], "sinc": [18, 44, 144, 149], "regist": [18, 44], "while": [18, 44, 55, 65], "silent": [18, 28, 36, 44, 45], "ignor": [18, 44, 65], "create_ha_input": [19, 21], "create_configured_cfgfil": [19, 21], "process_fil": [19, 21], "edge_frequ": [19, 22], "frequenc": [19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 65, 72, 75, 132, 133, 134, 137, 139, 140, 141, 147, 149], "side": [19, 22, 36, 42, 149], "noisegatelevel": [19, 20, 22, 137], "noisegateslop": [19, 20, 22, 137], "sgt": [19, 22], "sgt_uncorr": [19, 22], "a1": 20, "a2": 20, "b1": 20, "b2": 20, "proport": [20, 28, 41], "extent": [20, 28], "6": [20, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 49, 132, 134, 136, 137, 140, 141, 147, 149], "audiogram_left": [20, 22, 46, 47], "audiogram_right": [20, 22, 27, 30, 46, 47], "sfitmodel": 20, "45": [20, 49, 137], "max_output_level": [20, 21, 22, 137], "compress": [20, 22, 28, 52, 65, 132, 133, 137, 149], "cambridg": [20, 28, 58, 136, 139, 142], "rule": [20, 140], "hear": [20, 21, 23, 25, 26, 27, 28, 30, 32, 33, 38, 39, 41, 42, 44, 47, 58, 65, 73, 74, 132, 133, 134, 136, 139, 140, 141, 142, 143, 146, 147, 148, 149], "aid": [20, 21, 28, 58, 65, 73, 132, 133, 134, 136, 139, 140, 141, 142, 146, 147, 149], "fit": [20, 22, 28, 29, 58, 105, 106, 108, 109, 114, 115, 122, 125, 132, 134, 140, 141, 142, 143, 144, 146, 147, 149], "camfit": [20, 58, 137], "openmha": [20, 22, 58, 136, 137], "moor": [20, 28, 41, 136], "1999": [20, 39, 136], "loud": [20, 28, 38, 74, 136], "ii": 20, "multi": [20, 139, 140], "brit": 20, "audiol": 20, "33": 20, "157": 20, "170": 20, "limit": [20, 136, 144], "band": [20, 22, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 137], "exceed": 20, "assum": [20, 22, 25, 26, 27, 28, 30, 32, 33, 41, 55, 57, 65, 141], "ear": [20, 22, 24, 27, 28, 30, 32, 33, 34, 35, 36, 37, 39, 47, 58, 75, 84, 90, 107, 132, 133, 134, 136, 140, 141, 147, 149], "implement": [20, 28, 38, 39, 41, 44, 45, 58, 134, 137, 143, 144, 148, 149], "neg": [20, 28, 29, 45, 143], "origin": [20, 22, 27, 30, 34, 35, 45, 52, 54, 137, 149], "h\u00f6rtech": [20, 58], "copyright": [20, 34, 35, 149], "2007": [20, 28], "2009": 20, "2011": [20, 28, 31, 45], "2013": [20, 25, 26, 27, 28, 30, 32, 33], "2015": [20, 25, 26, 29, 132, 133, 134], "2017": 20, "2018": [20, 34, 35, 47, 136, 139], "ggmbh": 20, "softwar": [20, 22, 34, 35, 134, 137], "licenc": 20, "condit": [20, 25, 26, 32, 33, 34, 35, 136, 139], "amplif": [20, 21, 27, 28, 30, 132, 134, 137, 139, 140, 141, 147, 149], "spl": [20, 25, 26, 27, 28, 29, 30, 32, 33, 38, 41, 44, 137], "slope": [20, 22, 28, 32, 33, 41], "below": [20, 22, 28, 74, 131, 137, 141, 148, 149], "rate": [20, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 41, 45, 51, 52, 54, 55, 65, 133, 137, 149], "variabl": [20, 38, 39, 49, 132, 133, 134, 141, 146, 147, 149], "depend": [20, 39, 137, 139, 140, 149], "insert": [20, 22, 137], "tabl": [20, 22, 144], "gate": 20, "expans": [20, 38], "linear": [20, 25, 26, 28, 32, 33, 41, 47, 149], "describ": 20, "glasberg": [20, 28, 136], "1998": 20, "32": [20, 28, 137, 149], "317": 20, "335": 20, "formula": [20, 28], "intercept": 20, "khz": [20, 28, 137], "becaus": [20, 45, 73, 149], "vari": [20, 28, 137, 149], "much": [20, 149], "1khz": 20, "5khz": 20, "anywai": [20, 144], "0db": [20, 137], "1db": 20, "extend": [20, 45, 47, 132, 134], "last": [20, 41, 75, 132, 133, 134, 140, 147], "saud": 20, "subject": [20, 28, 132, 133], "hl": [20, 23, 47, 74], "compr_thr_input": 20, "compr_thr_gain": 20, "compression_ratio": [20, 28], "subfunct": [20, 22], "dynam": [20, 28, 34, 35], "dc": [20, 21, 28], "minu": 20, "minima": 20, "distanc": [20, 28], "38": [20, 137], "interpol": [20, 47], "plu": [20, 28], "convers": [20, 28], "over": [20, 27, 28, 29, 30, 31, 143, 144, 146, 149], "110": [20, 49], "uncorrect": 20, "vsdesf": 20, "hz": [20, 23, 25, 26, 27, 28, 29, 30, 32, 33, 41, 47, 149], "12500": 20, "iso": 20, "226": 20, "2003": 20, "14000": 20, "18000": 20, "389": 20, "7": [20, 28, 132, 133, 134, 139, 140, 141, 147], "2005": 20, "20000": 20, "contour": [20, 28], "centr": [20, 27, 30, 36, 38, 137, 149], "177": 20, "297": 20, "500": [20, 23, 25, 26, 27, 28, 30, 32, 33, 41, 47, 137, 140, 141], "841": 20, "1414": 20, "2378": 20, "4000": [20, 23, 25, 26, 27, 28, 30, 32, 33, 47, 137], "6727": 20, "11314": 20, "ahr": [21, 39, 137], "audf": [21, 22], "cfg_file": 21, "prerelease_combination4_smooth": 21, "noise_gate_level": 21, "noise_gate_slop": 21, "cr_level": [21, 22, 137], "equiv_0db_spl": [21, 39], "test_nbit": 21, "16": [21, 25, 26, 32, 33, 51, 54, 132, 149], "infile_nam": 21, "merged_filenam": 21, "baselin": [21, 58, 61, 62, 63, 69, 81, 91, 99, 104, 121, 126, 143, 144, 145, 148], "wav": [21, 23, 44, 45, 51, 52, 60, 71, 73, 84, 132, 134, 135, 140, 147, 149], "ch1": [21, 149], "rear": 21, "ch3": [21, 149], "microphon": [21, 133, 135, 141, 147, 149], "merged_file_nam": 21, "inconsist": 21, "input_fil": [21, 52], "output_fil": [21, 52], "formatted_sgt": 21, "cfg_template_fil": 21, "jinja2": 21, "cfg": [21, 22, 79, 83, 84, 89, 90, 93, 94, 97, 101, 102, 103, 106, 107, 109, 115, 123, 124, 125, 128, 129, 130, 149], "correct": [21, 22, 28, 39, 124, 136, 146, 149], "peak": [21, 28, 132, 134], "headroom": [21, 137], "cfg_filenam": 21, "outfile_nam": 21, "One": [21, 39, 131, 149], "dry_run": 21, "dry": 21, "typeddict": [22, 41], "noisegate_corr": 22, "long": [22, 28, 141, 147], "boolean": [22, 49, 65], "noiseg": 22, "noisegate_level": 22, "noisegate_slop": 22, "replac": [22, 136, 140, 141], "gui": 22, "interfac": 22, "gaintable_camfit_compr": 22, "dim": [22, 45], "gain_tabl": 22, "sfit_model_frequ": 22, "sfit_model_level": 22, "libmultifit": 22, "fft": [22, 36], "filterbank": [22, 24, 27, 28, 29, 30, 37, 38, 41, 149], "built": [23, 41], "nal": [23, 25, 26, 28, 32, 33, 58, 65, 68, 132, 133, 134, 140, 141, 147, 149], "fir": [23, 29, 39, 41, 44, 139], "dimension": 23, "amplifi": [23, 101, 129, 132], "250": [23, 25, 26, 27, 28, 30, 32, 33, 47, 137], "1000": [23, 25, 26, 27, 28, 30, 32, 33, 47, 133, 137], "2000": [23, 25, 26, 27, 28, 30, 32, 33, 47, 137], "6000": [23, 25, 26, 27, 28, 30, 32, 33, 137, 138], "cf": [23, 36], "delai": [23, 28, 36, 38, 136], "compute_haaqi": [24, 25, 26], "haaqi_v1": [24, 25, 26], "eb": [24, 27], "ave_covary2": [24, 27, 28], "bandwidth_adjust": [24, 27, 28], "basilar_membrane_add_nois": [24, 27, 28], "bm_covari": [24, 27, 28], "center_frequ": [24, 27, 28, 29], "convert_rms_to_sl": [24, 27, 28], "ear_model": [24, 27, 28, 30], "env_compress_basilar_membran": [24, 27, 28], "env_smooth": [24, 27, 28], "envelope_align": [24, 27, 28], "envelope_sl": [24, 27, 28], "gammatone_bandwidth_demodul": [24, 27, 28], "gammatone_basilar_membran": [24, 27, 28], "group_delay_compens": [24, 27, 28], "inner_hair_cell_adapt": [24, 27, 28], "input_align": [24, 27, 28], "loss_paramet": [24, 27, 28], "mel_cepstrum_correl": [24, 27, 28], "melcor9": [24, 27, 28], "melcor9_crosscovmatrix": [24, 27, 28], "middle_ear": [24, 27, 28], "resample_24khz": [24, 27, 28], "spectrum_diff": [24, 27, 28], "ebm": [24, 27], "add_nois": [24, 25, 26, 27, 28, 29, 32, 33], "cepstral_correlation_coef": [24, 27, 29], "env_filt": [24, 27, 29], "fir_modulation_filt": [24, 27, 29], "modulation_cross_correl": [24, 27, 29], "haspi_v2": [24, 27, 30, 31], "haspi_v2_b": [24, 27, 30, 149], "ip": [24, 27], "get_neural_net": [24, 27, 31], "nn_feed_forward": [24, 27, 31], "nn_feed_forward_ensembl": [24, 27, 31], "hasqi_v2": [24, 25, 26, 32, 33], "hasqi_v2_better_ear": [24, 32, 33], "mbstoi_util": [24, 34], "equalisation_cancel": [24, 34, 36], "find_delay_impuls": [24, 34, 36], "remove_silent_fram": [24, 34, 36], "stft": [24, 34, 36, 43, 45], "thirdoct": [24, 34, 36], "msbg_hparam": [24, 37], "cochlea": [24, 37, 39], "compute_envelop": [24, 37, 38], "compute_recruitment_paramet": [24, 37, 38], "gammatone_filterbank": [24, 37, 38], "recruit": [24, 37, 38, 39, 43, 44, 136], "msbg_util": [24, 37], "gtfparamdict": [24, 37, 41], "fir2": [24, 37, 41], "firwin2": [24, 37, 41], "gen_eh2008_speech_nois": [24, 37, 41], "gen_ton": [24, 37, 41], "generate_key_perc": [24, 37, 41], "measure_rm": [24, 37, 41, 43, 44], "read_gtf_fil": [24, 37, 41], "smear": [24, 37, 38, 43, 44, 136], "smearer": [24, 37, 42], "audfilt": [24, 37, 42], "make_smear_mat3": [24, 37, 42], "smear3": [24, 37, 42], "processed_sign": [25, 26], "reference_sign": [25, 26, 28, 73], "processed_sample_r": [25, 26, 27, 30, 32, 33], "reference_sample_r": [25, 26, 27, 30, 32, 33], "level1": [25, 26, 27, 28, 30, 32, 33], "65": [25, 26, 27, 28, 30, 32, 33, 140, 141, 147], "metric": [25, 26, 28, 36, 45, 66, 75, 102, 129, 146, 149], "distort": [25, 26, 27, 28, 29, 30, 32, 33, 149], "eq": [25, 26, 28, 32, 33], "alreadi": [25, 26, 28, 32, 33, 132, 133, 140, 141, 146, 149], "correspond": [25, 26, 27, 28, 30, 31, 32, 33, 132, 135, 140, 147], "reference_freq": [25, 26, 28], "processed_freq": [25, 26, 28], "silence_threshold": [25, 26, 32, 33], "segment_covari": [25, 26, 32, 33], "auditori": [25, 26, 27, 28, 29, 30, 32, 33, 42, 136, 142], "envelop": [25, 26, 27, 28, 29, 30, 32, 33, 38, 45], "cepstral": [25, 26, 27, 28, 29, 30, 32, 33], "correl": [25, 26, 27, 28, 29, 30, 32, 33, 36, 45, 50, 124, 142], "basilar": [25, 26, 28], "membran": [25, 26, 28], "vibrat": [25, 26, 27, 28, 30, 32, 33], "averag": [25, 26, 27, 28, 29, 30, 31, 32, 33, 47, 74, 132, 133, 140, 147], "short": [25, 26, 28, 32, 33, 34, 35, 36, 41, 45, 136, 139], "coher": [25, 26, 32, 33, 50], "present": [25, 26, 27, 30, 32, 33, 41, 47, 79, 146], "nh": [25, 26, 27, 28, 30, 32, 33, 38], "both": [25, 26, 27, 30, 32, 33, 132, 133, 134, 140, 143, 144, 149], "impair": [25, 26, 27, 28, 30, 32, 33, 38, 58, 148, 149], "hearing_loss": [25, 26, 27, 28, 30, 32, 33], "audiometr": [25, 26, 27, 28, 30, 32, 33, 44, 47, 149], "silenc": [25, 26, 28, 29, 32, 33], "sum": [25, 26, 28, 32, 33, 73, 132, 149], "across": [25, 26, 28, 32, 33, 58, 141], "sl": [25, 26, 28, 29, 32, 33], "cross": [25, 26, 28, 29, 32, 33, 124, 142, 149], "covari": [25, 26, 27, 28, 30, 32, 33], "polynomi": [25, 26], "nonlinear": [25, 26, 32, 33], "245": [25, 26], "bmsync5": [25, 26, 32, 33], "755": [25, 26], "cephigh": [25, 26], "std": [25, 26, 28, 32, 33, 143, 144], "spectrum": [25, 26, 28, 29, 32, 33], "norm": [25, 26, 28], "raw": [25, 26, 27, 30, 32, 33, 52], "dloud": [25, 26, 28, 32, 33], "dnorm": [25, 26, 28], "combin": [25, 26, 32, 33, 65, 67, 102, 129, 132, 137, 141, 147], "jame": [25, 26, 27, 28, 29, 30, 31, 32, 33, 131], "kate": [25, 26, 27, 28, 29, 30, 31, 32, 33, 132, 133, 134, 140, 141, 146, 147], "august": [25, 26, 27, 28, 30, 32, 33, 132, 134], "version": [25, 26, 27, 28, 29, 30, 31, 32, 33, 39, 45, 47, 52, 57, 58, 132, 134, 136, 140, 146, 147, 149], "19": [25, 26, 28, 29, 139], "feb": [25, 26, 28], "gerardo": [25, 26, 28, 32, 33], "roa": [25, 26, 28, 32, 33], "dabik": [25, 26, 28, 32, 33], "septemb": [25, 26, 28, 29, 31], "2022": [25, 26, 27, 28, 29, 30, 31, 32, 33, 58, 136, 142, 143, 144, 149], "intellig": [27, 28, 30, 31, 34, 35, 36, 45, 58, 106, 109, 115, 125, 136, 139, 142, 148, 149], "f_lp": [27, 30], "320": [27, 30], "ityp": [27, 28, 30], "bm": [27, 28, 30, 32, 33], "high": [27, 28, 29, 30, 41, 50, 149], "ensembl": [27, 30, 31, 143], "neural": [27, 30, 31], "network": [27, 30, 31], "nb": [27, 30, 51], "deriv": [27, 28, 30, 31, 41], "meant": [27, 30], "shift": [27, 28, 30, 36], "02": [27, 30], "never": [27, 30], "actual": [27, 30, 31], "replic": [27, 30], "105": [27, 30, 38], "further": [27, 30, 47, 137], "intel": [27, 30, 106, 109, 115], "cep": [27, 30], "corr": [27, 28, 30, 32, 33], "basi": [27, 28, 29, 30], "updat": [27, 28, 29, 30, 31, 36, 140, 145], "zuzanna": [27, 28, 29, 30, 31, 142], "podwinska": [27, 28, 29, 30, 31, 142], "reference_left": [27, 30, 32, 33], "reference_right": [27, 30, 32, 33], "processed_left": [27, 30, 32, 33], "processed_right": [27, 30, 32, 33], "better": [27, 30, 32, 33, 58, 132, 134, 140, 141, 147, 149], "ref_left": [27, 30], "ref_right": [27, 30], "proc_left": [27, 30], "proc_right": [27, 30], "behaspi": [27, 30], "score": [27, 30, 31, 32, 33, 67, 75, 76, 103, 106, 109, 115, 123, 124, 125, 129, 132, 133, 134, 137, 140, 141, 142, 147, 149], "signal_cross_covari": 28, "reference_signal_mean_squar": 28, "threshold_db": [28, 41], "lp_filter_ord": 28, "freq_cutoff": 28, "tile": 28, "consider": 28, "divid": [28, 149], "total": [28, 44, 133], "modif": 28, "tan": [28, 34, 35, 139], "reflect": [28, 149], "ihc": [28, 29], "synchron": 28, "johnson": 28, "nchan": [28, 29, 37, 41], "nseg": 28, "av": 28, "freq": [28, 41], "lp_filter": 28, "lp": [28, 29], "cutoff": [28, 29], "ihc_sync_covari": 28, "average_covari": 28, "ct": 28, "bcj": 28, "zacharov": 28, "mattila": 28, "vv": 28, "2004": 28, "predict": [28, 45, 58, 105, 106, 108, 109, 114, 115, 121, 122, 124, 139, 148, 149], "perceiv": 28, "nonlinearli": 28, "eng": 28, "soc": 28, "52": 28, "900": 28, "914": 28, "13013": 28, "dh": 28, "1980": 28, "relationship": [28, 137], "spike": 28, "synchroni": 28, "nerv": 28, "fiber": 28, "tone": [28, 39, 41, 42, 47, 50], "acoust": [28, 73, 132, 133, 134, 136, 139, 140, 141, 147], "am": 28, "68": 28, "1115": 28, "1121": 28, "384982": 28, "28": [28, 49, 140, 147], "2012": 28, "adjust": [28, 36], "30": [28, 34, 35, 49, 50, 141, 146], "octob": [28, 31, 32, 33], "januari": 28, "sync": 28, "februari": [28, 29], "bandwidth_min": 28, "bandwidth_max": 28, "increas": 28, "bandwidth": [28, 38], "ohc": 28, "damag": 28, "21": [28, 29, 47], "june": 28, "low": [28, 29, 38, 50, 149], "gaussian": [28, 29], "re": [28, 29, 41, 42], "oct": [28, 41, 132, 134], "reference_basilar_membran": 28, "processed_basilar_membran": 28, "segment_s": 28, "50": [28, 49, 74, 79, 132, 140], "movement": 28, "msec": [28, 44], "freq_sampl": 28, "reference_mean_squar": 28, "energi": [28, 36, 41, 45], "processed_mean_squar": 28, "amplitud": 28, "low_freq": 28, "80": [28, 133, 135], "high_freq": 28, "8000": [28, 137], "ear_q": 28, "26449": 28, "min_bw": 28, "24": [28, 29, 31, 132, 133, 134], "equival": [28, 38, 141], "rectangular": 28, "bandwidth_": 28, "gammaton": [28, 38, 41, 44], "bank": [28, 38, 42], "equat": [28, 36], "come": [28, 58, 149], "malcolm": 28, "slanei": 28, "fraction": 28, "basal": 28, "decreas": 28, "apic": 28, "greenwood": 28, "br": 28, "1983": 28, "excit": 28, "america": [28, 136], "74": 28, "750": 28, "753": 28, "389861": 28, "1993": [28, 136], "implemtn": 28, "patterson": 28, "holdsworth": 28, "asset": 28, "pdf": [28, 132, 134], "scinaps": 28, "io": [28, 140, 149], "prod": 28, "396690109": 28, "dd": 28, "1990": 28, "cochlear": [28, 38], "sever": [28, 46, 47, 149], "speci": 28, "29": 28, "year": [28, 136, 139, 142, 143, 144], "later": [28, 47], "87": 28, "2592": [28, 131, 132], "2605": 28, "o10": 28, "399052": 28, "25": 28, "22": [28, 134, 137], "2008": [28, 41], "attenuated_ohc": 28, "threshold_low": 28, "attenuated_ihc": 28, "threshold_high": 28, "small": [28, 132, 133, 134, 140, 141, 146, 147], "covert": 28, "cr": 28, "revert": [28, 54], "analyt": 28, "magnitud": [28, 139], "kneepoint": 28, "synaps": 28, "assign": [28, 137, 149], "reference_db": [28, 29], "suppress": 28, "m_delai": 28, "middl": [28, 39], "outer": [28, 39], "hair": 28, "cell": [28, 29, 31], "compar": [28, 146, 149], "intens": [28, 132, 134], "greater": 28, "group": [28, 39, 136, 142, 149], "purpos": [28, 149], "doe": [28, 45, 52, 132, 134, 141], "calibr": [28, 39, 44], "compens": 28, "processed_db": [28, 29], "reference_sl": 28, "processed_sl": 28, "27": [28, 139], "dec": 28, "revis": 28, "14": [28, 29, 49, 74], "envsig": 28, "attn_ohc": 28, "fsamp": 28, "wide": 28, "compressed_basilar_membran": 28, "compressed_sign": 28, "zhang": [28, 132, 134, 139], "2001": [28, 39], "o": [28, 51], "window": [28, 29, 36, 41, 45], "produc": [28, 29, 137, 141, 146], "cosin": [28, 29], "sub": [28, 29, 143], "segsiz": 28, "subsampl": [28, 29], "26": [28, 31, 137, 149], "final": [28, 49, 50, 103, 132, 134, 137, 141, 146, 147, 149], "half": [28, 29], "24000": [28, 132], "corr_rang": 28, "absolut": 28, "reduc": [28, 31, 36, 45, 141, 147, 149], "13": [28, 34, 35, 136, 139], "basilar_membran": 28, "cochlear_envcomp": 28, "_basilar_membran": 28, "_refer": 28, "07": 28, "npt": 28, "tpt": 28, "center_freq": 28, "center_freq_co": 28, "center_freq_sin": 28, "gamma": [28, 34, 35, 36], "demodul": [28, 29], "sincf": 28, "coscf": 28, "reference_bandwidth": 28, "processed_bandwidth": 28, "min_bandwidth": 28, "4th": 28, "program": 28, "line": [28, 45, 131, 132, 133, 134, 141, 147], "ning": [28, 139, 143, 144], "ma": [28, 139, 143, 144], "sheffield": [28, 148, 149], "uk": [28, 149], "martin": 28, "cook": 28, "invari": 28, "baseband": 28, "complex": [28, 29, 50], "exponenti": 28, "cascad": 28, "four": [28, 132, 134, 143, 144, 149], "pole": 28, "don": [28, 45, 149], "truncat": 28, "shorter": 28, "rel": [28, 36], "second": [28, 41, 51, 55, 65, 73, 137, 139, 140], "processed_envelop": [28, 29], "2nd": [28, 58, 148], "reference_envelop": [28, 29], "green": 28, "barker": [28, 136, 139, 142, 143, 144], "coi": 28, "exploit": [28, 58, 148], "correlogram": 28, "structur": [28, 31, 47, 143], "robust": 28, "recognit": [28, 58, 148], "multipl": [28, 132, 134], "49": [28, 149], "874": 28, "891": 28, "1016": [28, 34, 35], "specom": [28, 34, 35], "05": [28, 34, 35], "003": 28, "staffwww": 28, "shef": 28, "organis": [28, 149], "univers": [28, 34, 35], "press": 28, "8": [28, 31, 49, 57, 65, 68, 75, 132, 134, 135, 137, 139, 141, 149], "jan": 28, "execut": [28, 55, 65], "sine": 28, "loop": [28, 36, 149], "speed": [28, 45, 49, 50, 79], "its": [28, 36, 45, 54, 72, 140, 141, 147, 149], "fire": [28, 29], "xenv": [28, 29], "delta": 28, "rc": 28, "circuit": 28, "rapid": 28, "overshoot": 28, "multipli": [28, 49], "reproduc": [28, 132, 140, 147], "eb_bmatten": 28, "steadi": 28, "state": 28, "output_basilar_membran": 28, "output_db": 28, "approxim": [28, 41, 44, 58, 139], "tempor": [28, 29, 42], "trail": 28, "zero": [28, 36, 41, 54], "prune": 28, "eb_resamp24khz": 28, "juli": 28, "audiometric_freq": 28, "apport": 28, "arrang": [28, 29], "low_kne": 28, "150": [28, 34, 35], "addnois": 28, "interv": 28, "mel": 28, "domain": [28, 54, 132, 139], "critic": 28, "individual_cepstral_correl": 28, "average_cepstral_correl": 28, "2006": 28, "31": 28, "criterion": 28, "threshsold": 28, "n_cepstral_coef": 28, "analysi": [28, 29, 132, 133, 134], "mel_cepstral_low": 28, "mod": 28, "mel_cepstral_high": 28, "125": 28, "mel_cepstral_modul": 28, "mel_cepstral_averag": 28, "2014": [28, 132, 134, 140, 141, 147], "nmod": 28, "nbasi": [28, 29], "nsamp": [28, 29], "reference_cep": 28, "processed_cep": [28, 29], "ycep": 28, "cross_covariance_matrix": 28, "design": [28, 41, 149], "hp": 28, "350": 28, "5000": 28, "rough": 28, "xout": 28, "18": [28, 132, 134, 149], "freq_sample_hz": 28, "nearest": 28, "reference_signal_24": 28, "24khz": 28, "spectral": [28, 132, 134, 136], "jae": 28, "vol": [28, 34, 35, 132, 134], "pp": [28, 34, 35, 132, 134, 139, 146], "ab": [28, 149], "diff": 28, "larger": 28, "smaller": [28, 149], "max": [28, 34, 35, 36, 45], "largest": 28, "degrad": [28, 29, 36], "spectra": 28, "dslope": [28, 32, 33], "develop": [28, 57, 136, 138, 140, 141, 147, 149], "13018": 28, "thresh_db": 29, "independ": [29, 50, 132, 134], "23": [29, 137], "april": 29, "thresh_cep": 29, "thresh_nerv": 29, "portion": 29, "refernce_cep": 29, "gammawarp": 29, "11": [29, 31, 74, 136], "filter_cutoff": 29, "freq_sub_sampl": 29, "freq_samp": 29, "lowpass": [29, 49], "peripheri": 29, "von": 29, "hann": 29, "env": [29, 149], "xdb": 29, "ydb": 29, "reference_env": 29, "processed_env": 29, "lowest": [29, 36], "remain": [29, 31], "transient": [29, 149], "convolut": 29, "reference_modul": 29, "nmodfilt": 29, "processed_modul": 29, "gwarp_modfiltwindow": 29, "ebm_modfilt": 29, "xmod": 29, "avecm": 29, "stage": [31, 36, 58, 132, 133, 134, 139, 141, 147], "ten": 31, "neuron": 31, "hidden": [31, 58, 143, 148], "logsig": 31, "activ": [31, 41, 57, 149], "neural_net_param": 31, "weights_hidden": 31, "weights_out": 31, "normalization_factor": 31, "net": [31, 34, 35, 58], "exactli": [31, 45], "tf": 31, "logist": [31, 106, 109, 115, 125, 142, 143, 144, 146], "either": [31, 39, 51, 73, 149], "hyperbol": 31, "tangent": 31, "2010": [31, 45, 132, 134], "nnfeedforwardz": 31, "nonlin": [32, 33], "product": [32, 33], "seg": [32, 33], "cepcorr": [32, 33], "audiogram_l": [32, 33, 149], "audiogram_r": [32, 33, 149], "audiogram_freq": [32, 33], "behasqi": [32, 33], "novemb": [32, 33], "left_ear_clean": [34, 35, 36], "right_ear_clean": [34, 35, 36], "left_ear_noisi": [34, 35, 36], "right_ear_noisi": [34, 35, 36], "sr_signal": [34, 35], "gridcoars": [34, 35], "n_frame": [34, 35, 36], "256": [34, 35, 36, 42], "fft_size_in_sampl": [34, 35], "512": [34, 35], "n_third_octave_band": [34, 35, 36], "centre_freq_first_third_octave_hz": [34, 35], "dyn_rang": [34, 35, 36, 45], "40": [34, 35, 36, 47], "tau_min": [34, 35], "001": [34, 35, 132], "tau_max": [34, 35], "gamma_min": [34, 35], "gamma_max": [34, 35], "sigma_delta_0": [34, 35], "5e": [34, 35], "sigma_epsilon_0": [34, 35], "alpha_0_db": [34, 35], "tau_0": [34, 35], "0016": [34, 35], "level_shift_devi": [34, 35], "clean": [34, 35, 36, 45, 143, 144], "noisi": [34, 35, 36, 45, 139], "fs_signal": [34, 35, 149], "grid": [34, 35, 36], "coars": [34, 35], "denomin": [34, 35, 38], "ntau": [34, 35], "ngamma": [34, 35, 36, 37, 38, 41], "third": [34, 35, 36, 140, 144], "octav": [34, 35, 36], "min": [34, 35], "tau": [34, 35, 36, 124, 142], "titl": [34, 35, 136, 139, 142, 143, 144, 149], "pend": [34, 35], "patent": [34, 35], "pertain": [34, 35], "mbtsoi": [34, 35], "oticon": [34, 35], "aalborg": [34, 35], "ah": [34, 35, 58], "andersen": [34, 35, 58, 136, 139], "de": [34, 35, 139], "haan": [34, 35, 139], "jensen": [34, 35, 45, 139], "refin": [34, 35, 136, 139], "spatial": [34, 35, 136, 139, 149], "102": [34, 35, 136, 139], "06": [34, 35], "left_ear_clean_hat": 36, "right_ear_clean_hat": 36, "left_ear_noisy_hat": 36, "right_ear_noisy_hat": 36, "frequency_band_edges_indic": 36, "centre_frequ": 36, "n_tau": 36, "n_gamma": 36, "intermediate_intelligibility_measure_grid": 36, "p_ec_max": 36, "sigma_epsilon": 36, "sigma_delta": 36, "cancel": [36, 149], "ec": 36, "huge": 36, "iter": [36, 149], "referenc": [36, 149], "anoth": [36, 149], "thereaft": 36, "subtract": 36, "treat": 36, "similarli": 36, "obtain": [36, 38, 131, 141], "similar": [36, 143, 149], "human": [36, 131], "jitter": 36, "maximis": 36, "intermedi": [36, 137, 141], "dft": 36, "per": [36, 38, 49, 132, 141], "bin": 36, "eat": 36, "fid": 36, "indic": [36, 41, 49, 65, 75, 137], "edg": 36, "interaur": 36, "empti": 36, "ddf": 36, "initial_valu": 36, "22050": 36, "dynamic_rang": 36, "hop": [36, 45, 131, 133], "128": [36, 45], "exclud": [36, 45, 132], "exclus": 36, "sole": 36, "mparient": [36, 45], "pystoi": [36, 45], "framelen": [36, 45], "xl_sil": 36, "xr_sil": 36, "yl_sil": 36, "yr_sil": 36, "rl_sil": 36, "win_siz": 36, "fft_size": [36, 42, 45], "fourier": 36, "stft_out": 36, "nfft": 36, "num_band": 36, "min_freq": 36, "n_fft": 36, "frequencei": 36, "freq_low": 36, "freq_high": 36, "highest": 36, "octave_band_matrix": 36, "simul": [37, 38, 39, 58, 107, 136, 137, 143, 144, 149], "denom": [37, 38], "num": [37, 38], "get_src_correct": [37, 39], "make_calibration_sign": [37, 39], "set_audiogram": [37, 39], "src_to_cochlea_filt": [37, 39, 43, 44], "broaden": [37, 38, 41, 42], "datecr": [37, 41], "erbn_centfrq": [37, 38, 41], "gtndelai": [37, 38, 41], "gtn_centfrq": [37, 38, 41], "gtn_denom": [37, 38, 41], "gtn_num": [37, 38, 41], "hp_delai": [37, 38, 41], "hp_fcorner": [37, 38, 41], "hp_denom": [37, 38, 41], "hp_num": [37, 38, 41], "recombination_db": [37, 38, 41], "start2polehp": [37, 38, 41], "catch_up_level": 38, "effect": [38, 136], "alwai": [38, 79], "x2": 38, "n_chan": 38, "coch_sig": 38, "equiv_0db_file_spl": 38, "full": [38, 132, 133, 134, 137, 141, 146, 147, 149], "scale": [38, 51, 54, 65, 71, 73, 106, 109, 115, 137, 143, 144], "hold": [38, 42], "numer": [38, 149], "iir": 38, "erbn_cf": 38, "wave": [38, 137], "rectif": 38, "erb": 38, "gtn_cf": 38, "catch_up": 38, "catch": 38, "emploi": [38, 132, 147], "gtn_filter": 38, "gtn_delai": 38, "hp_filter": 38, "gtfbank_fil": 38, "filterbark": 38, "highpass": [38, 49], "cochleagram": 38, "len": [38, 149], "spl_equiv_0db": 38, "expansion_ratio": 38, "eq_loud_db": 38, "src_po": 39, "ff": [39, 44], "pair": [39, 66, 72, 102, 106, 109, 115, 129, 134, 140, 141, 147], "static": [39, 45, 47, 50, 52, 73], "relev": 39, "eardrum": 39, "src": 39, "df": 39, "itu": 39, "ref_rms_db": 39, "n_channel": [39, 51, 73], "pre": [39, 41, 137], "add_calibr": 39, "nx1": 39, "nx2": 39, "prepend": [39, 42], "src_correct": 39, "transfer": [39, 73, 75], "mar2012": 39, "diffus": 39, "ca": 39, "websit": [39, 131, 132, 133, 134, 135, 136, 141, 146, 147], "NO": 39, "longer": 39, "97": 39, "filter_length": 41, "filter_gain": 41, "window_shap": 41, "arbitrari": [41, 149], "partial": 41, "nyquist": 41, "ham": 41, "nn": [41, 55, 65], "n_tap": 41, "antisymmetr": 41, "scipi": [41, 54, 149], "our": [41, 137, 149], "tap": [41, 42], "unus": 41, "compat": 41, "durat": [41, 50, 137], "supplied_b": 41, "white": 41, "ideal": [41, 139], "sii": 41, "flat": 41, "9db": 41, "beyond": 41, "slightli": 41, "stylis": 41, "earhear": 41, "paper": [41, 144], "emphasi": 41, "pure": [41, 47], "window_length": 41, "percent_to_track": 41, "percent": 41, "track": [41, 55, 65, 71, 132, 134], "certain": 41, "percentag": 41, "look": [41, 143, 149], "histogram": [41, 149], "whole": 41, "record": [41, 51], "analys": 41, "used_threshold_db": 41, "accur": 41, "db_rel_rm": 41, "sophist": 41, "whose": [41, 140], "exce": 41, "rel_db_thresh": 41, "gtf_file": 41, "rl": 42, "ru": 42, "usabl": 42, "asiz": 42, "f_smear": [42, 43, 44], "inbuff": 42, "outbuff": 42, "calibrate_spl": [43, 44], "gt_fir_sin": [43, 44], "recruitment_fir": [43, 44], "recruitment_out_coef": [43, 44], "apply_filt": [43, 44], "high_pass": [43, 44], "integrated_loud": [43, 44], "normalize_loud": [43, 44], "detect_silent_fram": [43, 45], "rowcol_norm": [43, 45], "sr": 44, "spl_cali": 44, "src_posit": 44, "1025": 44, "power": [44, 50], "db_relative_rm": 44, "cochlea_filt": 44, "norm_luf": 44, "36": [44, 137], "block_siz": 44, "75": [44, 49, 140, 141, 147], "luf": [44, 71, 74], "pytorch_stoi": 45, "cite": [45, 139, 143, 144], "star": 45, "repo": 45, "127": 45, "henc": [45, 137], "sqrt": 45, "negat": 45, "stoi": [45, 58], "cannot": [45, 79], "directli": [45, 52, 57, 149], "use_vad": 45, "simpl": [45, 54, 106, 109, 115, 132, 134, 140, 141, 146, 147], "vad": 45, "do_resampl": 45, "n_src": 45, "section": [45, 141], "chunk": 45, "cumbersom": 45, "ineffici": 45, "detect": [45, 149], "mask": [45, 47, 139, 149], "At": 45, "unfold": 45, "taal": [45, 139], "hendrik": [45, 136, 139], "heusden": [45, 139], "icassp": [45, 139], "texa": 45, "dalla": 45, "ieee": [45, 132, 133, 134, 139], "transact": [45, 132, 133, 134, 139], "jesper": 45, "cee": 45, "2016": [45, 132, 133, 134], "booltensor": 45, "framewis": 45, "est_target": 45, "varianc": [45, 54], "win": 45, "carnoise_parameters_gener": [46, 48], "carnoiseparametersgener": [46, 48, 49], "carnoise_signal_gener": [46, 48], "carnoisesignalgener": [46, 48, 50, 79], "has_frequ": [46, 47], "from_dict": [46, 47], "load_listener_dict": [46, 47], "file_nam": [46, 53, 71, 102, 129], "header_column": [46, 53], "append_result": [46, 53], "add_result": [46, 53, 100, 102, 127, 129], "dataclass": [47, 53], "monaur": 47, "factori": 47, "new_frequ": 47, "linear_frequ": 47, "linearli": 47, "done": [47, 132, 137, 146, 149], "properti": [47, 149], "categoris": 47, "british": 47, "societi": [47, 132, 134, 136, 147], "audiologi": 47, "descriptor": 47, "mild": 47, "profound": 47, "41": [47, 134], "71": 47, "95": [47, 136], "bsa": 47, "air": 47, "conduct": [47, 56], "bone": 47, "audiometri": 47, "noth": 47, "basic": 47, "listener_dict": 47, "gear_lookup": [48, 49], "reference_constant_db": [48, 49, 50], "rpm_lookup": [48, 49], "gen_paramet": [48, 49, 50], "set_new_randomisation_range_freq_multipli": [48, 49], "final_multipli": [48, 50], "apply_common": [48, 50], "generate_car_nois": [48, 50], "generate_engine_nois": [48, 50], "generate_source_nois": [48, 50], "get_bump_param": [48, 50], "get_engine_param": [48, 50], "car": [49, 50, 73, 75, 79], "logic": 49, "primary_filter_cutoff": 49, "primary_filter_constant_hz": 49, "86": [49, 132], "secondary_filter_cutoff": 49, "secondary_filter_constant_hz": 49, "200": 49, "random_flag": [49, 50], "constructor": [49, 50], "flag": [49, 75, 141], "kilomet": 49, "hour": [49, 141], "gear": 49, "rpm": [49, 50], "car_noise_paramet": [49, 50], "carnoiseparamet": [49, 50], "speed_kph": [49, 50], "1890": 49, "primary_filt": [49, 50], "btype": 49, "cutoff_hz": 49, "685320000000003": 49, "secondary_filt": [49, 50], "276": 49, "22400000000005": 49, "bump": [49, 50], "bandpass": 49, "34": 49, "66": 49, "64000000000001": 49, "dip_low": 49, "90": [49, 73], "dip_high": 49, "12494775682322": 49, "60": 49, "85": 49, "120": [49, 79, 137], "km": [49, 50], "primari": [49, 50], "secondari": [49, 50], "duration_sec": 50, "car_nois": 50, "carnoisegener": 50, "car_noise_sign": 50, "0005": [50, 149], "target_sign": [50, 73], "coherence_sign": 50, "commonness_factor": 50, "noise_paramet": 50, "number_noise_sourc": 50, "organ": [50, 136], "reference_level_db": 50, "engine_num_harmon": 50, "bump_filt": 50, "dip_low_filt": 50, "dip_high_filt": 50, "dip": 50, "bump_gaussian_std": 50, "lowpass_noise_gaussian_std": 50, "harmoniccomplex_nton": 50, "harmoniccomplex_power_db": 50, "harmoniccomplex_freqs_hz": 50, "jsonl": [51, 146], "n_sampl": [51, 73, 75], "offset_is_sampl": 51, "allow_resampl": 51, "until": 51, "unless": [51, 147], "ok": [51, 149], "floating_point": 51, "strict": 51, "bit": [51, 54, 143, 149], "32768": [51, 149], "32767": 51, "clip": [51, 54, 65, 71, 73, 133, 140, 149], "necessari": [51, 149], "overflow": 51, "break": [51, 132, 134], "did": 51, "int16": [51, 52, 149], "flac": [52, 65, 132, 133], "overwritten": 52, "pyflac": 52, "float64": 52, "in16": 52, "decoderprocessexcept": 52, "fatal": 52, "memori": 52, "alloc": 52, "occur": 52, "stop": 52, "compression_level": 52, "librari": 52, "And": [52, 131, 141, 143, 144], "offer": [52, 132, 134], "conveni": [52, 149], "input_filenam": 52, "pathlib": [52, 149], "filenotfounderror": 52, "byte": 52, "temporari": 52, "blocksiz": 52, "streamable_subset": 52, "verifi": 52, "_encod": 52, "fileencod": 52, "encoderprocessexcept": 52, "challeng": [53, 79, 143, 144, 148, 149], "csv": [53, 60, 102, 129, 132, 133, 134, 140, 141, 143, 144, 146, 147, 149], "append": [53, 146], "header": 53, "row_valu": 53, "soft_clip": [54, 71], "soft": [54, 65, 140, 149], "n_clip": [54, 149], "rescal": 54, "new_sample_r": 54, "soxr": 54, "wrapper": 54, "multichannel": [54, 149], "approach": [54, 141, 149], "gpu0": [55, 65], "gpu1": [55, 65], "appropi": [55, 65], "hardwar": [55, 65], "mix": [55, 65, 132, 134, 149], "fade": [55, 65], "togeth": [55, 58, 65, 73], "entir": [55, 65], "tutori": [55, 65, 140, 141, 147, 149], "hybrid_demucs_tutori": [55, 65], "html": [55, 65], "introduct": 56, "instal": [56, 131, 132, 133, 134, 137, 140, 141, 147], "usag": [56, 58, 141], "contributor": 56, "coven": 56, "page": [56, 136, 146, 149], "virtual": [57, 149], "opt": [57, 132], "conda": [57, 133], "minim": 57, "miniconda": [57, 133, 149], "won": [57, 133], "cond": 57, "latest": 57, "stabl": 57, "altern": [57, 132, 133, 134, 141, 147], "manner": [57, 149], "cd": [57, 149], "core": [58, 134, 140, 147, 149], "toolkit": 58, "jupyt": 58, "notebook": 58, "colab": [58, 149], "access": [58, 79, 133, 149], "cec1": [58, 59, 61, 142, 143, 144, 146], "cpc1": [58, 59, 61, 143, 144], "2021": [58, 132, 134, 136, 139, 146], "script": [58, 132, 135, 138, 139, 141, 146, 147, 149], "jointli": 58, "percept": [58, 140, 141, 146, 147], "colorado": 58, "edu": 58, "lab": 58, "hearlab": 58, "prescript": [58, 65, 68, 73, 133, 137, 149], "differenti": [58, 139], "BUT": 58, "butspeechfit": 58, "torch_msbg_mbstoi": 58, "recognis": [58, 148], "unsupervis": [58, 132, 134, 148], "uncertainti": [58, 148], "non": [58, 132, 134, 137, 148], "intrus": [58, 148, 149], "subpackag": 59, "cad1": [59, 61, 131], "cad_icassp_2024": [59, 61], "cec3": [59, 61], "cpc2": [59, 61], "icassp_2023": [59, 61], "pyc": 60, "sh": [60, 140], "tgz": [60, 134, 136, 140, 143, 144, 147], "task1": [61, 62, 131, 132, 141], "task2": [61, 62, 131, 141], "data_prepar": [61, 62, 69, 81, 91], "e009_sheffield": [61, 81], "e029_sheffield": [61, 104, 144], "e032_sheffield": [61, 104, 143], "test_listener_respons": [61, 104, 142], "apply_baseline_ha": [63, 64, 65], "decompose_sign": [63, 64, 65], "map_to_dict": [63, 64, 65], "process_stems_for_listen": [63, 64, 65], "remix_sign": [63, 64, 65], "save_flac_sign": [63, 64, 65], "make_song_listener_list": [63, 64, 66], "run_calculate_aq": [63, 64, 66], "set_song_se": [63, 64, 66], "merge_batches_result": [63, 64, 69, 70], "join_batch": [63, 64, 67, 69, 70, 76], "pack_submiss": [63, 64, 68, 69, 70, 77], "dummi": [65, 74, 77, 101, 128, 130], "apply_compressor": 65, "model_sample_r": 65, "signal_sample_r": 65, "sources_list": 65, "decompos": [65, 68], "stem": [65, 68, 132, 134], "personalis": 65, "decomposit": 65, "hdemuc": 65, "musdb18": [65, 132, 134, 135], "dictconfig": [65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 79, 83, 84, 89, 90, 93, 94, 97, 101, 102, 106, 107, 109, 115, 123, 124, 125, 128, 129, 130, 149], "vocal": [65, 68, 132, 134, 135], "drum": [65, 68, 132, 134, 135], "bass": [65, 68, 132, 134, 135], "Then": [65, 68, 132, 133, 134, 135, 140, 147], "procedur": [65, 68, 132, 133, 134, 140, 141, 147], "song": [65, 66, 68, 74, 75, 132, 133, 134, 135], "processed_sourc": 65, "remix": [65, 132, 134], "eight": [65, 132, 133, 134, 140, 147], "output_sample_r": 65, "do_clip_sign": 65, "do_soft_clip": 65, "do_scale_sign": 65, "txt": 65, "small_test": [66, 72, 102, 129, 141, 147], "seed": [66, 75, 79, 102, 123, 129, 132, 133, 134, 140, 143, 147, 149], "uniqu": [66, 75, 102, 129], "join": [67, 76], "batch_siz": 67, "mani": [67, 149], "team_id": [68, 77], "root_dir": [68, 77], "base_dir": [68, 77, 149], "pack": [68, 77], "submiss": [68, 77, 146], "archiv": [68, 77], "audio_manag": [69, 70, 73], "audiomanag": [69, 70, 71, 73], "baseline_util": [69, 70], "load_hrtf": [69, 70, 72], "load_listeners_and_scen": [69, 70, 72], "make_scene_listener_list": [69, 70, 72, 99, 100, 102, 126, 127, 129], "read_mp3": [69, 70, 72], "car_scene_acoust": [69, 70, 75], "carsceneacoust": [69, 70, 73, 75], "compute_average_hearing_loss": [69, 70, 74], "enhance_song": [69, 70, 74], "evaluate_scen": [69, 70, 75], "run_calculate_audio_qu": [69, 70, 75], "set_scene_se": [69, 70, 75, 99, 100, 102, 126, 127, 129], "build_scene_metadata": [69, 78], "get_random_car_param": [69, 78, 79], "get_random_head_rot": [69, 78, 79], "get_random_snr": [69, 78, 79], "read_json": [69, 78, 79], "set_se": [69, 78, 79], "add_audios_to_sav": [70, 71], "clip_audio": [70, 71], "get_lufs_level": [70, 71], "save_audio": [70, 71], "scale_to_luf": [70, 71], "anechoic_hrtf_for_nois": [70, 73], "add_anechoic_hrtf_to_nois": [70, 73], "add_hrtf_to_stereo_sign": [70, 73], "add_two_sign": [70, 73], "apply_car_acoustics_to_sign": [70, 73], "apply_hearing_aid": [70, 73], "equalise_level": [70, 73], "get_car_nois": [70, 73], "preload_anechoic_hrtf": [70, 73], "scale_signal_to_snr": [70, 73], "manag": [71, 73, 141], "output_audio_path": 71, "waveform": [71, 74, 132, 134], "min_val": 71, "max_val": 71, "target_luf": 71, "hrtf": [72, 73, 75, 133, 134, 135], "variou": [72, 75, 149], "hrtf_data": 72, "scenes_listen": [72, 102, 129, 140, 141, 147, 149], "file_path": 72, "mp3": [72, 133], "track_dur": 73, "hrtf_dir": 73, "config_nalr": 73, "config_compressor": 73, "extend_nois": 73, "constant": [73, 137], "anecho": [73, 75, 136], "brir": [73, 75, 136], "000_left": 73, "000_right": 73, "m90_left": 73, "m90_right": 73, "p90_left": 73, "p90_right": 73, "hr36_e02_ch1_left": 73, "hr36_e02_ch1_right": 73, "hr0_e02_ch1_left": 73, "hr0_e02_ch1_right": 73, "hr72_e02_ch1_left": 73, "hr72_e02_ch1_right": 73, "noise_sign": 73, "hrtf_type": 73, "ebrird": [73, 133], "signal1": 73, "signal2": 73, "enh_sign": [73, 75], "consist": [73, 139, 140, 141], "max_level": 73, "prevent": [73, 133, 140], "car_noise_param": 73, "carnoiseparametergener": 73, "databas": [73, 133], "brird_dir": 73, "transpos": [73, 149], "pylodnorm": 73, "average_hearing_loss": 74, "processor": [74, 77], "out_right": 74, "out_left": 74, "ref_sign": 75, "scene_id": [75, 149], "current_scen": 75, "identifi": 75, "charact": 75, "md5": [75, 132, 133, 134, 140, 147], "hexdigest": 75, "itself": 75, "cad": 79, "task": [79, 141], "min_spe": 79, "max_spe": 79, "input_dict": 79, "bird": 79, "min_snr": 79, "max_snr": 79, "round_to": 79, "path_fil": 79, "return_kei": 79, "reli": [79, 137], "2023": 79, "augment": [79, 132, 134], "run_hl_process": [81, 82, 84, 104, 105, 107, 137], "run_calculate_si": [81, 82, 84, 91, 92, 94, 99, 100, 102, 104, 105, 107, 126, 127, 129, 137], "prepare_cec1_data": [81, 86, 138], "ampmodul": [81, 88, 90], "denmodul": [81, 88, 90], "train_amp": [81, 88, 90], "train_den": [81, 88, 90], "exp": [91, 92, 132, 133, 134, 140, 141, 146, 147, 149], "read_csv_scor": [91, 92, 94], "build_scen": [91, 96, 140], "build_rooms_from_rpf": [91, 96, 97], "render_scen": [91, 96, 140], "amplify_sign": [99, 100, 101, 126, 127, 129], "compute_metr": [99, 100, 102, 126, 127, 129], "report_scor": [99, 100, 126, 127, 141, 147], "load_scenes_data": [99, 100, 103], "write_head": [100, 102, 127, 129], "collat": 103, "json_fil": 103, "compute_scor": [104, 105, 108, 109, 114, 115, 121, 122, 124, 142], "kt_score": [104, 105, 106, 108, 109, 114, 115, 121, 122, 124], "ncc_score": [104, 105, 106, 108, 109, 114, 115, 121, 122, 124], "read_data": [104, 105, 106, 108, 109, 114, 115], "rmse_scor": [104, 105, 106, 108, 109, 114, 115, 121, 122, 124], "std_err": [104, 105, 106, 108, 109, 114, 115, 121, 122, 124], "infer": [104, 108, 114], "prepare_data": [104, 108, 114, 143, 144], "train_asr": [104, 108, 114, 143, 144], "transformer_cpc1_ensemble_decod": [104, 108], "transformer_cpc1_decod": [104, 114], "pred": [106, 109, 115], "betweeen": [106, 109, 115], "intelligilb": [106, 109, 115], "label": [106, 109, 115, 124, 142, 143, 144, 149], "pred_csv": 106, "label_json": [106, 109, 115], "pred_json": [109, 115], "compute_haspi": [121, 122, 146], "compute_haspi_for_sign": [121, 122, 123], "parse_cec2_signal_nam": [121, 122, 123], "run_calculate_haspi": [121, 122, 123], "set_seed_with_str": [121, 122, 123], "logisticmodel": [121, 122, 125], "make_disjoint_train_set": [121, 122, 125], "signal_nam": 123, "pars": 123, "seed_str": 123, "ground": [124, 146], "truth": [124, 146], "kendal": [124, 142], "full_df": 125, "panda": [125, 149], "datafram": 125, "test_df": 125, "disjoint": 125, "visit": [131, 132, 133, 134, 136, 140, 141, 142, 145, 146, 147], "instruct": [131, 146, 149], "homepag": 131, "topic": 131, "demuc": [131, 132, 134], "unmix": [131, 132, 134], "2273": [131, 132], "minut": [131, 141], "smile": 131, "2485": 131, "2257": 131, "alexand": 131, "ross": 131, "goodby": 131, "bolero": 131, "3084": 131, "2574": 131, "anim": 131, "rockshow": 131, "1843": 131, "1864": 131, "clara": 131, "berri": 131, "wooldog": 131, "waltz": 131, "my": [131, 132, 133], "victim": 131, "3094": 131, "2615": 131, "fergessen": 131, "Nos": 131, "palpit": 131, "3542": 131, "On": [131, 139], "2778": 131, "2398": 131, "johnni": 131, "lokk": 131, "promis": 131, "amp": 131, "li": 131, "2544": 131, "2261": 131, "leaf": 131, "summerghost": 131, "2513": 131, "2105": 131, "meaxic": 131, "2455": 131, "2239": 131, "patrick": 131, "talbot": 131, "leav": 131, "2673": 131, "2331": 131, "skelpolu": 131, "2123": 131, "1951": 131, "traffic": 131, "siren": 131, "2558": 131, "2339": 131, "triviul": 131, "angelsaint": 131, "2101": 131, "1955": 131, "young": 131, "griffo": 131, "penni": 131, "2499": 131, "2297": 131, "1423": [131, 133], "classic": [131, 133, 134, 135], "1365": 131, "hip": [131, 133], "1462": 131, "instrument": [131, 133], "1416": 131, "1432": 131, "orchestr": [131, 133], "1329": 131, "pop": [131, 133], "1498": 131, "rock": [131, 133], "1460": 131, "hq": [132, 134, 135], "musev": 132, "cadenza_cad1_task1_core_musdb18hq": [132, 135], "tar": [132, 133, 134, 135, 136, 140, 141, 146, 147], "gz": [132, 133, 135, 141, 146], "cadenza_cad1_task1_core_metadata": [132, 135], "sigsep": 132, "sure": [132, 133, 134, 140, 147], "uncompress": 132, "restrict": [132, 134], "medleydb": [132, 134], "bach10": [132, 134], "fma": [132, 133, 134], "Theses": 132, "share": 132, "cadenza_cad1_task1_augmentation_medleydb": 132, "cadenza_cad1_task1_augmentation_bach10": 132, "cadenza_cad1_task1_augmentation_fma_smal": 132, "xvzf": [132, 133, 134, 135, 136, 140, 141, 146, 147], "package_nam": [132, 134, 135, 136, 140, 141, 147], "cadenza_data": [132, 133, 134, 135], "musdb18hq": 132, "fma_smal": 132, "subset": [132, 133, 134, 146], "supervis": [132, 134], "cadenza_data_demo": [132, 133], "xz": [132, 133], "xvf": [132, 133], "hydra": [132, 133, 134, 140, 149], "box": [132, 134], "hybrid": [132, 134], "torchaudio": [132, 134, 143, 144], "spectrogram": [132, 134], "umxhq": 132, "hub": [132, 134], "strategi": 132, "vdbo": [132, 134], "mono": 132, "downsampl": 132, "hertz": [132, 133], "16bit": [132, 133, 140], "precis": [132, 133], "lossless": [132, 133], "compos": [132, 133], "panel": [132, 133], "exp_fold": [132, 133, 134, 137, 139, 140, 143, 144, 147], "command": [132, 133, 134, 141, 147], "enhanced_sign": [132, 133, 134, 137, 140, 141, 147, 149], "due": 132, "suffici": [132, 133, 134, 140], "d\u00e9fossez": [132, 134], "proceed": [132, 134], "ismir": [132, 134], "workshop": [132, 134, 136, 139], "48550": [132, 133, 134], "arxiv": [132, 133, 134], "2111": [132, 134], "03600": [132, 134], "byrn": [132, 133, 134, 140, 141, 147], "deni": [132, 133, 134, 140, 141, 147], "harvei": [132, 133, 134, 140, 141, 147], "dillon": [132, 133, 134, 140, 141, 147], "laboratori": [132, 133, 134, 140, 141, 147], "1986": [132, 133, 134, 140, 141, 147], "257": [132, 133, 134, 140, 141, 147], "265": [132, 133, 134, 140, 141, 147], "1097": [132, 133, 134], "00003446": [132, 133, 134], "198608000": [132, 133, 134], "00007": [132, 133, 134], "arehart": [132, 133, 134, 140, 141, 146, 147], "acm": [132, 133, 134, 139], "354": [132, 133, 134], "365": [132, 133, 134], "1109": [132, 133, 134], "taslp": [132, 133, 134], "2507858": [132, 133, 134], "bittner": [132, 134], "salamon": [132, 134], "tiernei": [132, 134], "mauch": [132, 134], "cannam": [132, 134], "bello": [132, 134], "multitrack": [132, 134], "annot": [132, 134], "mir": [132, 134], "research": [132, 134, 136, 143, 144], "15th": [132, 134], "retriev": [132, 134], "taipei": [132, 134], "taiwan": [132, 134], "rachel": [132, 134], "julia": [132, 134], "wilkin": [132, 134], "hanna": [132, 134], "yip": [132, 134], "juan": [132, 134], "collect": [132, 134], "abstract": [132, 134], "17th": [132, 134], "zhiyao": [132, 134], "duan": [132, 134], "bryan": [132, 134], "pardo": [132, 134], "changshui": [132, 134], "region": [132, 134], "tran": [132, 134], "2121": [132, 134], "2133": [132, 134], "tasl": [132, 134], "2042119": [132, 134], "defferrard": [132, 133, 134], "benzi": [132, 133, 134], "vandergheynst": [132, 133, 134], "bresson": [132, 133, 134], "preprint": [132, 133, 134], "1612": [132, 133, 134], "01840": [132, 133, 134], "mtg": 133, "jamendo": 133, "seven": 133, "genr": 133, "7000": 133, "elospher": 133, "cadenza_cad1_task2_cor": 133, "v1_1": [133, 142, 143, 144, 146, 147], "v1": [133, 134, 142, 143, 144], "clarity_cpc2_data": [133, 146], "taks2": 133, "manifest": [133, 141, 146], "cadenza_task2_data_demo": 133, "librosa": [133, 149], "libsoundfil": 133, "ffmpeg": 133, "anaconda": 133, "forg": 133, "libsndfil": 133, "optimis": [133, 140, 147], "know": [133, 137], "scenario": 133, "usi": 133, "ng": 133, "32000": 133, "foer": 133, "As": [133, 134, 140, 143, 144], "bogdanov": 133, "tovstogan": 133, "porter": [133, 136, 142], "serra": 133, "tag": 133, "icml": 133, "webpag": 134, "cad_icassp_2024_cor": 134, "cad_icassp_2024_train": 134, "cad_icassp_2024_medleydb": 134, "336": [134, 135], "kb": [134, 135], "bte_fr": 134, "vp_e1": 134, "n22": 134, "n30": 134, "328": [134, 135], "head_posit": 134, "scene_listen": [134, 149], "gb": [134, 135, 136, 140, 147], "nightowl": [134, 135], "164": 134, "volum": [134, 136, 147], "st\u00f6ter": 134, "liutku": 134, "ito": 134, "nakashika": 134, "ono": 134, "mitsufuji": 134, "journal": [134, 136, 147], "1667": 134, "21105": 134, "joss": 134, "01667": 134, "generate_dataset": 135, "generates_at_mic_musdb18": 135, "path_to_unpacked_data": 135, "at_mic_microphon": 135, "pick": 135, "mic": 135, "next": [135, 149], "hp_0103": 135, "at_mic_mus": 135, "hp_0138": 135, "clarity_cec1_data": 136, "192": 136, "dev_eval_metadata": 136, "163": 136, "v1_3": 136, "old": 136, "nosi": 136, "9g": 136, "5g": [136, 140, 147], "48m": [136, 140, 147], "46g": 136, "379m": 136, "166g": 136, "8g": [136, 140, 142, 147], "eval2": 136, "587m": [136, 140, 147], "4g": [136, 140, 147], "20m": [136, 140, 147], "20g": 136, "158m": 136, "72g": 136, "3g": [136, 140, 147], "675m": 136, "12m": 136, "12g": 136, "95m": 136, "58g": 136, "749m": 136, "21g": 136, "tend": 136, "kayser": 136, "platform": [136, 149], "softwarex": 136, "17": 136, "100953": 136, "baer": 136, "thoma": 136, "brian": 136, "cj": 136, "sentenc": [136, 146], "94": 136, "1229": 136, "1241": 136, "presenc": 136, "interf": 136, "1994": 136, "2277": 136, "2280": 136, "quiet": 136, "background": 136, "2050": 136, "2062": 136, "stone": 136, "toler": 136, "impos": 136, "alon": 136, "182": 136, "asger": 136, "heidemann": 136, "inproceed": [136, 142, 143, 144], "graetzer2021clar": 136, "author": [136, 139, 142, 143, 144, 149], "graetzer": [136, 142], "sn": 136, "jon": [136, 139, 141, 142, 143, 144], "cox": [136, 142], "trevor": [136, 142], "akeroyd": [136, 142], "cull": [136, 142], "john": [136, 142], "naylor": [136, 142], "graham": [136, 142], "eszter": [136, 142], "vivero": [136, 142], "munoz": [136, 142], "booktitl": [136, 139, 143, 144], "interspeech": [136, 143, 144], "686": 136, "690": 136, "associ": 136, "isca": 136, "data_config": [137, 138], "specii": 137, "careful": 137, "THe": 137, "mixed_ch0": 137, "44": 137, "repect": 137, "reverber": [137, 139], "tail": 137, "ramp": 137, "3000": 137, "37": 137, "prerelease_combination3_smooth": 137, "pipelin": 137, "equiv0dbspl": 137, "onward": 137, "creation": 137, "pseudo": 137, "explain": 138, "2500": 138, "interet": 138, "denois": 139, "finit": 139, "inpuls": 139, "cec1_root": 139, "luo": 139, "mesgarani": 139, "surpass": 139, "1256": 139, "1266": 139, "2125": 139, "2136": 139, "zoril\u0103": 139, "doddipatla": 139, "2020": 139, "6389": 139, "6393": 139, "articl": 139, "tutwo": 139, "tu": [139, 143, 144], "zehai": [139, 143, 144], "jisi": 139, "clarity_cc_doc": 140, "now": [140, 141, 147, 149], "introduc": [140, 141, 147, 149], "clarity_cec2_cor": [140, 147], "v1_0": [140, 141, 147], "clarity_cec2_train": [140, 147], "69": [140, 147], "clarity_cec2_hoair": [140, 147], "144": [140, 147], "hrirs_mat": [140, 141, 147], "167m": [140, 147], "79m": [140, 147], "39g": [140, 147], "speaker_adapt": [140, 141, 147], "masker_music_list": [140, 147], "masker_nonspeech_list": [140, 147], "masker_speech_list": [140, 147], "target_speech_list": [140, 147], "hrir_data": [140, 147], "190m": [140, 147], "16gg": [140, 147], "9m": [140, 147], "89g": [140, 147], "hoa_ir": [140, 147], "render": [140, 147], "117g": [140, 147], "49g": [140, 147], "your_data_path": 140, "clarity_cec2_data": [140, 147], "skip": 140, "submitit": [140, 149], "parallel": 140, "cc": 140, "doc": [140, 142], "submitit_launch": 140, "overrid": [140, 141, 149], "launcher": [140, 141, 149], "cec2_submitit_loc": 140, "subjob": 140, "render_starting_chunk": 140, "multirun": [140, 141], "slurm": [140, 141], "cluster": [140, 141], "cec2_submitit_slurm": 140, "sbatch": 140, "train_addit": 140, "additional_scen": 140, "firstli": [140, 147], "cal_unprocessed_si": 140, "decid": 140, "unprocess": [140, 149], "_target_anechoic_ch1": [140, 147], "_target_ch1": [140, 147, 149], "1615": 140, "2492": 140, "ran": 140, "five": 140, "2491594": 140, "3366643e": 140, "93": [140, 141, 147], "clarity_cec3_data": 141, "task3": 141, "user": [141, 149], "amplified_sign": 141, "7500": [141, 147], "macbook": 141, "pro": 141, "hpc": [141, 149], "finish": 141, "Or": [141, 147], "22178678134846783": 141, "498088": 141, "052545": 141, "541468": 141, "080589": 141, "477046": 141, "143096": 141, "432494": 141, "239527": 141, "470118": 141, "352110": 141, "492380": 141, "477001": 141, "18643217215546573": 141, "545927": 141, "034330": 141, "552687": 141, "055647": 141, "538335": 141, "096237": 141, "455963": 141, "178413": 141, "434074": 141, "296364": 141, "507484": 141, "432177": 141, "easi": 141, "entri": [141, 148, 149], "my_task1_config": 141, "sped": 141, "block": 141, "first_scen": 141, "1875": 141, "3750": 141, "5625": 141, "job": 141, "launch": 141, "cec3_submitit_loc": 141, "cec3_submitit_slurm": 141, "trak": 142, "close": [142, 143, 144], "repsons": 142, "provied": 142, "seen": 142, "cpc1_indep": 142, "cpc1_intro": 142, "clarity_cpc1_data": [142, 143, 144], "ha_output": [142, 143, 144, 146], "train_indep": 142, "1g": 142, "listener_data": [142, 149], "cpc1_train": 142, "xlsx": 142, "rmse": [142, 143, 144], "barker2022th": 142, "jennif": 142, "firth": 142, "simon": 142, "holli": 142, "griffith": 142, "lara": 142, "harri": 142, "rhoddi": 142, "programm": [143, 144], "librispeech": [143, 144], "complic": [143, 144], "speechbrain": [143, 144], "16khz": [143, 144], "untar": [143, 144], "clarity_cpc1_data_train": [143, 144], "clarity_cpc1_data_test": [143, 144], "readm": [143, 144], "cpc1_track": [143, 144], "cpc1_asr_data": [143, 144], "data_split": [143, 144], "transformer_cpc1": [143, 144], "therefor": [143, 149], "asr0": 143, "asr1": 143, "asrn": 143, "output_fold": [143, 144], "data_fold": [143, 144], "your_path": [143, 144], "OR": [143, 144], "cpc1_asr_data_indep": [143, 144], "1zudxqmwb8vncjkvy2ws5ony3wi1to0i7": [143, 144], "0000": 143, "0002": 143, "asr2": 143, "000n": 143, "put": 143, "asr_ensembl": 143, "eventu": 143, "ckpt": 143, "xxxxx": 143, "5000_unigram": 143, "lm": 143, "lm_model": 143, "token": 143, "n_ensembl": 143, "confid": 143, "entropi": 143, "dev_conf": 143, "dev_neg": 143, "test_conf": 143, "test_neg": 143, "ncc": [143, 144], "kt": [143, 144], "tu2022unsupervis": 143, "shown": [144, 149], "cl": 144, "fastdtw": 144, "probabl": 144, "gpu": 144, "dev_dec_similar": 144, "dev_enc_similar": 144, "test_dec_similar": 144, "test_enc_similar": 144, "tu2022exploit": 144, "quit": 146, "consum": 146, "easili": 146, "try": [146, 149], "amount": 146, "clarity_cpc2_data_demo": 146, "onto": 146, "commandlin": 146, "miss": 146, "halt": 146, "restart": 146, "displai": [146, 149], "termin": 146, "131": 146, "35": 146, "46": 146, "185": 147, "239": 147, "132": 147, "62": 147, "99": 147, "117": 147, "date": 148, "prepar": [148, 149], "e009": 148, "e029": 148, "e032": 148, "ve": 149, "show": 149, "summari": 149, "home": 149, "licens": 149, "mit": 149, "usera": 149, "audioread": 149, "importlib": 149, "matplotlib": 149, "omegaconf": 149, "pyloudnorm": 149, "scikit": 149, "soundfil": 149, "tqdm": 149, "still": 149, "again": 149, "geometri": 149, "plai": 149, "who": 149, "mostli": 149, "datastructur": 149, "datatyp": 149, "summar": 149, "listener_id": 149, "listened_id": 149, "javascript": 149, "notat": 149, "th": 149, "scene_0": 149, "print": 149, "particular": 149, "comprehens": 149, "pyplot": 149, "plt": 149, "fig": 149, "ax": 149, "subplot": 149, "figsiz": 149, "snr_valu": 149, "dtype": 149, "float32": 149, "plot": 149, "hist": 149, "set_titl": 149, "set_xlabel": 149, "int32": 149, "boxplot": 149, "snr_comparison_data": 149, "zip": 149, "set_ylabel": 149, "subplots_adjust": 149, "bottom": 149, "top": 149, "wspace": 149, "hspace": 149, "room_id": 149, "often": 149, "might": 149, "room_dict": 149, "scene_no": 149, "current_listen": 149, "nscene": 149, "nsimul": 149, "attribut": 149, "naudiogram": 149, "enumer": 149, "left_ag": 149, "audiogram_cf": 149, "audiogram_levels_l": 149, "right_ag": 149, "audiogram_levels_r": 149, "set_ylim": 149, "legend": 149, "repl": 149, "shell": 149, "prefer": 149, "ipython": 149, "invok": 149, "navig": 149, "pwd": 149, "jun": 149, "gcc": 149, "credit": 149, "exit": 149, "wish": 149, "lha": 149, "cat": 149, "hierarch": 149, "paramat": 149, "export": 149, "agc": 149, "null": 149, "overriden": 149, "mypythonscript": 149, "lack": 149, "slash": 149, "metadata_dir": 149, "cli": 149, "parameter_0": 149, "some_valu": 149, "parameter_1": 149, "some_other_valu": 149, "syntax": 149, "myscript": 149, "new_valu": 149, "another_new_valu": 149, "readi": 149, "redirect": 149, "scenes_listeners_fil": 149, "listeners_fil": 149, "scenes_fold": 149, "ipd": 149, "audio_path": 149, "audio_fil": 149, "glob": 149, "assess": 149, "impart": 149, "past": 149, "pd": 149, "unprocessed_si": 149, "read_csv": 149, "si": 149, "processed_si": 149, "si_unproc": 149, "loc": 149, "xtick": 149, "By": 149, "slow": 149, "scalabl": 149, "flexibl": 149, "enabl": 149, "parallelis": 149, "scope": 149, "littl": 149, "figur": 149, "pypi": 149, "miniconda3": 149, "tradit": 149, "virtualenv": 149, "site": 149, "unsur": 149, "unix": 149, "inam": 149, "grep": 149, "usernam": 149, "python3": 149, "assert": 149, "isinst": 149, "With": 149, "complementari": 149, "tune": 149, "told": 149, "particularli": 149, "scene_metadata": 149, "listeners_metadata": 149, "scene_listeners_metadata": 149, "scenes_metadata": 149, "choos": 149, "scene_index": 149, "listener_choic": 149, "dbhl": 149, "prefix": 149, "interferer_anecho": 149, "ch2": 149, "ch0": 149, "wavfil": 149, "_mix_ch1": 149, "pylab": 149, "nalr_fir": 149, "out_l": 149, "out_r": 149, "tanh": 149, "cliip": 149, "enhanced_audio": 149, "stack": 149, "dealt": 149, "acg": 149, "signal_16": 149, "astyp": 149, "_ha": 149, "unenhanc": 149, "acalcul": 149, "uncorrupt": 149, "sxxxx_target_chx": 149, "transduc": 149, "sii_unprocess": 149, "xl": 149, "xr": 149, "yl": 149, "yr": 149, "sii_enhanc": 149, "081": 149, "231": 149, "variat": 149, "surpris": 149, "ampli": 149, "good": 149, "luck": 149}, "objects": {"": [[2, 0, 0, "-", "clarity"], [61, 0, 0, "-", "recipes"]], "clarity": [[3, 0, 0, "-", "data"], [10, 0, 0, "-", "engine"], [13, 0, 0, "-", "enhancer"], [24, 0, 0, "-", "evaluator"], [43, 0, 0, "-", "predictor"], [46, 0, 0, "-", "utils"]], "clarity.data": [[4, 0, 0, "-", "HOA_tools_cec2"], [5, 0, 0, "-", "demo_data"], [6, 0, 0, "-", "scene_builder_cec2"]], "clarity.data.HOA_tools_cec2": [[4, 1, 1, "", "HOARotator"], [4, 3, 1, "", "P"], [4, 3, 1, "", "U"], [4, 3, 1, "", "V"], [4, 3, 1, "", "W"], [4, 3, 1, "", "ambisonic_convolve"], [4, 3, 1, "", "binaural_mixdown"], [4, 3, 1, "", "centred_element"], [4, 3, 1, "", "compute_UVW_coefficients"], [4, 3, 1, "", "compute_band_rotation"], [4, 3, 1, "", "compute_rms"], [4, 3, 1, "", "compute_rotation_matrix"], [4, 3, 1, "", "compute_rotation_vector"], [4, 3, 1, "", "convert_a_to_b_format"], [4, 3, 1, "", "dB_to_gain"], [4, 3, 1, "", "dot"], [4, 3, 1, "", "equalise_rms_levels"], [4, 3, 1, "", "rotation_control_vector"], [4, 3, 1, "", "smoothstep"]], "clarity.data.HOA_tools_cec2.HOARotator": [[4, 2, 1, "", "rotate"]], "clarity.data.demo_data": [[5, 3, 1, "", "get_demo_data"], [5, 3, 1, "", "get_hrirs_demo"], [5, 3, 1, "", "get_interferers_demo"], [5, 3, 1, "", "get_metadata_demo"], [5, 3, 1, "", "get_rooms_demo"], [5, 3, 1, "", "get_scenes_demo"], [5, 3, 1, "", "get_targets_demo"]], "clarity.data.scene_builder_cec2": [[6, 1, 1, "", "InterfererType"], [6, 1, 1, "", "RoomBuilder"], [6, 1, 1, "", "RoundingFloat"], [6, 1, 1, "", "SceneBuilder"], [6, 3, 1, "", "add_interferer_to_scene_inner"], [6, 3, 1, "", "add_this_target_to_scene"], [6, 3, 1, "", "build_room"], [6, 3, 1, "", "generate_rotation"], [6, 3, 1, "", "generate_snr"], [6, 3, 1, "", "get_num_post_samples"], [6, 3, 1, "", "get_num_pre_samples"], [6, 3, 1, "", "get_random_hrir_set"], [6, 3, 1, "", "get_random_interferer_offset"], [6, 3, 1, "", "get_room_dims"], [6, 3, 1, "", "get_room_name"], [6, 3, 1, "", "get_vector"], [6, 3, 1, "", "make_rpf_filename_dict"], [6, 3, 1, "", "read_rpf_file"], [6, 3, 1, "", "select_interferer_types"], [6, 3, 1, "", "select_random_interferer"], [6, 3, 1, "", "set_random_seed"]], "clarity.data.scene_builder_cec2.InterfererType": [[6, 4, 1, "", "MUSIC"], [6, 4, 1, "", "NOISE"], [6, 4, 1, "", "SPEECH"]], "clarity.data.scene_builder_cec2.RoomBuilder": [[6, 2, 1, "", "build_from_rpf"], [6, 2, 1, "", "get_room"], [6, 2, 1, "", "load"], [6, 2, 1, "", "rebuild_dict"], [6, 2, 1, "", "save_rooms"]], "clarity.data.scene_builder_cec2.SceneBuilder": [[6, 2, 1, "", "add_SNR_to_scene"], [6, 2, 1, "", "add_interferer_to_scene"], [6, 2, 1, "", "add_listener_details_to_scene"], [6, 2, 1, "", "add_target_to_scene"], [6, 2, 1, "", "initialise_scenes"], [6, 2, 1, "", "instantiate_scenes"], [6, 2, 1, "", "save_scenes"]], "clarity.engine": [[11, 0, 0, "-", "losses"], [12, 0, 0, "-", "system"]], "clarity.engine.losses": [[11, 1, 1, "", "SISNRLoss"], [11, 1, 1, "", "SNRLoss"], [11, 1, 1, "", "STOILevelLoss"], [11, 1, 1, "", "STOILoss"]], "clarity.engine.losses.SISNRLoss": [[11, 2, 1, "", "cal_sisnr"], [11, 2, 1, "", "forward"]], "clarity.engine.losses.SNRLoss": [[11, 2, 1, "", "forward"], [11, 2, 1, "", "l2norm"]], "clarity.engine.losses.STOILevelLoss": [[11, 4, 1, "", "alpha"], [11, 2, 1, "", "forward"], [11, 4, 1, "", "gamma_a"], [11, 2, 1, "", "measure_loudness"]], "clarity.engine.losses.STOILoss": [[11, 2, 1, "", "forward"]], "clarity.engine.system": [[12, 1, 1, "", "System"]], "clarity.engine.system.System": [[12, 2, 1, "", "common_step"], [12, 2, 1, "", "configure_optimizers"], [12, 2, 1, "", "forward"], [12, 2, 1, "", "on_save_checkpoint"], [12, 2, 1, "", "on_validation_epoch_end"], [12, 2, 1, "", "train_dataloader"], [12, 2, 1, "", "training_step"], [12, 2, 1, "", "val_dataloader"], [12, 2, 1, "", "validation_step"]], "clarity.enhancer": [[14, 0, 0, "-", "compressor"], [15, 0, 0, "-", "dnn"], [17, 0, 0, "-", "dsp"], [19, 0, 0, "-", "gha"], [23, 0, 0, "-", "nalr"]], "clarity.enhancer.compressor": [[14, 1, 1, "", "Compressor"]], "clarity.enhancer.compressor.Compressor": [[14, 2, 1, "", "process"], [14, 2, 1, "", "set_attack"], [14, 2, 1, "", "set_release"]], "clarity.enhancer.dnn": [[16, 0, 0, "-", "mc_conv_tasnet"]], "clarity.enhancer.dnn.mc_conv_tasnet": [[16, 1, 1, "", "ChannelwiseLayerNorm"], [16, 1, 1, "", "Chomp1d"], [16, 1, 1, "", "ConvTasNet"], [16, 1, 1, "", "Decoder"], [16, 1, 1, "", "DepthwiseSeparableConv"], [16, 1, 1, "", "GlobalLayerNorm"], [16, 1, 1, "", "SpatialEncoder"], [16, 1, 1, "", "SpectralEncoder"], [16, 1, 1, "", "TemporalBlock"], [16, 1, 1, "", "TemporalConvNet"], [16, 3, 1, "", "chose_norm"], [16, 3, 1, "", "overlap_and_add"]], "clarity.enhancer.dnn.mc_conv_tasnet.ChannelwiseLayerNorm": [[16, 2, 1, "", "forward"], [16, 2, 1, "", "reset_parameters"], [16, 4, 1, "", "training"]], "clarity.enhancer.dnn.mc_conv_tasnet.Chomp1d": [[16, 2, 1, "", "forward"], [16, 4, 1, "", "training"]], "clarity.enhancer.dnn.mc_conv_tasnet.ConvTasNet": [[16, 2, 1, "", "forward"], [16, 4, 1, "", "training"]], "clarity.enhancer.dnn.mc_conv_tasnet.Decoder": [[16, 2, 1, "", "forward"], [16, 4, 1, "", "training"]], "clarity.enhancer.dnn.mc_conv_tasnet.DepthwiseSeparableConv": [[16, 2, 1, "", "forward"], [16, 4, 1, "", "training"]], "clarity.enhancer.dnn.mc_conv_tasnet.GlobalLayerNorm": [[16, 2, 1, "", "forward"], [16, 2, 1, "", "reset_parameters"], [16, 4, 1, "", "training"]], "clarity.enhancer.dnn.mc_conv_tasnet.SpatialEncoder": [[16, 2, 1, "", "forward"], [16, 4, 1, "", "training"]], "clarity.enhancer.dnn.mc_conv_tasnet.SpectralEncoder": [[16, 2, 1, "", "forward"], [16, 4, 1, "", "training"]], "clarity.enhancer.dnn.mc_conv_tasnet.TemporalBlock": [[16, 2, 1, "", "forward"], [16, 4, 1, "", "training"]], "clarity.enhancer.dnn.mc_conv_tasnet.TemporalConvNet": [[16, 2, 1, "", "forward"], [16, 4, 1, "", "training"]], "clarity.enhancer.dsp": [[18, 0, 0, "-", "filter"]], "clarity.enhancer.dsp.filter": [[18, 1, 1, "", "AudiometricFIR"]], "clarity.enhancer.dsp.filter.AudiometricFIR": [[18, 2, 1, "", "forward"], [18, 4, 1, "", "training"]], "clarity.enhancer.gha": [[20, 0, 0, "-", "gainrule_camfit"], [21, 0, 0, "-", "gha_interface"], [22, 0, 0, "-", "gha_utils"]], "clarity.enhancer.gha.gainrule_camfit": [[20, 3, 1, "", "compute_proportion_overlap"], [20, 3, 1, "", "gainrule_camfit_compr"], [20, 3, 1, "", "gainrule_camfit_linear"], [20, 3, 1, "", "gains"], [20, 3, 1, "", "isothr"]], "clarity.enhancer.gha.gha_interface": [[21, 1, 1, "", "GHAHearingAid"]], "clarity.enhancer.gha.gha_interface.GHAHearingAid": [[21, 2, 1, "", "create_HA_inputs"], [21, 2, 1, "", "create_configured_cfgfile"], [21, 2, 1, "", "process_files"]], "clarity.enhancer.gha.gha_utils": [[22, 1, 1, "", "FittingParams"], [22, 1, 1, "", "Gaintable"], [22, 3, 1, "", "format_gaintable"], [22, 3, 1, "", "get_gaintable"], [22, 3, 1, "", "multifit_apply_noisegate"]], "clarity.enhancer.gha.gha_utils.FittingParams": [[22, 4, 1, "", "channels"], [22, 4, 1, "", "edge_frequencies"], [22, 4, 1, "", "frequencies"], [22, 4, 1, "", "levels"], [22, 4, 1, "", "side"]], "clarity.enhancer.gha.gha_utils.Gaintable": [[22, 4, 1, "", "channels"], [22, 4, 1, "", "frequencies"], [22, 4, 1, "", "levels"], [22, 4, 1, "", "noisegatelevel"], [22, 4, 1, "", "noisegateslope"], [22, 4, 1, "", "sGt"], [22, 4, 1, "", "sGt_uncorr"]], "clarity.enhancer.nalr": [[23, 1, 1, "", "NALR"]], "clarity.enhancer.nalr.NALR": [[23, 2, 1, "", "apply"], [23, 2, 1, "", "build"]], "clarity.evaluator": [[25, 0, 0, "-", "haaqi"], [27, 0, 0, "-", "haspi"], [32, 0, 0, "-", "hasqi"], [34, 0, 0, "-", "mbstoi"], [37, 0, 0, "-", "msbg"]], "clarity.evaluator.haaqi": [[25, 3, 1, "", "compute_haaqi"], [26, 0, 0, "-", "haaqi"], [25, 3, 1, "", "haaqi_v1"]], "clarity.evaluator.haaqi.haaqi": [[26, 3, 1, "", "compute_haaqi"], [26, 3, 1, "", "haaqi_v1"]], "clarity.evaluator.haspi": [[28, 0, 0, "-", "eb"], [29, 0, 0, "-", "ebm"], [30, 0, 0, "-", "haspi"], [27, 3, 1, "", "haspi_v2"], [27, 3, 1, "", "haspi_v2_be"], [31, 0, 0, "-", "ip"]], "clarity.evaluator.haspi.eb": [[28, 3, 1, "", "ave_covary2"], [28, 3, 1, "", "bandwidth_adjust"], [28, 3, 1, "", "basilar_membrane_add_noise"], [28, 3, 1, "", "bm_covary"], [28, 3, 1, "", "center_frequency"], [28, 3, 1, "", "convert_rms_to_sl"], [28, 3, 1, "", "ear_model"], [28, 3, 1, "", "env_compress_basilar_membrane"], [28, 3, 1, "", "env_smooth"], [28, 3, 1, "", "envelope_align"], [28, 3, 1, "", "envelope_sl"], [28, 3, 1, "", "gammatone_bandwidth_demodulation"], [28, 3, 1, "", "gammatone_basilar_membrane"], [28, 3, 1, "", "group_delay_compensate"], [28, 3, 1, "", "inner_hair_cell_adaptation"], [28, 3, 1, "", "input_align"], [28, 3, 1, "", "loss_parameters"], [28, 3, 1, "", "mel_cepstrum_correlation"], [28, 3, 1, "", "melcor9"], [28, 3, 1, "", "melcor9_crosscovmatrix"], [28, 3, 1, "", "middle_ear"], [28, 3, 1, "", "resample_24khz"], [28, 3, 1, "", "spectrum_diff"]], "clarity.evaluator.haspi.ebm": [[29, 3, 1, "", "add_noise"], [29, 3, 1, "", "cepstral_correlation_coef"], [29, 3, 1, "", "env_filter"], [29, 3, 1, "", "fir_modulation_filter"], [29, 3, 1, "", "modulation_cross_correlation"]], "clarity.evaluator.haspi.haspi": [[30, 3, 1, "", "haspi_v2"], [30, 3, 1, "", "haspi_v2_be"]], "clarity.evaluator.haspi.ip": [[31, 3, 1, "", "get_neural_net"], [31, 3, 1, "", "nn_feed_forward"], [31, 3, 1, "", "nn_feed_forward_ensemble"]], "clarity.evaluator.hasqi": [[33, 0, 0, "-", "hasqi"], [32, 3, 1, "", "hasqi_v2"], [32, 3, 1, "", "hasqi_v2_better_ear"]], "clarity.evaluator.hasqi.hasqi": [[33, 3, 1, "", "hasqi_v2"], [33, 3, 1, "", "hasqi_v2_better_ear"]], "clarity.evaluator.mbstoi": [[35, 0, 0, "-", "mbstoi"], [36, 0, 0, "-", "mbstoi_utils"]], "clarity.evaluator.mbstoi.mbstoi": [[35, 3, 1, "", "mbstoi"]], "clarity.evaluator.mbstoi.mbstoi_utils": [[36, 3, 1, "", "equalisation_cancellation"], [36, 3, 1, "", "find_delay_impulse"], [36, 3, 1, "", "remove_silent_frames"], [36, 3, 1, "", "stft"], [36, 3, 1, "", "thirdoct"]], "clarity.evaluator.msbg": [[38, 0, 0, "-", "cochlea"], [39, 0, 0, "-", "msbg"], [40, 0, 0, "-", "msbg_hparams"], [41, 0, 0, "-", "msbg_utils"], [42, 0, 0, "-", "smearing"]], "clarity.evaluator.msbg.cochlea": [[38, 1, 1, "", "Cochlea"], [38, 1, 1, "", "FilterBank"], [38, 3, 1, "", "compute_envelope"], [38, 3, 1, "", "compute_recruitment_parameters"], [38, 3, 1, "", "gammatone_filterbank"], [38, 3, 1, "", "recruitment"]], "clarity.evaluator.msbg.cochlea.Cochlea": [[38, 2, 1, "", "simulate"]], "clarity.evaluator.msbg.cochlea.FilterBank": [[38, 4, 1, "", "denoms"], [38, 4, 1, "", "nums"]], "clarity.evaluator.msbg.msbg": [[39, 1, 1, "", "Ear"]], "clarity.evaluator.msbg.msbg.Ear": [[39, 2, 1, "", "get_src_correction"], [39, 2, 1, "", "make_calibration_signal"], [39, 2, 1, "", "process"], [39, 2, 1, "", "set_audiogram"], [39, 2, 1, "", "src_to_cochlea_filt"]], "clarity.evaluator.msbg.msbg_utils": [[41, 1, 1, "", "GTFParamDict"], [41, 3, 1, "", "fir2"], [41, 3, 1, "", "firwin2"], [41, 3, 1, "", "gen_eh2008_speech_noise"], [41, 3, 1, "", "gen_tone"], [41, 3, 1, "", "generate_key_percent"], [41, 3, 1, "", "measure_rms"], [41, 3, 1, "", "pad"], [41, 3, 1, "", "read_gtf_file"]], "clarity.evaluator.msbg.msbg_utils.GTFParamDict": [[41, 4, 1, "", "BROADEN"], [41, 4, 1, "", "DateCreated"], [41, 4, 1, "", "ERBn_CentFrq"], [41, 4, 1, "", "Fs"], [41, 4, 1, "", "GTnDelays"], [41, 4, 1, "", "GTn_CentFrq"], [41, 4, 1, "", "GTn_denoms"], [41, 4, 1, "", "GTn_nums"], [41, 4, 1, "", "HP_Delays"], [41, 4, 1, "", "HP_FCorner"], [41, 4, 1, "", "HP_denoms"], [41, 4, 1, "", "HP_nums"], [41, 4, 1, "", "NChans"], [41, 4, 1, "", "NGAMMA"], [41, 4, 1, "", "Recombination_dB"], [41, 4, 1, "", "SPACING"], [41, 4, 1, "", "Start2PoleHP"]], "clarity.evaluator.msbg.smearing": [[42, 1, 1, "", "Smearer"], [42, 3, 1, "", "audfilt"], [42, 3, 1, "", "make_smear_mat3"], [42, 3, 1, "", "smear3"]], "clarity.evaluator.msbg.smearing.Smearer": [[42, 2, 1, "", "smear"]], "clarity.predictor": [[44, 0, 0, "-", "torch_msbg"], [45, 0, 0, "-", "torch_stoi"]], "clarity.predictor.torch_msbg": [[44, 1, 1, "", "MSBGHearingModel"], [44, 1, 1, "", "torchloudnorm"]], "clarity.predictor.torch_msbg.MSBGHearingModel": [[44, 2, 1, "", "calibrate_spl"], [44, 4, 1, "", "f_smear"], [44, 2, 1, "", "forward"], [44, 4, 1, "", "gt_fir_sin"], [44, 2, 1, "", "measure_rms"], [44, 2, 1, "", "recruitment"], [44, 2, 1, "", "recruitment_fir"], [44, 4, 1, "", "recruitment_out_coef"], [44, 2, 1, "", "smear"], [44, 2, 1, "", "src_to_cochlea_filt"], [44, 4, 1, "", "training"]], "clarity.predictor.torch_msbg.torchloudnorm": [[44, 2, 1, "", "apply_filter"], [44, 2, 1, "", "forward"], [44, 4, 1, "", "high_pass"], [44, 2, 1, "", "integrated_loudness"], [44, 2, 1, "", "normalize_loudness"], [44, 4, 1, "", "training"]], "clarity.predictor.torch_stoi": [[45, 1, 1, "", "NegSTOILoss"], [45, 3, 1, "", "masked_mean"], [45, 3, 1, "", "masked_norm"], [45, 3, 1, "", "meanvar_norm"]], "clarity.predictor.torch_stoi.NegSTOILoss": [[45, 2, 1, "", "detect_silent_frames"], [45, 2, 1, "", "forward"], [45, 2, 1, "", "rowcol_norm"], [45, 2, 1, "", "stft"]], "clarity.utils": [[47, 0, 0, "-", "audiogram"], [48, 0, 0, "-", "car_noise_simulator"], [51, 0, 0, "-", "file_io"], [52, 0, 0, "-", "flac_encoder"], [53, 0, 0, "-", "results_support"], [54, 0, 0, "-", "signal_processing"], [55, 0, 0, "-", "source_separation_support"]], "clarity.utils.audiogram": [[47, 1, 1, "", "Audiogram"], [47, 1, 1, "", "Listener"]], "clarity.utils.audiogram.Audiogram": [[47, 4, 1, "id0", "frequencies"], [47, 2, 1, "", "has_frequencies"], [47, 4, 1, "id1", "levels"], [47, 2, 1, "", "resample"], [47, 5, 1, "", "severity"]], "clarity.utils.audiogram.Listener": [[47, 4, 1, "id2", "audiogram_left"], [47, 4, 1, "id3", "audiogram_right"], [47, 2, 1, "", "from_dict"], [47, 4, 1, "id4", "id"], [47, 2, 1, "", "load_listener_dict"]], "clarity.utils.car_noise_simulator": [[49, 0, 0, "-", "carnoise_parameters_generator"], [50, 0, 0, "-", "carnoise_signal_generator"]], "clarity.utils.car_noise_simulator.carnoise_parameters_generator": [[49, 1, 1, "", "CarNoiseParametersGenerator"]], "clarity.utils.car_noise_simulator.carnoise_parameters_generator.CarNoiseParametersGenerator": [[49, 4, 1, "", "GEAR_LOOKUP"], [49, 4, 1, "", "REFERENCE_CONSTANT_DB"], [49, 4, 1, "", "RPM_LOOKUP"], [49, 2, 1, "", "gen_parameters"], [49, 2, 1, "", "set_new_randomisation_range_freq_multiplier"]], "clarity.utils.car_noise_simulator.carnoise_signal_generator": [[50, 1, 1, "", "CarNoiseSignalGenerator"]], "clarity.utils.car_noise_simulator.carnoise_signal_generator.CarNoiseSignalGenerator": [[50, 4, 1, "", "FINAl_MULTIPLIER"], [50, 4, 1, "", "REFERENCE_CONSTANT_DB"], [50, 2, 1, "", "apply_commonness"], [50, 2, 1, "", "generate_car_noise"], [50, 2, 1, "", "generate_engine_noise"], [50, 2, 1, "", "generate_source_noise"], [50, 2, 1, "", "get_bump_params"], [50, 2, 1, "", "get_engine_params"]], "clarity.utils.file_io": [[51, 3, 1, "", "read_jsonl"], [51, 3, 1, "", "read_signal"], [51, 3, 1, "", "write_jsonl"], [51, 3, 1, "", "write_signal"]], "clarity.utils.flac_encoder": [[52, 1, 1, "", "FileDecoder"], [52, 1, 1, "", "FlacEncoder"], [52, 1, 1, "", "WavEncoder"], [52, 3, 1, "", "read_flac_signal"]], "clarity.utils.flac_encoder.FileDecoder": [[52, 2, 1, "", "process"]], "clarity.utils.flac_encoder.FlacEncoder": [[52, 2, 1, "", "decode"], [52, 2, 1, "", "encode"]], "clarity.utils.flac_encoder.WavEncoder": [[52, 2, 1, "", "process"]], "clarity.utils.results_support": [[53, 1, 1, "", "ResultsFile"]], "clarity.utils.results_support.ResultsFile": [[53, 2, 1, "", "add_result"], [53, 4, 1, "id0", "append_results"], [53, 4, 1, "id1", "file_name"], [53, 4, 1, "id2", "header_columns"]], "clarity.utils.signal_processing": [[54, 3, 1, "", "clip_signal"], [54, 3, 1, "", "compute_rms"], [54, 3, 1, "", "denormalize_signals"], [54, 3, 1, "", "normalize_signal"], [54, 3, 1, "", "resample"], [54, 3, 1, "", "to_16bit"]], "clarity.utils.source_separation_support": [[55, 3, 1, "", "get_device"], [55, 3, 1, "", "separate_sources"]], "recipes": [[62, 0, 0, "-", "cad1"], [80, 0, 0, "-", "cad_icassp_2024"], [81, 0, 0, "-", "cec1"], [91, 0, 0, "-", "cec2"], [99, 0, 0, "-", "cec3"], [104, 0, 0, "-", "cpc1"], [121, 0, 0, "-", "cpc2"], [126, 0, 0, "-", "icassp_2023"]], "recipes.cad1": [[63, 0, 0, "-", "task1"], [69, 0, 0, "-", "task2"]], "recipes.cad1.task1": [[64, 0, 0, "-", "baseline"]], "recipes.cad1.task1.baseline": [[65, 0, 0, "-", "enhance"], [66, 0, 0, "-", "evaluate"], [67, 0, 0, "-", "merge_batches_results"], [68, 0, 0, "-", "test"]], "recipes.cad1.task1.baseline.enhance": [[65, 3, 1, "", "apply_baseline_ha"], [65, 3, 1, "", "decompose_signal"], [65, 3, 1, "", "enhance"], [65, 3, 1, "", "get_device"], [65, 3, 1, "", "map_to_dict"], [65, 3, 1, "", "process_stems_for_listener"], [65, 3, 1, "", "remix_signal"], [65, 3, 1, "", "save_flac_signal"], [65, 3, 1, "", "separate_sources"]], "recipes.cad1.task1.baseline.evaluate": [[66, 3, 1, "", "make_song_listener_list"], [66, 3, 1, "", "run_calculate_aq"], [66, 3, 1, "", "set_song_seed"]], "recipes.cad1.task1.baseline.merge_batches_results": [[67, 3, 1, "", "join_batches"]], "recipes.cad1.task1.baseline.test": [[68, 3, 1, "", "enhance"], [68, 3, 1, "", "pack_submission"]], "recipes.cad1.task2": [[70, 0, 0, "-", "baseline"], [78, 0, 0, "-", "data_preparation"]], "recipes.cad1.task2.baseline": [[71, 0, 0, "-", "audio_manager"], [72, 0, 0, "-", "baseline_utils"], [73, 0, 0, "-", "car_scene_acoustics"], [74, 0, 0, "-", "enhance"], [75, 0, 0, "-", "evaluate"], [76, 0, 0, "-", "merge_batches_results"], [77, 0, 0, "-", "test"]], "recipes.cad1.task2.baseline.audio_manager": [[71, 1, 1, "", "AudioManager"]], "recipes.cad1.task2.baseline.audio_manager.AudioManager": [[71, 2, 1, "", "add_audios_to_save"], [71, 2, 1, "", "clip_audio"], [71, 2, 1, "", "get_lufs_level"], [71, 2, 1, "", "save_audios"], [71, 2, 1, "", "scale_to_lufs"]], "recipes.cad1.task2.baseline.baseline_utils": [[72, 3, 1, "", "load_hrtf"], [72, 3, 1, "", "load_listeners_and_scenes"], [72, 3, 1, "", "make_scene_listener_list"], [72, 3, 1, "", "read_mp3"]], "recipes.cad1.task2.baseline.car_scene_acoustics": [[73, 1, 1, "", "CarSceneAcoustics"]], "recipes.cad1.task2.baseline.car_scene_acoustics.CarSceneAcoustics": [[73, 4, 1, "", "ANECHOIC_HRTF_FOR_NOISE"], [73, 2, 1, "", "add_anechoic_hrtf_to_noise"], [73, 2, 1, "", "add_hrtf_to_stereo_signal"], [73, 2, 1, "", "add_two_signals"], [73, 2, 1, "", "apply_car_acoustics_to_signal"], [73, 2, 1, "", "apply_hearing_aid"], [73, 2, 1, "", "equalise_level"], [73, 2, 1, "", "get_car_noise"], [73, 2, 1, "", "preload_anechoic_hrtf"], [73, 2, 1, "", "scale_signal_to_snr"]], "recipes.cad1.task2.baseline.enhance": [[74, 3, 1, "", "compute_average_hearing_loss"], [74, 3, 1, "", "enhance"], [74, 3, 1, "", "enhance_song"]], "recipes.cad1.task2.baseline.evaluate": [[75, 3, 1, "", "evaluate_scene"], [75, 3, 1, "", "run_calculate_audio_quality"], [75, 3, 1, "", "set_scene_seed"]], "recipes.cad1.task2.baseline.merge_batches_results": [[76, 3, 1, "", "join_batches"]], "recipes.cad1.task2.baseline.test": [[77, 3, 1, "", "enhance"], [77, 3, 1, "", "pack_submission"]], "recipes.cad1.task2.data_preparation": [[79, 0, 0, "-", "build_scene_metadata"]], "recipes.cad1.task2.data_preparation.build_scene_metadata": [[79, 3, 1, "", "get_random_car_params"], [79, 3, 1, "", "get_random_head_rotation"], [79, 3, 1, "", "get_random_snr"], [79, 3, 1, "", "read_json"], [79, 3, 1, "", "run"], [79, 3, 1, "", "set_seed"]], "recipes.cec1": [[82, 0, 0, "-", "baseline"], [86, 0, 0, "-", "data_preparation"], [88, 0, 0, "-", "e009_sheffield"]], "recipes.cec1.baseline": [[83, 0, 0, "-", "enhance"], [84, 0, 0, "-", "evaluate"], [85, 0, 0, "-", "results"]], "recipes.cec1.baseline.enhance": [[83, 3, 1, "", "enhance"]], "recipes.cec1.baseline.evaluate": [[84, 3, 1, "", "listen"], [84, 3, 1, "", "run_HL_processing"], [84, 3, 1, "", "run_calculate_SI"]], "recipes.cec1.e009_sheffield": [[89, 0, 0, "-", "test"], [90, 0, 0, "-", "train"]], "recipes.cec1.e009_sheffield.test": [[89, 3, 1, "", "run"]], "recipes.cec1.e009_sheffield.train": [[90, 1, 1, "", "AmpModule"], [90, 1, 1, "", "DenModule"], [90, 3, 1, "", "run"], [90, 3, 1, "", "train_amp"], [90, 3, 1, "", "train_den"]], "recipes.cec1.e009_sheffield.train.AmpModule": [[90, 2, 1, "", "common_step"]], "recipes.cec1.e009_sheffield.train.DenModule": [[90, 2, 1, "", "common_step"]], "recipes.cec2": [[92, 0, 0, "-", "baseline"], [96, 0, 0, "-", "data_preparation"]], "recipes.cec2.baseline": [[93, 0, 0, "-", "enhance"], [94, 0, 0, "-", "evaluate"], [95, 0, 0, "-", "exp"]], "recipes.cec2.baseline.enhance": [[93, 3, 1, "", "enhance"]], "recipes.cec2.baseline.evaluate": [[94, 3, 1, "", "read_csv_scores"], [94, 3, 1, "", "run_calculate_SI"]], "recipes.cec2.data_preparation": [[97, 0, 0, "-", "build_scenes"]], "recipes.cec2.data_preparation.build_scenes": [[97, 3, 1, "", "build_rooms_from_rpf"], [97, 3, 1, "", "instantiate_scenes"], [97, 3, 1, "", "run"]], "recipes.cec3": [[100, 0, 0, "-", "baseline"]], "recipes.cec3.baseline": [[101, 0, 0, "-", "enhance"], [102, 0, 0, "-", "evaluate"], [103, 0, 0, "-", "report_score"]], "recipes.cec3.baseline.enhance": [[101, 3, 1, "", "amplify_signal"], [101, 3, 1, "", "enhance"]], "recipes.cec3.baseline.evaluate": [[102, 1, 1, "", "ResultsFile"], [102, 3, 1, "", "compute_metric"], [102, 3, 1, "", "make_scene_listener_list"], [102, 3, 1, "", "run_calculate_si"], [102, 3, 1, "", "set_scene_seed"]], "recipes.cec3.baseline.evaluate.ResultsFile": [[102, 2, 1, "", "add_result"], [102, 2, 1, "", "write_header"]], "recipes.cec3.baseline.report_score": [[103, 3, 1, "", "load_scenes_data"], [103, 3, 1, "", "main"]], "recipes.cpc1": [[105, 0, 0, "-", "baseline"], [108, 0, 0, "-", "e029_sheffield"], [114, 0, 0, "-", "e032_sheffield"], [120, 0, 0, "-", "test_listener_responses"]], "recipes.cpc1.baseline": [[106, 0, 0, "-", "compute_scores"], [107, 0, 0, "-", "run"]], "recipes.cpc1.baseline.compute_scores": [[106, 1, 1, "", "Model"], [106, 3, 1, "", "compute_scores"], [106, 3, 1, "", "kt_score"], [106, 3, 1, "", "ncc_score"], [106, 3, 1, "", "read_data"], [106, 3, 1, "", "rmse_score"], [106, 3, 1, "", "run"], [106, 3, 1, "", "std_err"]], "recipes.cpc1.baseline.compute_scores.Model": [[106, 2, 1, "", "fit"], [106, 4, 1, "", "params"], [106, 2, 1, "", "predict"]], "recipes.cpc1.baseline.run": [[107, 3, 1, "", "listen"], [107, 3, 1, "", "run"], [107, 3, 1, "", "run_HL_processing"], [107, 3, 1, "", "run_calculate_SI"]], "recipes.cpc1.e029_sheffield": [[109, 0, 0, "-", "evaluate"]], "recipes.cpc1.e029_sheffield.evaluate": [[109, 1, 1, "", "Model"], [109, 3, 1, "", "compute_scores"], [109, 3, 1, "", "kt_score"], [109, 3, 1, "", "ncc_score"], [109, 3, 1, "", "read_data"], [109, 3, 1, "", "rmse_score"], [109, 3, 1, "", "run"], [109, 3, 1, "", "std_err"]], "recipes.cpc1.e029_sheffield.evaluate.Model": [[109, 2, 1, "", "fit"], [109, 4, 1, "", "params"], [109, 2, 1, "", "predict"]], "recipes.cpc1.e032_sheffield": [[115, 0, 0, "-", "evaluate"]], "recipes.cpc1.e032_sheffield.evaluate": [[115, 1, 1, "", "Model"], [115, 3, 1, "", "compute_scores"], [115, 3, 1, "", "kt_score"], [115, 3, 1, "", "ncc_score"], [115, 3, 1, "", "read_data"], [115, 3, 1, "", "rmse_score"], [115, 3, 1, "", "run"], [115, 3, 1, "", "std_err"]], "recipes.cpc1.e032_sheffield.evaluate.Model": [[115, 2, 1, "", "fit"], [115, 4, 1, "", "params"], [115, 2, 1, "", "predict"]], "recipes.cpc2": [[122, 0, 0, "-", "baseline"]], "recipes.cpc2.baseline": [[123, 0, 0, "-", "compute_haspi"], [124, 0, 0, "-", "evaluate"], [125, 0, 0, "-", "predict"]], "recipes.cpc2.baseline.compute_haspi": [[123, 3, 1, "", "compute_haspi_for_signal"], [123, 3, 1, "", "parse_cec2_signal_name"], [123, 3, 1, "", "run_calculate_haspi"], [123, 3, 1, "", "set_seed_with_string"]], "recipes.cpc2.baseline.evaluate": [[124, 3, 1, "", "compute_scores"], [124, 3, 1, "", "evaluate"], [124, 3, 1, "", "kt_score"], [124, 3, 1, "", "ncc_score"], [124, 3, 1, "", "rmse_score"], [124, 3, 1, "", "std_err"]], "recipes.cpc2.baseline.predict": [[125, 1, 1, "", "LogisticModel"], [125, 3, 1, "", "make_disjoint_train_set"], [125, 3, 1, "", "predict"]], "recipes.cpc2.baseline.predict.LogisticModel": [[125, 2, 1, "", "fit"], [125, 4, 1, "", "params"], [125, 2, 1, "", "predict"]], "recipes.icassp_2023": [[127, 0, 0, "-", "baseline"]], "recipes.icassp_2023.baseline": [[128, 0, 0, "-", "enhance"], [129, 0, 0, "-", "evaluate"], [130, 0, 0, "-", "report_score"]], "recipes.icassp_2023.baseline.enhance": [[128, 3, 1, "", "enhance"]], "recipes.icassp_2023.baseline.evaluate": [[129, 1, 1, "", "ResultsFile"], [129, 3, 1, "", "amplify_signal"], [129, 3, 1, "", "compute_metric"], [129, 3, 1, "", "make_scene_listener_list"], [129, 3, 1, "", "run_calculate_si"], [129, 3, 1, "", "set_scene_seed"]], "recipes.icassp_2023.baseline.evaluate.ResultsFile": [[129, 2, 1, "", "add_result"], [129, 2, 1, "", "write_header"]], "recipes.icassp_2023.baseline.report_score": [[130, 3, 1, "", "report_score"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"contributor": 0, "coven": 0, "code": [0, 1, 146], "conduct": 0, "our": 0, "pledg": 0, "standard": 0, "enforc": 0, "respons": 0, "scope": 0, "guidelin": 0, "1": [0, 131, 132, 133, 134, 137, 146], "correct": 0, "2": [0, 131, 132, 133, 134, 137, 146], "warn": 0, "3": [0, 132, 137, 146], "temporari": 0, "ban": 0, "4": [0, 132, 133], "perman": 0, "attribut": 0, "contribut": 1, "pyclar": [1, 56, 149], "us": [1, 149], "virtual": 1, "environ": 1, "instal": [1, 57, 149], "develop": 1, "depend": 1, "creat": 1, "an": 1, "issu": 1, "fork": 1, "style": 1, "pre": 1, "commit": 1, "pathlib": 1, "over": 1, "o": 1, "id": 1, "test": [1, 68, 77, 89], "clariti": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147], "packag": [2, 3, 10, 13, 15, 17, 19, 24, 25, 27, 32, 34, 37, 40, 43, 46, 48, 61, 62, 63, 64, 69, 70, 78, 80, 81, 82, 85, 86, 88, 91, 92, 95, 96, 99, 100, 104, 105, 108, 114, 120, 121, 122, 126, 127], "subpackag": [2, 13, 24, 37, 46, 61, 62, 63, 69, 81, 82, 91, 92, 99, 104, 121, 126], "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "content": [2, 3, 10, 13, 15, 17, 19, 24, 25, 27, 32, 34, 37, 40, 43, 46, 48, 61, 62, 63, 64, 69, 70, 78, 80, 81, 82, 85, 86, 88, 91, 92, 95, 96, 99, 100, 104, 105, 108, 114, 120, 121, 122, 126, 127], "data": [3, 4, 5, 6, 7, 8, 9, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 146, 147, 149], "submodul": [3, 10, 13, 15, 17, 19, 25, 27, 32, 34, 37, 43, 46, 48, 64, 70, 78, 82, 86, 88, 92, 96, 100, 105, 108, 114, 122, 127], "hoa_tools_cec2": 4, "demo_data": 5, "scene_builder_cec2": 6, "scene_renderer_cec1": 7, "scene_renderer_cec2": 8, "util": [9, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "engin": [10, 11, 12], "loss": 11, "system": [12, 58, 137], "enhanc": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 65, 74, 83, 93, 101, 128, 132, 133, 134, 136, 139, 140, 141, 147], "compressor": [14, 149], "dnn": [15, 16, 144], "mc_conv_tasnet": 16, "dsp": [17, 18], "filter": 18, "gha": [19, 20, 21, 22], "gainrule_camfit": 20, "gha_interfac": 21, "gha_util": 22, "nalr": [23, 149], "evalu": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 75, 84, 94, 102, 109, 115, 124, 129, 132, 133, 134, 137, 140, 141, 143, 144, 146, 147, 149], "haaqi": [25, 26, 131], "haspi": [27, 28, 29, 30, 31, 146, 149], "eb": 28, "ebm": 29, "ip": 31, "hasqi": [32, 33], "mbstoi": [34, 35, 36], "mbstoi_util": 36, "msbg": [37, 38, 39, 40, 41, 42], "cochlea": 38, "msbg_hparam": 40, "msbg_util": 41, "smear": 42, "predictor": [43, 44, 45], "torch_msbg": 44, "torch_stoi": 45, "audiogram": 47, "car_noise_simul": [48, 49, 50], "carnoise_parameters_gener": 49, "carnoise_signal_gener": 50, "file_io": 51, "flac_encod": 52, "results_support": 53, "signal_process": 54, "source_separation_support": 55, "welcom": 56, "": [56, 149], "document": 56, "get": 56, "start": 56, "api": 56, "indic": 56, "tabl": 56, "pypi": 57, "github": 57, "pip": 57, "manual": 57, "clone": 57, "introduct": 58, "tutori": 58, "challeng": [58, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147], "workshop": 58, "tool": 58, "open": 58, "sourc": 58, "recip": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 148], "cad1": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 132, 133], "task1": [63, 64, 65, 66, 67, 68], "baselin": [64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 92, 93, 94, 95, 100, 101, 102, 103, 105, 106, 107, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 140, 141, 142, 146, 147, 149], "merge_batches_result": [67, 76], "task2": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 133], "audio_manag": 71, "baseline_util": 72, "car_scene_acoust": 73, "data_prepar": [78, 79, 86, 87, 96, 97, 98], "build_scene_metadata": 79, "cad_icassp_2024": [80, 134], "cec1": [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 136, 137, 138, 139, 148], "result": [85, 131, 132, 141, 147], "prepare_cec1_data": 87, "e009_sheffield": [88, 89, 90], "train": [90, 139, 143, 144], "cec2": [91, 92, 93, 94, 95, 96, 97, 98, 140, 148, 149], "exp": 95, "build_scen": 97, "render_scen": 98, "cec3": [99, 100, 101, 102, 103, 141], "report_scor": [103, 130], "cpc1": [104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 142, 148], "compute_scor": 106, "run": [107, 141, 143, 144, 149], "e029_sheffield": [108, 109, 110, 111, 112, 113], "infer": [110, 116, 143, 144], "prepare_data": [111, 117], "train_asr": [112, 118], "transformer_cpc1_ensemble_decod": 113, "e032_sheffield": [114, 115, 116, 117, 118, 119], "transformer_cpc1_decod": 119, "test_listener_respons": 120, "cpc2": [121, 122, 123, 124, 125, 145, 146], "compute_haspi": 123, "predict": [125, 142, 143, 144, 145, 146], "icassp_2023": [126, 127, 128, 129, 130], "The": [131, 132, 133, 134, 136, 140, 141, 142, 145, 146, 147, 149], "first": [131, 132, 133, 139], "cadenza": [131, 132, 133, 134, 135], "learn": 131, "resourc": 131, "task": [131, 132, 133], "listen": [131, 132, 133, 144, 149], "music": [131, 132, 133, 135], "via": [131, 132], "headphon": [131, 132], "averag": 131, "score": [131, 146], "per": 131, "song": 131, "car": [131, 133], "presenc": 131, "nois": 131, "genr": 131, "structur": [132, 133, 134, 136, 140, 141, 142, 146, 147, 149], "necessari": [132, 134], "addit": [132, 134], "option": [132, 134], "demo": [132, 133, 146, 149], "refer": [132, 133, 134, 139, 140, 141, 146, 147], "obtain": [133, 146], "icassp": [134, 135, 147], "2024": [134, 135], "gener": [135, 140], "dataset": 135, "unpack": 135, "1st": [136, 142], "prepar": [136, 138, 140, 143, 144], "refernc": 136, "cite": [136, 142], "hear": [137, 144], "aid": 137, "inform": [137, 149], "default": 137, "paramet": 137, "valu": 137, "e009": 139, "implement": 139, "sheffield": 139, "entri": 139, "citat": [139, 143, 144], "2nd": [140, 145, 146], "3rd": 141, "report": [141, 147], "tip": 141, "configur": [141, 149], "hydra": 141, "multipl": 141, "thread": 141, "e029": 143, "unsupervis": 143, "uncertainti": 143, "measur": 143, "automat": 143, "speech": [143, 144], "recognit": 143, "non": 143, "intrus": 143, "intellig": [143, 144, 146], "script": [143, 144], "requir": [143, 144], "asr": [143, 144], "model": 143, "e032": 144, "exploit": 144, "hidden": 144, "represent": 144, "from": [144, 149], "base": 144, "recognis": 144, "impair": 144, "similar": 144, "comput": 146, "make": 146, "2023": 147, "cec_icassp2023": 147, "usag": 149, "jupyt": 149, "notebook": 149, "01": 149, "metadata": 149, "file": 149, "process": 149, "collect": 149, "scene": 149, "associ": 149, "between": 149, "type": 149, "exampl": 149, "locat": 149, "about": 149, "02": 149, "command": 149, "line": 149, "inspect": 149, "exist": 149, "03": 149, "python": 149, "import": 149, "compon": 149, "select": 149, "load": 149, "signal": 149, "appli": 149, "output": 149}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Contributor Covenant Code of Conduct": [[0, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[0, "our-pledge"]], "Our Standards": [[0, "our-standards"]], "Enforcement Responsibilities": [[0, "enforcement-responsibilities"]], "Scope": [[0, "scope"]], "Enforcement": [[0, "enforcement"]], "Enforcement Guidelines": [[0, "enforcement-guidelines"]], "1. Correction": [[0, "correction"]], "2. Warning": [[0, "warning"]], "3. Temporary Ban": [[0, "temporary-ban"]], "4. Permanent Ban": [[0, "permanent-ban"]], "Attribution": [[0, "attribution"]], "Contributing to pyClarity": [[1, "contributing-to-pyclarity"]], "Using pyClarity": [[1, "using-pyclarity"]], "Contributing Code": [[1, "contributing-code"]], "Use a Virtual Environment": [[1, "use-a-virtual-environment"]], "Install Development Dependencies": [[1, "install-development-dependencies"]], "Create an issue": [[1, "create-an-issue"]], "Create a Fork": [[1, "create-a-fork"]], "Coding Style": [[1, "coding-style"]], "pre-commit": [[1, "pre-commit"]], "pathlib over os": [[1, "pathlib-over-os"]], "IDEs": [[1, "ides"]], "Testing": [[1, "testing"]], "clarity package": [[2, "clarity-package"]], "Subpackages": [[2, "subpackages"], [13, "subpackages"], [24, "subpackages"], [37, "subpackages"], [46, "subpackages"], [61, "subpackages"], [62, "subpackages"], [63, "subpackages"], [69, "subpackages"], [81, "subpackages"], [82, "subpackages"], [91, "subpackages"], [92, "subpackages"], [99, "subpackages"], [104, "subpackages"], [121, "subpackages"], [126, "subpackages"]], "Module contents": [[2, "module-clarity"], [3, "module-clarity.data"], [10, "module-clarity.engine"], [13, "module-clarity.enhancer"], [15, "module-clarity.enhancer.dnn"], [17, "module-clarity.enhancer.dsp"], [19, "module-clarity.enhancer.gha"], [24, "module-clarity.evaluator"], [25, "module-clarity.evaluator.haaqi"], [27, "module-clarity.evaluator.haspi"], [32, "module-clarity.evaluator.hasqi"], [34, "module-clarity.evaluator.mbstoi"], [37, "module-clarity.evaluator.msbg"], [40, "module-clarity.evaluator.msbg.msbg_hparams"], [43, "module-clarity.predictor"], [46, "module-clarity.utils"], [48, "module-clarity.utils.car_noise_simulator"], [61, "module-recipes"], [62, "module-recipes.cad1"], [63, "module-recipes.cad1.task1"], [64, "module-recipes.cad1.task1.baseline"], [69, "module-recipes.cad1.task2"], [70, "module-recipes.cad1.task2.baseline"], [78, "module-recipes.cad1.task2.data_preparation"], [80, "module-recipes.cad_icassp_2024"], [81, "module-recipes.cec1"], [82, "module-recipes.cec1.baseline"], [85, "module-recipes.cec1.baseline.results"], [86, "module-recipes.cec1.data_preparation"], [88, "module-recipes.cec1.e009_sheffield"], [91, "module-recipes.cec2"], [92, "module-recipes.cec2.baseline"], [95, "module-recipes.cec2.baseline.exp"], [96, "module-recipes.cec2.data_preparation"], [99, "module-recipes.cec3"], [100, "module-recipes.cec3.baseline"], [104, "module-recipes.cpc1"], [105, "module-recipes.cpc1.baseline"], [108, "module-recipes.cpc1.e029_sheffield"], [114, "module-recipes.cpc1.e032_sheffield"], [120, "module-recipes.cpc1.test_listener_responses"], [121, "module-recipes.cpc2"], [122, "module-recipes.cpc2.baseline"], [126, "module-recipes.icassp_2023"], [127, "module-recipes.icassp_2023.baseline"]], "clarity.data package": [[3, "clarity-data-package"]], "Submodules": [[3, "submodules"], [10, "submodules"], [13, "submodules"], [15, "submodules"], [17, "submodules"], [19, "submodules"], [25, "submodules"], [27, "submodules"], [32, "submodules"], [34, "submodules"], [37, "submodules"], [43, "submodules"], [46, "submodules"], [48, "submodules"], [64, "submodules"], [70, "submodules"], [78, "submodules"], [82, "submodules"], [86, "submodules"], [88, "submodules"], [92, "submodules"], [96, "submodules"], [100, "submodules"], [105, "submodules"], [108, "submodules"], [114, "submodules"], [122, "submodules"], [127, "submodules"]], "clarity.data.HOA_tools_cec2 module": [[4, "module-clarity.data.HOA_tools_cec2"]], "clarity.data.demo_data module": [[5, "module-clarity.data.demo_data"]], "clarity.data.scene_builder_cec2 module": [[6, "module-clarity.data.scene_builder_cec2"]], "clarity.data.scene_renderer_cec1 module": [[7, "clarity-data-scene-renderer-cec1-module"]], "clarity.data.scene_renderer_cec2 module": [[8, "clarity-data-scene-renderer-cec2-module"]], "clarity.data.utils module": [[9, "clarity-data-utils-module"]], "clarity.engine package": [[10, "clarity-engine-package"]], "clarity.engine.losses module": [[11, "module-clarity.engine.losses"]], "clarity.engine.system module": [[12, "module-clarity.engine.system"]], "clarity.enhancer package": [[13, "clarity-enhancer-package"]], "clarity.enhancer.compressor module": [[14, "module-clarity.enhancer.compressor"]], "clarity.enhancer.dnn package": [[15, "clarity-enhancer-dnn-package"]], "clarity.enhancer.dnn.mc_conv_tasnet module": [[16, "module-clarity.enhancer.dnn.mc_conv_tasnet"]], "clarity.enhancer.dsp package": [[17, "clarity-enhancer-dsp-package"]], "clarity.enhancer.dsp.filter module": [[18, "module-clarity.enhancer.dsp.filter"]], "clarity.enhancer.gha package": [[19, "clarity-enhancer-gha-package"]], "clarity.enhancer.gha.gainrule_camfit module": [[20, "module-clarity.enhancer.gha.gainrule_camfit"]], "clarity.enhancer.gha.gha_interface module": [[21, "module-clarity.enhancer.gha.gha_interface"]], "clarity.enhancer.gha.gha_utils module": [[22, "module-clarity.enhancer.gha.gha_utils"]], "clarity.enhancer.nalr module": [[23, "module-clarity.enhancer.nalr"]], "clarity.evaluator package": [[24, "clarity-evaluator-package"]], "clarity.evaluator.haaqi package": [[25, "clarity-evaluator-haaqi-package"]], "clarity.evaluator.haaqi.haaqi module": [[26, "module-clarity.evaluator.haaqi.haaqi"]], "clarity.evaluator.haspi package": [[27, "clarity-evaluator-haspi-package"]], "clarity.evaluator.haspi.eb module": [[28, "module-clarity.evaluator.haspi.eb"]], "clarity.evaluator.haspi.ebm module": [[29, "module-clarity.evaluator.haspi.ebm"]], "clarity.evaluator.haspi.haspi module": [[30, "module-clarity.evaluator.haspi.haspi"]], "clarity.evaluator.haspi.ip module": [[31, "module-clarity.evaluator.haspi.ip"]], "clarity.evaluator.hasqi package": [[32, "clarity-evaluator-hasqi-package"]], "clarity.evaluator.hasqi.hasqi module": [[33, "module-clarity.evaluator.hasqi.hasqi"]], "clarity.evaluator.mbstoi package": [[34, "clarity-evaluator-mbstoi-package"]], "clarity.evaluator.mbstoi.mbstoi module": [[35, "module-clarity.evaluator.mbstoi.mbstoi"]], "clarity.evaluator.mbstoi.mbstoi_utils module": [[36, "module-clarity.evaluator.mbstoi.mbstoi_utils"]], "clarity.evaluator.msbg package": [[37, "clarity-evaluator-msbg-package"]], "clarity.evaluator.msbg.cochlea module": [[38, "module-clarity.evaluator.msbg.cochlea"]], "clarity.evaluator.msbg.msbg module": [[39, "module-clarity.evaluator.msbg.msbg"]], "clarity.evaluator.msbg.msbg_hparams package": [[40, "clarity-evaluator-msbg-msbg-hparams-package"]], "clarity.evaluator.msbg.msbg_utils module": [[41, "module-clarity.evaluator.msbg.msbg_utils"]], "clarity.evaluator.msbg.smearing module": [[42, "module-clarity.evaluator.msbg.smearing"]], "clarity.predictor package": [[43, "clarity-predictor-package"]], "clarity.predictor.torch_msbg module": [[44, "module-clarity.predictor.torch_msbg"]], "clarity.predictor.torch_stoi module": [[45, "module-clarity.predictor.torch_stoi"]], "clarity.utils package": [[46, "clarity-utils-package"]], "clarity.utils.audiogram module": [[47, "module-clarity.utils.audiogram"]], "clarity.utils.car_noise_simulator package": [[48, "clarity-utils-car-noise-simulator-package"]], "clarity.utils.car_noise_simulator.carnoise_parameters_generator module": [[49, "module-clarity.utils.car_noise_simulator.carnoise_parameters_generator"]], "clarity.utils.car_noise_simulator.carnoise_signal_generator module": [[50, "module-clarity.utils.car_noise_simulator.carnoise_signal_generator"]], "clarity.utils.file_io module": [[51, "module-clarity.utils.file_io"]], "clarity.utils.flac_encoder module": [[52, "module-clarity.utils.flac_encoder"]], "clarity.utils.results_support module": [[53, "module-clarity.utils.results_support"]], "clarity.utils.signal_processing module": [[54, "module-clarity.utils.signal_processing"]], "clarity.utils.source_separation_support module": [[55, "module-clarity.utils.source_separation_support"]], "Welcome to pyClarity\u2019s documentation": [[56, "welcome-to-pyclarity-s-documentation"]], "Getting Started": [[56, null]], "API": [[56, null]], "Indices and tables": [[56, "indices-and-tables"]], "Installation": [[57, "installation"]], "PyPi": [[57, "pypi"]], "GitHub": [[57, "github"]], "Pip GitHub install": [[57, "pip-github-install"]], "Manual Cloning and Installation": [[57, "manual-cloning-and-installation"]], "Introduction": [[58, "introduction"]], "Tutorials": [[58, "tutorials"]], "Challenges": [[58, "challenges"]], "Workshops": [[58, "workshops"]], "Tools": [[58, "tools"]], "Open-source systems": [[58, "open-source-systems"]], "clarity": [[59, "clarity"]], "recipes package": [[61, "recipes-package"]], "recipes.cad1 package": [[62, "recipes-cad1-package"]], "recipes.cad1.task1 package": [[63, "recipes-cad1-task1-package"]], "recipes.cad1.task1.baseline package": [[64, "recipes-cad1-task1-baseline-package"]], "recipes.cad1.task1.baseline.enhance module": [[65, "module-recipes.cad1.task1.baseline.enhance"]], "recipes.cad1.task1.baseline.evaluate module": [[66, "module-recipes.cad1.task1.baseline.evaluate"]], "recipes.cad1.task1.baseline.merge_batches_results module": [[67, "module-recipes.cad1.task1.baseline.merge_batches_results"]], "recipes.cad1.task1.baseline.test module": [[68, "module-recipes.cad1.task1.baseline.test"]], "recipes.cad1.task2 package": [[69, "recipes-cad1-task2-package"]], "recipes.cad1.task2.baseline package": [[70, "recipes-cad1-task2-baseline-package"]], "recipes.cad1.task2.baseline.audio_manager module": [[71, "module-recipes.cad1.task2.baseline.audio_manager"]], "recipes.cad1.task2.baseline.baseline_utils module": [[72, "module-recipes.cad1.task2.baseline.baseline_utils"]], "recipes.cad1.task2.baseline.car_scene_acoustics module": [[73, "module-recipes.cad1.task2.baseline.car_scene_acoustics"]], "recipes.cad1.task2.baseline.enhance module": [[74, "module-recipes.cad1.task2.baseline.enhance"]], "recipes.cad1.task2.baseline.evaluate module": [[75, "module-recipes.cad1.task2.baseline.evaluate"]], "recipes.cad1.task2.baseline.merge_batches_results module": [[76, "module-recipes.cad1.task2.baseline.merge_batches_results"]], "recipes.cad1.task2.baseline.test module": [[77, "module-recipes.cad1.task2.baseline.test"]], "recipes.cad1.task2.data_preparation package": [[78, "recipes-cad1-task2-data-preparation-package"]], "recipes.cad1.task2.data_preparation.build_scene_metadata module": [[79, "module-recipes.cad1.task2.data_preparation.build_scene_metadata"]], "recipes.cad_icassp_2024 package": [[80, "recipes-cad-icassp-2024-package"]], "recipes.cec1 package": [[81, "recipes-cec1-package"]], "recipes.cec1.baseline package": [[82, "recipes-cec1-baseline-package"]], "recipes.cec1.baseline.enhance module": [[83, "module-recipes.cec1.baseline.enhance"]], "recipes.cec1.baseline.evaluate module": [[84, "module-recipes.cec1.baseline.evaluate"]], "recipes.cec1.baseline.results package": [[85, "recipes-cec1-baseline-results-package"]], "recipes.cec1.data_preparation package": [[86, "recipes-cec1-data-preparation-package"]], "recipes.cec1.data_preparation.prepare_cec1_data module": [[87, "recipes-cec1-data-preparation-prepare-cec1-data-module"]], "recipes.cec1.e009_sheffield package": [[88, "recipes-cec1-e009-sheffield-package"]], "recipes.cec1.e009_sheffield.test module": [[89, "module-recipes.cec1.e009_sheffield.test"]], "recipes.cec1.e009_sheffield.train module": [[90, "module-recipes.cec1.e009_sheffield.train"]], "recipes.cec2 package": [[91, "recipes-cec2-package"]], "recipes.cec2.baseline package": [[92, "recipes-cec2-baseline-package"]], "recipes.cec2.baseline.enhance module": [[93, "module-recipes.cec2.baseline.enhance"]], "recipes.cec2.baseline.evaluate module": [[94, "module-recipes.cec2.baseline.evaluate"]], "recipes.cec2.baseline.exp package": [[95, "recipes-cec2-baseline-exp-package"]], "recipes.cec2.data_preparation package": [[96, "recipes-cec2-data-preparation-package"]], "recipes.cec2.data_preparation.build_scenes module": [[97, "module-recipes.cec2.data_preparation.build_scenes"]], "recipes.cec2.data_preparation.render_scenes module": [[98, "recipes-cec2-data-preparation-render-scenes-module"]], "recipes.cec3 package": [[99, "recipes-cec3-package"]], "recipes.cec3.baseline package": [[100, "recipes-cec3-baseline-package"]], "recipes.cec3.baseline.enhance module": [[101, "module-recipes.cec3.baseline.enhance"]], "recipes.cec3.baseline.evaluate module": [[102, "module-recipes.cec3.baseline.evaluate"]], "recipes.cec3.baseline.report_score module": [[103, "module-recipes.cec3.baseline.report_score"]], "recipes.cpc1 package": [[104, "recipes-cpc1-package"]], "recipes.cpc1.baseline package": [[105, "recipes-cpc1-baseline-package"]], "recipes.cpc1.baseline.compute_scores module": [[106, "module-recipes.cpc1.baseline.compute_scores"]], "recipes.cpc1.baseline.run module": [[107, "module-recipes.cpc1.baseline.run"]], "recipes.cpc1.e029_sheffield package": [[108, "recipes-cpc1-e029-sheffield-package"]], "recipes.cpc1.e029_sheffield.evaluate module": [[109, "module-recipes.cpc1.e029_sheffield.evaluate"]], "recipes.cpc1.e029_sheffield.infer module": [[110, "recipes-cpc1-e029-sheffield-infer-module"]], "recipes.cpc1.e029_sheffield.prepare_data module": [[111, "recipes-cpc1-e029-sheffield-prepare-data-module"]], "recipes.cpc1.e029_sheffield.train_asr module": [[112, "recipes-cpc1-e029-sheffield-train-asr-module"]], "recipes.cpc1.e029_sheffield.transformer_cpc1_ensemble_decoder module": [[113, "recipes-cpc1-e029-sheffield-transformer-cpc1-ensemble-decoder-module"]], "recipes.cpc1.e032_sheffield package": [[114, "recipes-cpc1-e032-sheffield-package"]], "recipes.cpc1.e032_sheffield.evaluate module": [[115, "module-recipes.cpc1.e032_sheffield.evaluate"]], "recipes.cpc1.e032_sheffield.infer module": [[116, "recipes-cpc1-e032-sheffield-infer-module"]], "recipes.cpc1.e032_sheffield.prepare_data module": [[117, "recipes-cpc1-e032-sheffield-prepare-data-module"]], "recipes.cpc1.e032_sheffield.train_asr module": [[118, "recipes-cpc1-e032-sheffield-train-asr-module"]], "recipes.cpc1.e032_sheffield.transformer_cpc1_decoder module": [[119, "recipes-cpc1-e032-sheffield-transformer-cpc1-decoder-module"]], "recipes.cpc1.test_listener_responses package": [[120, "recipes-cpc1-test-listener-responses-package"]], "recipes.cpc2 package": [[121, "recipes-cpc2-package"]], "recipes.cpc2.baseline package": [[122, "recipes-cpc2-baseline-package"]], "recipes.cpc2.baseline.compute_haspi module": [[123, "module-recipes.cpc2.baseline.compute_haspi"]], "recipes.cpc2.baseline.evaluate module": [[124, "module-recipes.cpc2.baseline.evaluate"]], "recipes.cpc2.baseline.predict module": [[125, "module-recipes.cpc2.baseline.predict"]], "recipes.icassp_2023 package": [[126, "recipes-icassp-2023-package"]], "recipes.icassp_2023.baseline package": [[127, "recipes-icassp-2023-baseline-package"]], "recipes.icassp_2023.baseline.enhance module": [[128, "module-recipes.icassp_2023.baseline.enhance"]], "recipes.icassp_2023.baseline.evaluate module": [[129, "module-recipes.icassp_2023.baseline.evaluate"]], "recipes.icassp_2023.baseline.report_score module": [[130, "module-recipes.icassp_2023.baseline.report_score"]], "The First Cadenza Challenge": [[131, "the-first-cadenza-challenge"]], "Learning Resources": [[131, "learning-resources"]], "Baseline Results": [[131, "baseline-results"]], "Task 1 - Listening music via headphones": [[131, "task-1-listening-music-via-headphones"]], "Average HAAQI score per song": [[131, "average-haaqi-score-per-song"]], "Task 2 - Listening music in a car with presence of noise": [[131, "task-2-listening-music-in-a-car-with-presence-of-noise"]], "Average HAAQI score per genre": [[131, "average-haaqi-score-per-genre"]], "The First Cadenza Challenge (CAD1) - Task 1: Listening music via headphones": [[132, "the-first-cadenza-challenge-cad1-task-1-listening-music-via-headphones"]], "1. Data structure": [[132, "data-structure"], [133, "data-structure"], [134, "data-structure"], [146, "data-structure"]], "1.1 Necessary data": [[132, "necessary-data"], [134, "necessary-data"]], "1.2 Additional optional data": [[132, "additional-optional-data"], [134, "additional-optional-data"]], "1.3 Demo data": [[132, "demo-data"]], "2. Baseline": [[132, "baseline"], [133, "baseline"], [134, "baseline"], [146, "baseline"]], "2.1 Enhancement": [[132, "enhancement"], [133, "enhancement"], [134, "enhancement"]], "2.2 Evaluation": [[132, "evaluation"], [133, "evaluation"], [134, "evaluation"]], "3. Results": [[132, "results"]], "4. References": [[132, "references"], [133, "references"]], "The First Cadenza Challenge (CAD1) - Task 2: Listening music in a car": [[133, "the-first-cadenza-challenge-cad1-task-2-listening-music-in-a-car"]], "1.1 Obtaining the CAD1 - Task2 data": [[133, "obtaining-the-cad1-task2-data"]], "1.2 Demo data": [[133, "demo-data"], [146, "demo-data"]], "The ICASSP 2024 Cadenza Challenge (CAD_ICASSP_2024)": [[134, "the-icassp-2024-cadenza-challenge-cad-icassp-2024"]], "References": [[134, "references"], [139, "references"], [140, "references"], [141, "references"], [146, "references"], [147, "references"]], "Generate music dataset for the ICASSP 2024 Cadenza Challenge": [[135, "generate-music-dataset-for-the-icassp-2024-cadenza-challenge"]], "Unpack the data": [[135, "unpack-the-data"]], "Generate the dataset": [[135, "generate-the-dataset"]], "The 1st Clarity Enhancement Challenge": [[136, "the-1st-clarity-enhancement-challenge"]], "Data structure": [[136, "data-structure"], [140, "data-structure"], [141, "data-structure"], [142, "data-structure"], [147, "data-structure"]], "Data preparation": [[136, "data-preparation"], [140, "data-preparation"]], "Baseline": [[136, "baseline"], [140, "baseline"], [141, "baseline"], [142, "baseline"], [147, "baseline"]], "Refernces": [[136, "refernces"]], "Citing CEC1": [[136, "citing-cec1"]], "CLARITY CEC1 Baseline": [[137, "clarity-cec1-baseline"]], "1. Hearing aid baseline system": [[137, "hearing-aid-baseline-system"]], "2. Evaluation": [[137, "evaluation"]], "3.Information on default parameter values": [[137, "information-on-default-parameter-values"]], "CLARITY CEC1 Data Preparation": [[138, "clarity-cec1-data-preparation"]], "E009 - Implementation of the Sheffield entry for the first Clarity enhancement challenge (CEC1)": [[139, "e009-implementation-of-the-sheffield-entry-for-the-first-clarity-enhancement-challenge-cec1"]], "Train": [[139, "train"]], "Citation": [[139, "citation"], [143, "citation"], [144, "citation"]], "The 2nd Clarity Enhancement Challenge (CEC2)": [[140, "the-2nd-clarity-enhancement-challenge-cec2"]], "Data generation": [[140, "data-generation"]], "Baseline enhancement": [[140, "baseline-enhancement"]], "Evaluation": [[140, "evaluation"], [141, "evaluation"], [143, "evaluation"], [144, "evaluation"], [147, "evaluation"]], "The 3rd Clarity Enhancement Challenge (CEC3)": [[141, "the-3rd-clarity-enhancement-challenge-cec3"]], "Enhancement": [[141, "enhancement"], [147, "enhancement"]], "Reporting results": [[141, "reporting-results"], [147, "reporting-results"]], "Tips": [[141, "tips"]], "Configuring with Hydra": [[141, "configuring-with-hydra"]], "Running with multiple threads": [[141, "running-with-multiple-threads"]], "The 1st Clarity Prediction Challenge (CPC1)": [[142, "the-1st-clarity-prediction-challenge-cpc1"]], "Citing CPC1": [[142, "citing-cpc1"]], "E029 - Unsupervised Uncertainty Measures of Automatic Speech Recognition for Non-intrusive Speech Intelligibility Prediction": [[143, "e029-unsupervised-uncertainty-measures-of-automatic-speech-recognition-for-non-intrusive-speech-intelligibility-prediction"]], "Run the scripts": [[143, "run-the-scripts"], [144, "run-the-scripts"]], "Requirements": [[143, "requirements"], [144, "requirements"]], "Prepare ASR data": [[143, "prepare-asr-data"], [144, "prepare-asr-data"]], "Train ASR models": [[143, "train-asr-models"]], "Infer uncertainty": [[143, "infer-uncertainty"]], "E032 - Exploiting Hidden Representations from a DNN-based Speech Recogniser for Speech Intelligibility Prediction in Hearing-impaired Listeners": [[144, "e032-exploiting-hidden-representations-from-a-dnn-based-speech-recogniser-for-speech-intelligibility-prediction-in-hearing-impaired-listeners"]], "Train ASR": [[144, "train-asr"]], "Infer hidden representation similarity": [[144, "infer-hidden-representation-similarity"]], "The 2nd Clarity Prediction Challenge (CPC2)": [[145, "the-2nd-clarity-prediction-challenge-cpc2"]], "The 2nd Clarity Prediction Challenge (CPC2) baseline code": [[146, "the-2nd-clarity-prediction-challenge-cpc2-baseline-code"]], "1.1 Obtaining the CPC2 data": [[146, "obtaining-the-cpc2-data"]], "2.1 Computing the HASPI scores": [[146, "computing-the-haspi-scores"]], "2.2 Making intelligibility predictions": [[146, "making-intelligibility-predictions"]], "2.3 Evaluating the predictions": [[146, "evaluating-the-predictions"]], "The ICASSP 2023 Clarity Enhancement Challenge (CEC_ICASSP2023)": [[147, "the-icassp-2023-clarity-enhancement-challenge-cec-icassp2023"]], "Recipes": [[148, "recipes"]], "CEC1": [[148, null]], "CEC2": [[148, null]], "CPC1": [[148, null]], "Usage": [[149, "usage"]], "Jupyter Notebooks": [[149, "jupyter-notebooks"]], "01 Installing pyClarity and Using Metadata": [[149, "installing-pyclarity-and-using-metadata"]], "The structure of the metadata files": [[149, "the-structure-of-the-metadata-files"]], "Processing Collections of Scenes": [[149, "processing-collections-of-scenes"]], "Associations between metadata types": [[149, "associations-between-metadata-types"]], "Example: Locating information about the scene\u2019s listener": [[149, "example-locating-information-about-the-scene-s-listener"]], "02 Running the CEC2 Baseline from the command line": [[149, "running-the-cec2-baseline-from-the-command-line"]], "Install Demo Data": [[149, "install-demo-data"]], "Inspecting Existing Configuration": [[149, "inspecting-existing-configuration"]], "03 Running the CEC2 Baseline from Python": [[149, "running-the-cec2-baseline-from-python"]], "Running the baseline": [[149, "running-the-baseline"]], "Importing the baseline NALR and Compressor components": [[149, "importing-the-baseline-nalr-and-compressor-components"]], "Configuring the NALR and Compressor components": [[149, "configuring-the-nalr-and-compressor-components"]], "IMPORTANT": [[149, "important"]], "Selecting a scene and a listener": [[149, "selecting-a-scene-and-a-listener"]], "Loading the signals to process": [[149, "loading-the-signals-to-process"]], "Applying the NALR and Compressor components": [[149, "applying-the-nalr-and-compressor-components"]], "Evaluating outputs using HASPI": [[149, "evaluating-outputs-using-haspi"]]}, "indexentries": {"clarity": [[2, "module-clarity"]], "module": [[2, "module-clarity"], [3, "module-clarity.data"], [4, "module-clarity.data.HOA_tools_cec2"], [5, "module-clarity.data.demo_data"], [6, "module-clarity.data.scene_builder_cec2"], [10, "module-clarity.engine"], [11, "module-clarity.engine.losses"], [12, "module-clarity.engine.system"], [13, "module-clarity.enhancer"], [14, "module-clarity.enhancer.compressor"], [15, "module-clarity.enhancer.dnn"], [16, "module-clarity.enhancer.dnn.mc_conv_tasnet"], [17, "module-clarity.enhancer.dsp"], [18, "module-clarity.enhancer.dsp.filter"], [19, "module-clarity.enhancer.gha"], [20, "module-clarity.enhancer.gha.gainrule_camfit"], [21, "module-clarity.enhancer.gha.gha_interface"], [22, "module-clarity.enhancer.gha.gha_utils"], [23, "module-clarity.enhancer.nalr"], [24, "module-clarity.evaluator"], [25, "module-clarity.evaluator.haaqi"], [26, "module-clarity.evaluator.haaqi.haaqi"], [27, "module-clarity.evaluator.haspi"], [28, "module-clarity.evaluator.haspi.eb"], [29, "module-clarity.evaluator.haspi.ebm"], [30, "module-clarity.evaluator.haspi.haspi"], [31, "module-clarity.evaluator.haspi.ip"], [32, "module-clarity.evaluator.hasqi"], [33, "module-clarity.evaluator.hasqi.hasqi"], [34, "module-clarity.evaluator.mbstoi"], [35, "module-clarity.evaluator.mbstoi.mbstoi"], [36, "module-clarity.evaluator.mbstoi.mbstoi_utils"], [37, "module-clarity.evaluator.msbg"], [38, "module-clarity.evaluator.msbg.cochlea"], [39, "module-clarity.evaluator.msbg.msbg"], [40, "module-clarity.evaluator.msbg.msbg_hparams"], [41, "module-clarity.evaluator.msbg.msbg_utils"], [42, "module-clarity.evaluator.msbg.smearing"], [43, "module-clarity.predictor"], [44, "module-clarity.predictor.torch_msbg"], [45, "module-clarity.predictor.torch_stoi"], [46, "module-clarity.utils"], [47, "module-clarity.utils.audiogram"], [48, "module-clarity.utils.car_noise_simulator"], [49, "module-clarity.utils.car_noise_simulator.carnoise_parameters_generator"], [50, "module-clarity.utils.car_noise_simulator.carnoise_signal_generator"], [51, "module-clarity.utils.file_io"], [52, "module-clarity.utils.flac_encoder"], [53, "module-clarity.utils.results_support"], [54, "module-clarity.utils.signal_processing"], [55, "module-clarity.utils.source_separation_support"], [61, "module-recipes"], [62, "module-recipes.cad1"], [63, "module-recipes.cad1.task1"], [64, "module-recipes.cad1.task1.baseline"], [65, "module-recipes.cad1.task1.baseline.enhance"], [66, "module-recipes.cad1.task1.baseline.evaluate"], [67, "module-recipes.cad1.task1.baseline.merge_batches_results"], [68, "module-recipes.cad1.task1.baseline.test"], [69, "module-recipes.cad1.task2"], [70, "module-recipes.cad1.task2.baseline"], [71, "module-recipes.cad1.task2.baseline.audio_manager"], [72, "module-recipes.cad1.task2.baseline.baseline_utils"], [73, "module-recipes.cad1.task2.baseline.car_scene_acoustics"], [74, "module-recipes.cad1.task2.baseline.enhance"], [75, "module-recipes.cad1.task2.baseline.evaluate"], [76, "module-recipes.cad1.task2.baseline.merge_batches_results"], [77, "module-recipes.cad1.task2.baseline.test"], [78, "module-recipes.cad1.task2.data_preparation"], [79, "module-recipes.cad1.task2.data_preparation.build_scene_metadata"], [80, "module-recipes.cad_icassp_2024"], [81, "module-recipes.cec1"], [82, "module-recipes.cec1.baseline"], [83, "module-recipes.cec1.baseline.enhance"], [84, "module-recipes.cec1.baseline.evaluate"], [85, "module-recipes.cec1.baseline.results"], [86, "module-recipes.cec1.data_preparation"], [88, "module-recipes.cec1.e009_sheffield"], [89, "module-recipes.cec1.e009_sheffield.test"], [90, "module-recipes.cec1.e009_sheffield.train"], [91, "module-recipes.cec2"], [92, "module-recipes.cec2.baseline"], [93, "module-recipes.cec2.baseline.enhance"], [94, "module-recipes.cec2.baseline.evaluate"], [95, "module-recipes.cec2.baseline.exp"], [96, "module-recipes.cec2.data_preparation"], [97, "module-recipes.cec2.data_preparation.build_scenes"], [99, "module-recipes.cec3"], [100, "module-recipes.cec3.baseline"], [101, "module-recipes.cec3.baseline.enhance"], [102, "module-recipes.cec3.baseline.evaluate"], [103, "module-recipes.cec3.baseline.report_score"], [104, "module-recipes.cpc1"], [105, "module-recipes.cpc1.baseline"], [106, "module-recipes.cpc1.baseline.compute_scores"], [107, "module-recipes.cpc1.baseline.run"], [108, "module-recipes.cpc1.e029_sheffield"], [109, "module-recipes.cpc1.e029_sheffield.evaluate"], [114, "module-recipes.cpc1.e032_sheffield"], [115, "module-recipes.cpc1.e032_sheffield.evaluate"], [120, "module-recipes.cpc1.test_listener_responses"], [121, "module-recipes.cpc2"], [122, "module-recipes.cpc2.baseline"], [123, "module-recipes.cpc2.baseline.compute_haspi"], [124, "module-recipes.cpc2.baseline.evaluate"], [125, "module-recipes.cpc2.baseline.predict"], [126, "module-recipes.icassp_2023"], [127, "module-recipes.icassp_2023.baseline"], [128, "module-recipes.icassp_2023.baseline.enhance"], [129, "module-recipes.icassp_2023.baseline.evaluate"], [130, "module-recipes.icassp_2023.baseline.report_score"]], "clarity.data": [[3, "module-clarity.data"]], "hoarotator (class in clarity.data.hoa_tools_cec2)": [[4, "clarity.data.HOA_tools_cec2.HOARotator"]], "p() (in module clarity.data.hoa_tools_cec2)": [[4, "clarity.data.HOA_tools_cec2.P"]], "u() (in module clarity.data.hoa_tools_cec2)": [[4, "clarity.data.HOA_tools_cec2.U"]], "v() (in module clarity.data.hoa_tools_cec2)": [[4, "clarity.data.HOA_tools_cec2.V"]], "w() (in module clarity.data.hoa_tools_cec2)": [[4, "clarity.data.HOA_tools_cec2.W"]], "ambisonic_convolve() (in module clarity.data.hoa_tools_cec2)": [[4, "clarity.data.HOA_tools_cec2.ambisonic_convolve"]], "binaural_mixdown() (in module clarity.data.hoa_tools_cec2)": [[4, "clarity.data.HOA_tools_cec2.binaural_mixdown"]], "centred_element() (in module clarity.data.hoa_tools_cec2)": [[4, "clarity.data.HOA_tools_cec2.centred_element"]], "clarity.data.hoa_tools_cec2": [[4, "module-clarity.data.HOA_tools_cec2"]], "compute_uvw_coefficients() (in module clarity.data.hoa_tools_cec2)": [[4, "clarity.data.HOA_tools_cec2.compute_UVW_coefficients"]], "compute_band_rotation() (in module clarity.data.hoa_tools_cec2)": [[4, "clarity.data.HOA_tools_cec2.compute_band_rotation"]], "compute_rms() (in module clarity.data.hoa_tools_cec2)": [[4, "clarity.data.HOA_tools_cec2.compute_rms"]], "compute_rotation_matrix() (in module clarity.data.hoa_tools_cec2)": [[4, "clarity.data.HOA_tools_cec2.compute_rotation_matrix"]], "compute_rotation_vector() (in module clarity.data.hoa_tools_cec2)": [[4, "clarity.data.HOA_tools_cec2.compute_rotation_vector"]], "convert_a_to_b_format() (in module clarity.data.hoa_tools_cec2)": [[4, "clarity.data.HOA_tools_cec2.convert_a_to_b_format"]], "db_to_gain() (in module clarity.data.hoa_tools_cec2)": [[4, "clarity.data.HOA_tools_cec2.dB_to_gain"]], "dot() (in module clarity.data.hoa_tools_cec2)": [[4, "clarity.data.HOA_tools_cec2.dot"]], "equalise_rms_levels() (in module clarity.data.hoa_tools_cec2)": [[4, "clarity.data.HOA_tools_cec2.equalise_rms_levels"]], "rotate() (clarity.data.hoa_tools_cec2.hoarotator method)": [[4, "clarity.data.HOA_tools_cec2.HOARotator.rotate"]], "rotation_control_vector() (in module clarity.data.hoa_tools_cec2)": [[4, "clarity.data.HOA_tools_cec2.rotation_control_vector"]], "smoothstep() (in module clarity.data.hoa_tools_cec2)": [[4, "clarity.data.HOA_tools_cec2.smoothstep"]], "clarity.data.demo_data": [[5, "module-clarity.data.demo_data"]], "get_demo_data() (in module clarity.data.demo_data)": [[5, "clarity.data.demo_data.get_demo_data"]], "get_hrirs_demo() (in module clarity.data.demo_data)": [[5, "clarity.data.demo_data.get_hrirs_demo"]], "get_interferers_demo() (in module clarity.data.demo_data)": [[5, "clarity.data.demo_data.get_interferers_demo"]], "get_metadata_demo() (in module clarity.data.demo_data)": [[5, "clarity.data.demo_data.get_metadata_demo"]], "get_rooms_demo() (in module clarity.data.demo_data)": [[5, "clarity.data.demo_data.get_rooms_demo"]], "get_scenes_demo() (in module clarity.data.demo_data)": [[5, "clarity.data.demo_data.get_scenes_demo"]], "get_targets_demo() (in module clarity.data.demo_data)": [[5, "clarity.data.demo_data.get_targets_demo"]], "interferertype (class in clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.InterfererType"]], "music (clarity.data.scene_builder_cec2.interferertype attribute)": [[6, "clarity.data.scene_builder_cec2.InterfererType.MUSIC"]], "noise (clarity.data.scene_builder_cec2.interferertype attribute)": [[6, "clarity.data.scene_builder_cec2.InterfererType.NOISE"]], "roombuilder (class in clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.RoomBuilder"]], "roundingfloat (class in clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.RoundingFloat"]], "speech (clarity.data.scene_builder_cec2.interferertype attribute)": [[6, "clarity.data.scene_builder_cec2.InterfererType.SPEECH"]], "scenebuilder (class in clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.SceneBuilder"]], "add_snr_to_scene() (clarity.data.scene_builder_cec2.scenebuilder method)": [[6, "clarity.data.scene_builder_cec2.SceneBuilder.add_SNR_to_scene"]], "add_interferer_to_scene() (clarity.data.scene_builder_cec2.scenebuilder method)": [[6, "clarity.data.scene_builder_cec2.SceneBuilder.add_interferer_to_scene"]], "add_interferer_to_scene_inner() (in module clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.add_interferer_to_scene_inner"]], "add_listener_details_to_scene() (clarity.data.scene_builder_cec2.scenebuilder method)": [[6, "clarity.data.scene_builder_cec2.SceneBuilder.add_listener_details_to_scene"]], "add_target_to_scene() (clarity.data.scene_builder_cec2.scenebuilder method)": [[6, "clarity.data.scene_builder_cec2.SceneBuilder.add_target_to_scene"]], "add_this_target_to_scene() (in module clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.add_this_target_to_scene"]], "build_from_rpf() (clarity.data.scene_builder_cec2.roombuilder method)": [[6, "clarity.data.scene_builder_cec2.RoomBuilder.build_from_rpf"]], "build_room() (in module clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.build_room"]], "clarity.data.scene_builder_cec2": [[6, "module-clarity.data.scene_builder_cec2"]], "generate_rotation() (in module clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.generate_rotation"]], "generate_snr() (in module clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.generate_snr"]], "get_num_post_samples() (in module clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.get_num_post_samples"]], "get_num_pre_samples() (in module clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.get_num_pre_samples"]], "get_random_hrir_set() (in module clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.get_random_hrir_set"]], "get_random_interferer_offset() (in module clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.get_random_interferer_offset"]], "get_room() (clarity.data.scene_builder_cec2.roombuilder method)": [[6, "clarity.data.scene_builder_cec2.RoomBuilder.get_room"]], "get_room_dims() (in module clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.get_room_dims"]], "get_room_name() (in module clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.get_room_name"]], "get_vector() (in module clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.get_vector"]], "initialise_scenes() (clarity.data.scene_builder_cec2.scenebuilder method)": [[6, "clarity.data.scene_builder_cec2.SceneBuilder.initialise_scenes"]], "instantiate_scenes() (clarity.data.scene_builder_cec2.scenebuilder method)": [[6, "clarity.data.scene_builder_cec2.SceneBuilder.instantiate_scenes"]], "load() (clarity.data.scene_builder_cec2.roombuilder method)": [[6, "clarity.data.scene_builder_cec2.RoomBuilder.load"]], "make_rpf_filename_dict() (in module clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.make_rpf_filename_dict"]], "read_rpf_file() (in module clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.read_rpf_file"]], "rebuild_dict() (clarity.data.scene_builder_cec2.roombuilder method)": [[6, "clarity.data.scene_builder_cec2.RoomBuilder.rebuild_dict"]], "save_rooms() (clarity.data.scene_builder_cec2.roombuilder method)": [[6, "clarity.data.scene_builder_cec2.RoomBuilder.save_rooms"]], "save_scenes() (clarity.data.scene_builder_cec2.scenebuilder method)": [[6, "clarity.data.scene_builder_cec2.SceneBuilder.save_scenes"]], "select_interferer_types() (in module clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.select_interferer_types"]], "select_random_interferer() (in module clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.select_random_interferer"]], "set_random_seed() (in module clarity.data.scene_builder_cec2)": [[6, "clarity.data.scene_builder_cec2.set_random_seed"]], "clarity.engine": [[10, "module-clarity.engine"]], "sisnrloss (class in clarity.engine.losses)": [[11, "clarity.engine.losses.SISNRLoss"]], "snrloss (class in clarity.engine.losses)": [[11, "clarity.engine.losses.SNRLoss"]], "stoilevelloss (class in clarity.engine.losses)": [[11, "clarity.engine.losses.STOILevelLoss"]], "stoiloss (class in clarity.engine.losses)": [[11, "clarity.engine.losses.STOILoss"]], "alpha (clarity.engine.losses.stoilevelloss attribute)": [[11, "clarity.engine.losses.STOILevelLoss.alpha"]], "cal_sisnr() (clarity.engine.losses.sisnrloss method)": [[11, "clarity.engine.losses.SISNRLoss.cal_sisnr"]], "clarity.engine.losses": [[11, "module-clarity.engine.losses"]], "forward() (clarity.engine.losses.sisnrloss method)": [[11, "clarity.engine.losses.SISNRLoss.forward"]], "forward() (clarity.engine.losses.snrloss method)": [[11, "clarity.engine.losses.SNRLoss.forward"]], "forward() (clarity.engine.losses.stoilevelloss method)": [[11, "clarity.engine.losses.STOILevelLoss.forward"]], "forward() (clarity.engine.losses.stoiloss method)": [[11, "clarity.engine.losses.STOILoss.forward"]], "gamma_a (clarity.engine.losses.stoilevelloss attribute)": [[11, "clarity.engine.losses.STOILevelLoss.gamma_a"]], "l2norm() (clarity.engine.losses.snrloss method)": [[11, "clarity.engine.losses.SNRLoss.l2norm"]], "measure_loudness() (clarity.engine.losses.stoilevelloss method)": [[11, "clarity.engine.losses.STOILevelLoss.measure_loudness"]], "system (class in clarity.engine.system)": [[12, "clarity.engine.system.System"]], "clarity.engine.system": [[12, "module-clarity.engine.system"]], "common_step() (clarity.engine.system.system method)": [[12, "clarity.engine.system.System.common_step"]], "configure_optimizers() (clarity.engine.system.system method)": [[12, "clarity.engine.system.System.configure_optimizers"]], "forward() (clarity.engine.system.system method)": [[12, "clarity.engine.system.System.forward"]], "on_save_checkpoint() (clarity.engine.system.system method)": [[12, "clarity.engine.system.System.on_save_checkpoint"]], "on_validation_epoch_end() (clarity.engine.system.system method)": [[12, "clarity.engine.system.System.on_validation_epoch_end"]], "train_dataloader() (clarity.engine.system.system method)": [[12, "clarity.engine.system.System.train_dataloader"]], "training_step() (clarity.engine.system.system method)": [[12, "clarity.engine.system.System.training_step"]], "val_dataloader() (clarity.engine.system.system method)": [[12, "clarity.engine.system.System.val_dataloader"]], "validation_step() (clarity.engine.system.system method)": [[12, "clarity.engine.system.System.validation_step"]], "clarity.enhancer": [[13, "module-clarity.enhancer"]], "compressor (class in clarity.enhancer.compressor)": [[14, "clarity.enhancer.compressor.Compressor"]], "clarity.enhancer.compressor": [[14, "module-clarity.enhancer.compressor"]], "process() (clarity.enhancer.compressor.compressor method)": [[14, "clarity.enhancer.compressor.Compressor.process"]], "set_attack() (clarity.enhancer.compressor.compressor method)": [[14, "clarity.enhancer.compressor.Compressor.set_attack"]], "set_release() (clarity.enhancer.compressor.compressor method)": [[14, "clarity.enhancer.compressor.Compressor.set_release"]], "clarity.enhancer.dnn": [[15, "module-clarity.enhancer.dnn"]], "channelwiselayernorm (class in clarity.enhancer.dnn.mc_conv_tasnet)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.ChannelwiseLayerNorm"]], "chomp1d (class in clarity.enhancer.dnn.mc_conv_tasnet)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.Chomp1d"]], "convtasnet (class in clarity.enhancer.dnn.mc_conv_tasnet)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.ConvTasNet"]], "decoder (class in clarity.enhancer.dnn.mc_conv_tasnet)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.Decoder"]], "depthwiseseparableconv (class in clarity.enhancer.dnn.mc_conv_tasnet)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.DepthwiseSeparableConv"]], "globallayernorm (class in clarity.enhancer.dnn.mc_conv_tasnet)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.GlobalLayerNorm"]], "spatialencoder (class in clarity.enhancer.dnn.mc_conv_tasnet)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.SpatialEncoder"]], "spectralencoder (class in clarity.enhancer.dnn.mc_conv_tasnet)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.SpectralEncoder"]], "temporalblock (class in clarity.enhancer.dnn.mc_conv_tasnet)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.TemporalBlock"]], "temporalconvnet (class in clarity.enhancer.dnn.mc_conv_tasnet)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.TemporalConvNet"]], "chose_norm() (in module clarity.enhancer.dnn.mc_conv_tasnet)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.chose_norm"]], "clarity.enhancer.dnn.mc_conv_tasnet": [[16, "module-clarity.enhancer.dnn.mc_conv_tasnet"]], "forward() (clarity.enhancer.dnn.mc_conv_tasnet.channelwiselayernorm method)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.ChannelwiseLayerNorm.forward"]], "forward() (clarity.enhancer.dnn.mc_conv_tasnet.chomp1d method)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.Chomp1d.forward"]], "forward() (clarity.enhancer.dnn.mc_conv_tasnet.convtasnet method)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.ConvTasNet.forward"]], "forward() (clarity.enhancer.dnn.mc_conv_tasnet.decoder method)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.Decoder.forward"]], "forward() (clarity.enhancer.dnn.mc_conv_tasnet.depthwiseseparableconv method)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.DepthwiseSeparableConv.forward"]], "forward() (clarity.enhancer.dnn.mc_conv_tasnet.globallayernorm method)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.GlobalLayerNorm.forward"]], "forward() (clarity.enhancer.dnn.mc_conv_tasnet.spatialencoder method)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.SpatialEncoder.forward"]], "forward() (clarity.enhancer.dnn.mc_conv_tasnet.spectralencoder method)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.SpectralEncoder.forward"]], "forward() (clarity.enhancer.dnn.mc_conv_tasnet.temporalblock method)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.TemporalBlock.forward"]], "forward() (clarity.enhancer.dnn.mc_conv_tasnet.temporalconvnet method)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.TemporalConvNet.forward"]], "overlap_and_add() (in module clarity.enhancer.dnn.mc_conv_tasnet)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.overlap_and_add"]], "reset_parameters() (clarity.enhancer.dnn.mc_conv_tasnet.channelwiselayernorm method)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.ChannelwiseLayerNorm.reset_parameters"]], "reset_parameters() (clarity.enhancer.dnn.mc_conv_tasnet.globallayernorm method)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.GlobalLayerNorm.reset_parameters"]], "training (clarity.enhancer.dnn.mc_conv_tasnet.channelwiselayernorm attribute)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.ChannelwiseLayerNorm.training"]], "training (clarity.enhancer.dnn.mc_conv_tasnet.chomp1d attribute)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.Chomp1d.training"]], "training (clarity.enhancer.dnn.mc_conv_tasnet.convtasnet attribute)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.ConvTasNet.training"]], "training (clarity.enhancer.dnn.mc_conv_tasnet.decoder attribute)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.Decoder.training"]], "training (clarity.enhancer.dnn.mc_conv_tasnet.depthwiseseparableconv attribute)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.DepthwiseSeparableConv.training"]], "training (clarity.enhancer.dnn.mc_conv_tasnet.globallayernorm attribute)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.GlobalLayerNorm.training"]], "training (clarity.enhancer.dnn.mc_conv_tasnet.spatialencoder attribute)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.SpatialEncoder.training"]], "training (clarity.enhancer.dnn.mc_conv_tasnet.spectralencoder attribute)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.SpectralEncoder.training"]], "training (clarity.enhancer.dnn.mc_conv_tasnet.temporalblock attribute)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.TemporalBlock.training"]], "training (clarity.enhancer.dnn.mc_conv_tasnet.temporalconvnet attribute)": [[16, "clarity.enhancer.dnn.mc_conv_tasnet.TemporalConvNet.training"]], "clarity.enhancer.dsp": [[17, "module-clarity.enhancer.dsp"]], "audiometricfir (class in clarity.enhancer.dsp.filter)": [[18, "clarity.enhancer.dsp.filter.AudiometricFIR"]], "clarity.enhancer.dsp.filter": [[18, "module-clarity.enhancer.dsp.filter"]], "forward() (clarity.enhancer.dsp.filter.audiometricfir method)": [[18, "clarity.enhancer.dsp.filter.AudiometricFIR.forward"]], "training (clarity.enhancer.dsp.filter.audiometricfir attribute)": [[18, "clarity.enhancer.dsp.filter.AudiometricFIR.training"]], "clarity.enhancer.gha": [[19, "module-clarity.enhancer.gha"]], "clarity.enhancer.gha.gainrule_camfit": [[20, "module-clarity.enhancer.gha.gainrule_camfit"]], "compute_proportion_overlap() (in module clarity.enhancer.gha.gainrule_camfit)": [[20, "clarity.enhancer.gha.gainrule_camfit.compute_proportion_overlap"]], "gainrule_camfit_compr() (in module clarity.enhancer.gha.gainrule_camfit)": [[20, "clarity.enhancer.gha.gainrule_camfit.gainrule_camfit_compr"]], "gainrule_camfit_linear() (in module clarity.enhancer.gha.gainrule_camfit)": [[20, "clarity.enhancer.gha.gainrule_camfit.gainrule_camfit_linear"]], "gains() (in module clarity.enhancer.gha.gainrule_camfit)": [[20, "clarity.enhancer.gha.gainrule_camfit.gains"]], "isothr() (in module clarity.enhancer.gha.gainrule_camfit)": [[20, "clarity.enhancer.gha.gainrule_camfit.isothr"]], "ghahearingaid (class in clarity.enhancer.gha.gha_interface)": [[21, "clarity.enhancer.gha.gha_interface.GHAHearingAid"]], "clarity.enhancer.gha.gha_interface": [[21, "module-clarity.enhancer.gha.gha_interface"]], "create_ha_inputs() (clarity.enhancer.gha.gha_interface.ghahearingaid method)": [[21, "clarity.enhancer.gha.gha_interface.GHAHearingAid.create_HA_inputs"]], "create_configured_cfgfile() (clarity.enhancer.gha.gha_interface.ghahearingaid method)": [[21, "clarity.enhancer.gha.gha_interface.GHAHearingAid.create_configured_cfgfile"]], "process_files() (clarity.enhancer.gha.gha_interface.ghahearingaid method)": [[21, "clarity.enhancer.gha.gha_interface.GHAHearingAid.process_files"]], "fittingparams (class in clarity.enhancer.gha.gha_utils)": [[22, "clarity.enhancer.gha.gha_utils.FittingParams"]], "gaintable (class in clarity.enhancer.gha.gha_utils)": [[22, "clarity.enhancer.gha.gha_utils.Gaintable"]], "channels (clarity.enhancer.gha.gha_utils.fittingparams attribute)": [[22, "clarity.enhancer.gha.gha_utils.FittingParams.channels"]], "channels (clarity.enhancer.gha.gha_utils.gaintable attribute)": [[22, "clarity.enhancer.gha.gha_utils.Gaintable.channels"]], "clarity.enhancer.gha.gha_utils": [[22, "module-clarity.enhancer.gha.gha_utils"]], "edge_frequencies (clarity.enhancer.gha.gha_utils.fittingparams attribute)": [[22, "clarity.enhancer.gha.gha_utils.FittingParams.edge_frequencies"]], "format_gaintable() (in module clarity.enhancer.gha.gha_utils)": [[22, "clarity.enhancer.gha.gha_utils.format_gaintable"]], "frequencies (clarity.enhancer.gha.gha_utils.fittingparams attribute)": [[22, "clarity.enhancer.gha.gha_utils.FittingParams.frequencies"]], "frequencies (clarity.enhancer.gha.gha_utils.gaintable attribute)": [[22, "clarity.enhancer.gha.gha_utils.Gaintable.frequencies"]], "get_gaintable() (in module clarity.enhancer.gha.gha_utils)": [[22, "clarity.enhancer.gha.gha_utils.get_gaintable"]], "levels (clarity.enhancer.gha.gha_utils.fittingparams attribute)": [[22, "clarity.enhancer.gha.gha_utils.FittingParams.levels"]], "levels (clarity.enhancer.gha.gha_utils.gaintable attribute)": [[22, "clarity.enhancer.gha.gha_utils.Gaintable.levels"]], "multifit_apply_noisegate() (in module clarity.enhancer.gha.gha_utils)": [[22, "clarity.enhancer.gha.gha_utils.multifit_apply_noisegate"]], "noisegatelevel (clarity.enhancer.gha.gha_utils.gaintable attribute)": [[22, "clarity.enhancer.gha.gha_utils.Gaintable.noisegatelevel"]], "noisegateslope (clarity.enhancer.gha.gha_utils.gaintable attribute)": [[22, "clarity.enhancer.gha.gha_utils.Gaintable.noisegateslope"]], "sgt (clarity.enhancer.gha.gha_utils.gaintable attribute)": [[22, "clarity.enhancer.gha.gha_utils.Gaintable.sGt"]], "sgt_uncorr (clarity.enhancer.gha.gha_utils.gaintable attribute)": [[22, "clarity.enhancer.gha.gha_utils.Gaintable.sGt_uncorr"]], "side (clarity.enhancer.gha.gha_utils.fittingparams attribute)": [[22, "clarity.enhancer.gha.gha_utils.FittingParams.side"]], "nalr (class in clarity.enhancer.nalr)": [[23, "clarity.enhancer.nalr.NALR"]], "apply() (clarity.enhancer.nalr.nalr method)": [[23, "clarity.enhancer.nalr.NALR.apply"]], "build() (clarity.enhancer.nalr.nalr method)": [[23, "clarity.enhancer.nalr.NALR.build"]], "clarity.enhancer.nalr": [[23, "module-clarity.enhancer.nalr"]], "clarity.evaluator": [[24, "module-clarity.evaluator"]], "clarity.evaluator.haaqi": [[25, "module-clarity.evaluator.haaqi"]], "compute_haaqi() (in module clarity.evaluator.haaqi)": [[25, "clarity.evaluator.haaqi.compute_haaqi"]], "haaqi_v1() (in module clarity.evaluator.haaqi)": [[25, "clarity.evaluator.haaqi.haaqi_v1"]], "clarity.evaluator.haaqi.haaqi": [[26, "module-clarity.evaluator.haaqi.haaqi"]], "compute_haaqi() (in module clarity.evaluator.haaqi.haaqi)": [[26, "clarity.evaluator.haaqi.haaqi.compute_haaqi"]], "haaqi_v1() (in module clarity.evaluator.haaqi.haaqi)": [[26, "clarity.evaluator.haaqi.haaqi.haaqi_v1"]], "clarity.evaluator.haspi": [[27, "module-clarity.evaluator.haspi"]], "haspi_v2() (in module clarity.evaluator.haspi)": [[27, "clarity.evaluator.haspi.haspi_v2"]], "haspi_v2_be() (in module clarity.evaluator.haspi)": [[27, "clarity.evaluator.haspi.haspi_v2_be"]], "ave_covary2() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.ave_covary2"]], "bandwidth_adjust() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.bandwidth_adjust"]], "basilar_membrane_add_noise() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.basilar_membrane_add_noise"]], "bm_covary() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.bm_covary"]], "center_frequency() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.center_frequency"]], "clarity.evaluator.haspi.eb": [[28, "module-clarity.evaluator.haspi.eb"]], "convert_rms_to_sl() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.convert_rms_to_sl"]], "ear_model() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.ear_model"]], "env_compress_basilar_membrane() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.env_compress_basilar_membrane"]], "env_smooth() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.env_smooth"]], "envelope_align() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.envelope_align"]], "envelope_sl() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.envelope_sl"]], "gammatone_bandwidth_demodulation() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.gammatone_bandwidth_demodulation"]], "gammatone_basilar_membrane() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.gammatone_basilar_membrane"]], "group_delay_compensate() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.group_delay_compensate"]], "inner_hair_cell_adaptation() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.inner_hair_cell_adaptation"]], "input_align() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.input_align"]], "loss_parameters() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.loss_parameters"]], "mel_cepstrum_correlation() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.mel_cepstrum_correlation"]], "melcor9() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.melcor9"]], "melcor9_crosscovmatrix() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.melcor9_crosscovmatrix"]], "middle_ear() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.middle_ear"]], "resample_24khz() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.resample_24khz"]], "spectrum_diff() (in module clarity.evaluator.haspi.eb)": [[28, "clarity.evaluator.haspi.eb.spectrum_diff"]], "add_noise() (in module clarity.evaluator.haspi.ebm)": [[29, "clarity.evaluator.haspi.ebm.add_noise"]], "cepstral_correlation_coef() (in module clarity.evaluator.haspi.ebm)": [[29, "clarity.evaluator.haspi.ebm.cepstral_correlation_coef"]], "clarity.evaluator.haspi.ebm": [[29, "module-clarity.evaluator.haspi.ebm"]], "env_filter() (in module clarity.evaluator.haspi.ebm)": [[29, "clarity.evaluator.haspi.ebm.env_filter"]], "fir_modulation_filter() (in module clarity.evaluator.haspi.ebm)": [[29, "clarity.evaluator.haspi.ebm.fir_modulation_filter"]], "modulation_cross_correlation() (in module clarity.evaluator.haspi.ebm)": [[29, "clarity.evaluator.haspi.ebm.modulation_cross_correlation"]], "clarity.evaluator.haspi.haspi": [[30, "module-clarity.evaluator.haspi.haspi"]], "haspi_v2() (in module clarity.evaluator.haspi.haspi)": [[30, "clarity.evaluator.haspi.haspi.haspi_v2"]], "haspi_v2_be() (in module clarity.evaluator.haspi.haspi)": [[30, "clarity.evaluator.haspi.haspi.haspi_v2_be"]], "clarity.evaluator.haspi.ip": [[31, "module-clarity.evaluator.haspi.ip"]], "get_neural_net() (in module clarity.evaluator.haspi.ip)": [[31, "clarity.evaluator.haspi.ip.get_neural_net"]], "nn_feed_forward() (in module clarity.evaluator.haspi.ip)": [[31, "clarity.evaluator.haspi.ip.nn_feed_forward"]], "nn_feed_forward_ensemble() (in module clarity.evaluator.haspi.ip)": [[31, "clarity.evaluator.haspi.ip.nn_feed_forward_ensemble"]], "clarity.evaluator.hasqi": [[32, "module-clarity.evaluator.hasqi"]], "hasqi_v2() (in module clarity.evaluator.hasqi)": [[32, "clarity.evaluator.hasqi.hasqi_v2"]], "hasqi_v2_better_ear() (in module clarity.evaluator.hasqi)": [[32, "clarity.evaluator.hasqi.hasqi_v2_better_ear"]], "clarity.evaluator.hasqi.hasqi": [[33, "module-clarity.evaluator.hasqi.hasqi"]], "hasqi_v2() (in module clarity.evaluator.hasqi.hasqi)": [[33, "clarity.evaluator.hasqi.hasqi.hasqi_v2"]], "hasqi_v2_better_ear() (in module clarity.evaluator.hasqi.hasqi)": [[33, "clarity.evaluator.hasqi.hasqi.hasqi_v2_better_ear"]], "clarity.evaluator.mbstoi": [[34, "module-clarity.evaluator.mbstoi"]], "mbstoi() (in module clarity.evaluator.mbstoi)": [[34, "clarity.evaluator.mbstoi.mbstoi"]], "clarity.evaluator.mbstoi.mbstoi": [[35, "module-clarity.evaluator.mbstoi.mbstoi"]], "mbstoi() (in module clarity.evaluator.mbstoi.mbstoi)": [[35, "clarity.evaluator.mbstoi.mbstoi.mbstoi"]], "clarity.evaluator.mbstoi.mbstoi_utils": [[36, "module-clarity.evaluator.mbstoi.mbstoi_utils"]], "equalisation_cancellation() (in module clarity.evaluator.mbstoi.mbstoi_utils)": [[36, "clarity.evaluator.mbstoi.mbstoi_utils.equalisation_cancellation"]], "find_delay_impulse() (in module clarity.evaluator.mbstoi.mbstoi_utils)": [[36, "clarity.evaluator.mbstoi.mbstoi_utils.find_delay_impulse"]], "remove_silent_frames() (in module clarity.evaluator.mbstoi.mbstoi_utils)": [[36, "clarity.evaluator.mbstoi.mbstoi_utils.remove_silent_frames"]], "stft() (in module clarity.evaluator.mbstoi.mbstoi_utils)": [[36, "clarity.evaluator.mbstoi.mbstoi_utils.stft"]], "thirdoct() (in module clarity.evaluator.mbstoi.mbstoi_utils)": [[36, "clarity.evaluator.mbstoi.mbstoi_utils.thirdoct"]], "clarity.evaluator.msbg": [[37, "module-clarity.evaluator.msbg"]], "cochlea (class in clarity.evaluator.msbg.cochlea)": [[38, "clarity.evaluator.msbg.cochlea.Cochlea"]], "filterbank (class in clarity.evaluator.msbg.cochlea)": [[38, "clarity.evaluator.msbg.cochlea.FilterBank"]], "clarity.evaluator.msbg.cochlea": [[38, "module-clarity.evaluator.msbg.cochlea"]], "compute_envelope() (in module clarity.evaluator.msbg.cochlea)": [[38, "clarity.evaluator.msbg.cochlea.compute_envelope"]], "compute_recruitment_parameters() (in module clarity.evaluator.msbg.cochlea)": [[38, "clarity.evaluator.msbg.cochlea.compute_recruitment_parameters"]], "denoms (clarity.evaluator.msbg.cochlea.filterbank attribute)": [[38, "clarity.evaluator.msbg.cochlea.FilterBank.denoms"]], "gammatone_filterbank() (in module clarity.evaluator.msbg.cochlea)": [[38, "clarity.evaluator.msbg.cochlea.gammatone_filterbank"]], "nums (clarity.evaluator.msbg.cochlea.filterbank attribute)": [[38, "clarity.evaluator.msbg.cochlea.FilterBank.nums"]], "recruitment() (in module clarity.evaluator.msbg.cochlea)": [[38, "clarity.evaluator.msbg.cochlea.recruitment"]], "simulate() (clarity.evaluator.msbg.cochlea.cochlea method)": [[38, "clarity.evaluator.msbg.cochlea.Cochlea.simulate"]], "ear (class in clarity.evaluator.msbg.msbg)": [[39, "clarity.evaluator.msbg.msbg.Ear"]], "clarity.evaluator.msbg.msbg": [[39, "module-clarity.evaluator.msbg.msbg"]], "get_src_correction() (clarity.evaluator.msbg.msbg.ear static method)": [[39, "clarity.evaluator.msbg.msbg.Ear.get_src_correction"]], "make_calibration_signal() (clarity.evaluator.msbg.msbg.ear method)": [[39, "clarity.evaluator.msbg.msbg.Ear.make_calibration_signal"]], "process() (clarity.evaluator.msbg.msbg.ear method)": [[39, "clarity.evaluator.msbg.msbg.Ear.process"]], "set_audiogram() (clarity.evaluator.msbg.msbg.ear method)": [[39, "clarity.evaluator.msbg.msbg.Ear.set_audiogram"]], "src_to_cochlea_filt() (clarity.evaluator.msbg.msbg.ear static method)": [[39, "clarity.evaluator.msbg.msbg.Ear.src_to_cochlea_filt"]], "clarity.evaluator.msbg.msbg_hparams": [[40, "module-clarity.evaluator.msbg.msbg_hparams"]], "broaden (clarity.evaluator.msbg.msbg_utils.gtfparamdict attribute)": [[41, "clarity.evaluator.msbg.msbg_utils.GTFParamDict.BROADEN"]], "datecreated (clarity.evaluator.msbg.msbg_utils.gtfparamdict attribute)": [[41, "clarity.evaluator.msbg.msbg_utils.GTFParamDict.DateCreated"]], "erbn_centfrq (clarity.evaluator.msbg.msbg_utils.gtfparamdict attribute)": [[41, "clarity.evaluator.msbg.msbg_utils.GTFParamDict.ERBn_CentFrq"]], "fs (clarity.evaluator.msbg.msbg_utils.gtfparamdict attribute)": [[41, "clarity.evaluator.msbg.msbg_utils.GTFParamDict.Fs"]], "gtfparamdict (class in clarity.evaluator.msbg.msbg_utils)": [[41, "clarity.evaluator.msbg.msbg_utils.GTFParamDict"]], "gtndelays (clarity.evaluator.msbg.msbg_utils.gtfparamdict attribute)": [[41, "clarity.evaluator.msbg.msbg_utils.GTFParamDict.GTnDelays"]], "gtn_centfrq (clarity.evaluator.msbg.msbg_utils.gtfparamdict attribute)": [[41, "clarity.evaluator.msbg.msbg_utils.GTFParamDict.GTn_CentFrq"]], "gtn_denoms (clarity.evaluator.msbg.msbg_utils.gtfparamdict attribute)": [[41, "clarity.evaluator.msbg.msbg_utils.GTFParamDict.GTn_denoms"]], "gtn_nums (clarity.evaluator.msbg.msbg_utils.gtfparamdict attribute)": [[41, "clarity.evaluator.msbg.msbg_utils.GTFParamDict.GTn_nums"]], "hp_delays (clarity.evaluator.msbg.msbg_utils.gtfparamdict attribute)": [[41, "clarity.evaluator.msbg.msbg_utils.GTFParamDict.HP_Delays"]], "hp_fcorner (clarity.evaluator.msbg.msbg_utils.gtfparamdict attribute)": [[41, "clarity.evaluator.msbg.msbg_utils.GTFParamDict.HP_FCorner"]], "hp_denoms (clarity.evaluator.msbg.msbg_utils.gtfparamdict attribute)": [[41, "clarity.evaluator.msbg.msbg_utils.GTFParamDict.HP_denoms"]], "hp_nums (clarity.evaluator.msbg.msbg_utils.gtfparamdict attribute)": [[41, "clarity.evaluator.msbg.msbg_utils.GTFParamDict.HP_nums"]], "nchans (clarity.evaluator.msbg.msbg_utils.gtfparamdict attribute)": [[41, "clarity.evaluator.msbg.msbg_utils.GTFParamDict.NChans"]], "ngamma (clarity.evaluator.msbg.msbg_utils.gtfparamdict attribute)": [[41, "clarity.evaluator.msbg.msbg_utils.GTFParamDict.NGAMMA"]], "recombination_db (clarity.evaluator.msbg.msbg_utils.gtfparamdict attribute)": [[41, "clarity.evaluator.msbg.msbg_utils.GTFParamDict.Recombination_dB"]], "spacing (clarity.evaluator.msbg.msbg_utils.gtfparamdict attribute)": [[41, "clarity.evaluator.msbg.msbg_utils.GTFParamDict.SPACING"]], "start2polehp (clarity.evaluator.msbg.msbg_utils.gtfparamdict attribute)": [[41, "clarity.evaluator.msbg.msbg_utils.GTFParamDict.Start2PoleHP"]], "clarity.evaluator.msbg.msbg_utils": [[41, "module-clarity.evaluator.msbg.msbg_utils"]], "fir2() (in module clarity.evaluator.msbg.msbg_utils)": [[41, "clarity.evaluator.msbg.msbg_utils.fir2"]], "firwin2() (in module clarity.evaluator.msbg.msbg_utils)": [[41, "clarity.evaluator.msbg.msbg_utils.firwin2"]], "gen_eh2008_speech_noise() (in module clarity.evaluator.msbg.msbg_utils)": [[41, "clarity.evaluator.msbg.msbg_utils.gen_eh2008_speech_noise"]], "gen_tone() (in module clarity.evaluator.msbg.msbg_utils)": [[41, "clarity.evaluator.msbg.msbg_utils.gen_tone"]], "generate_key_percent() (in module clarity.evaluator.msbg.msbg_utils)": [[41, "clarity.evaluator.msbg.msbg_utils.generate_key_percent"]], "measure_rms() (in module clarity.evaluator.msbg.msbg_utils)": [[41, "clarity.evaluator.msbg.msbg_utils.measure_rms"]], "pad() (in module clarity.evaluator.msbg.msbg_utils)": [[41, "clarity.evaluator.msbg.msbg_utils.pad"]], "read_gtf_file() (in module clarity.evaluator.msbg.msbg_utils)": [[41, "clarity.evaluator.msbg.msbg_utils.read_gtf_file"]], "smearer (class in clarity.evaluator.msbg.smearing)": [[42, "clarity.evaluator.msbg.smearing.Smearer"]], "audfilt() (in module clarity.evaluator.msbg.smearing)": [[42, "clarity.evaluator.msbg.smearing.audfilt"]], "clarity.evaluator.msbg.smearing": [[42, "module-clarity.evaluator.msbg.smearing"]], "make_smear_mat3() (in module clarity.evaluator.msbg.smearing)": [[42, "clarity.evaluator.msbg.smearing.make_smear_mat3"]], "smear() (clarity.evaluator.msbg.smearing.smearer method)": [[42, "clarity.evaluator.msbg.smearing.Smearer.smear"]], "smear3() (in module clarity.evaluator.msbg.smearing)": [[42, "clarity.evaluator.msbg.smearing.smear3"]], "clarity.predictor": [[43, "module-clarity.predictor"]], "msbghearingmodel (class in clarity.predictor.torch_msbg)": [[44, "clarity.predictor.torch_msbg.MSBGHearingModel"]], "apply_filter() (clarity.predictor.torch_msbg.torchloudnorm method)": [[44, "clarity.predictor.torch_msbg.torchloudnorm.apply_filter"]], "calibrate_spl() (clarity.predictor.torch_msbg.msbghearingmodel method)": [[44, "clarity.predictor.torch_msbg.MSBGHearingModel.calibrate_spl"]], "clarity.predictor.torch_msbg": [[44, "module-clarity.predictor.torch_msbg"]], "f_smear (clarity.predictor.torch_msbg.msbghearingmodel attribute)": [[44, "clarity.predictor.torch_msbg.MSBGHearingModel.f_smear"]], "forward() (clarity.predictor.torch_msbg.msbghearingmodel method)": [[44, "clarity.predictor.torch_msbg.MSBGHearingModel.forward"]], "forward() (clarity.predictor.torch_msbg.torchloudnorm method)": [[44, "clarity.predictor.torch_msbg.torchloudnorm.forward"]], "gt_fir_sin (clarity.predictor.torch_msbg.msbghearingmodel attribute)": [[44, "clarity.predictor.torch_msbg.MSBGHearingModel.gt_fir_sin"]], "high_pass (clarity.predictor.torch_msbg.torchloudnorm attribute)": [[44, "clarity.predictor.torch_msbg.torchloudnorm.high_pass"]], "integrated_loudness() (clarity.predictor.torch_msbg.torchloudnorm method)": [[44, "clarity.predictor.torch_msbg.torchloudnorm.integrated_loudness"]], "measure_rms() (clarity.predictor.torch_msbg.msbghearingmodel method)": [[44, "clarity.predictor.torch_msbg.MSBGHearingModel.measure_rms"]], "normalize_loudness() (clarity.predictor.torch_msbg.torchloudnorm method)": [[44, "clarity.predictor.torch_msbg.torchloudnorm.normalize_loudness"]], "recruitment() (clarity.predictor.torch_msbg.msbghearingmodel method)": [[44, "clarity.predictor.torch_msbg.MSBGHearingModel.recruitment"]], "recruitment_fir() (clarity.predictor.torch_msbg.msbghearingmodel method)": [[44, "clarity.predictor.torch_msbg.MSBGHearingModel.recruitment_fir"]], "recruitment_out_coef (clarity.predictor.torch_msbg.msbghearingmodel attribute)": [[44, "clarity.predictor.torch_msbg.MSBGHearingModel.recruitment_out_coef"]], "smear() (clarity.predictor.torch_msbg.msbghearingmodel method)": [[44, "clarity.predictor.torch_msbg.MSBGHearingModel.smear"]], "src_to_cochlea_filt() (clarity.predictor.torch_msbg.msbghearingmodel method)": [[44, "clarity.predictor.torch_msbg.MSBGHearingModel.src_to_cochlea_filt"]], "torchloudnorm (class in clarity.predictor.torch_msbg)": [[44, "clarity.predictor.torch_msbg.torchloudnorm"]], "training (clarity.predictor.torch_msbg.msbghearingmodel attribute)": [[44, "clarity.predictor.torch_msbg.MSBGHearingModel.training"]], "training (clarity.predictor.torch_msbg.torchloudnorm attribute)": [[44, "clarity.predictor.torch_msbg.torchloudnorm.training"]], "negstoiloss (class in clarity.predictor.torch_stoi)": [[45, "clarity.predictor.torch_stoi.NegSTOILoss"]], "clarity.predictor.torch_stoi": [[45, "module-clarity.predictor.torch_stoi"]], "detect_silent_frames() (clarity.predictor.torch_stoi.negstoiloss static method)": [[45, "clarity.predictor.torch_stoi.NegSTOILoss.detect_silent_frames"]], "forward() (clarity.predictor.torch_stoi.negstoiloss method)": [[45, "clarity.predictor.torch_stoi.NegSTOILoss.forward"]], "masked_mean() (in module clarity.predictor.torch_stoi)": [[45, "clarity.predictor.torch_stoi.masked_mean"]], "masked_norm() (in module clarity.predictor.torch_stoi)": [[45, "clarity.predictor.torch_stoi.masked_norm"]], "meanvar_norm() (in module clarity.predictor.torch_stoi)": [[45, "clarity.predictor.torch_stoi.meanvar_norm"]], "rowcol_norm() (clarity.predictor.torch_stoi.negstoiloss static method)": [[45, "clarity.predictor.torch_stoi.NegSTOILoss.rowcol_norm"]], "stft() (clarity.predictor.torch_stoi.negstoiloss static method)": [[45, "clarity.predictor.torch_stoi.NegSTOILoss.stft"]], "clarity.utils": [[46, "module-clarity.utils"]], "audiogram (class in clarity.utils.audiogram)": [[47, "clarity.utils.audiogram.Audiogram"]], "listener (class in clarity.utils.audiogram)": [[47, "clarity.utils.audiogram.Listener"]], "audiogram_left (clarity.utils.audiogram.listener attribute)": [[47, "clarity.utils.audiogram.Listener.audiogram_left"], [47, "id2"]], "audiogram_right (clarity.utils.audiogram.listener attribute)": [[47, "clarity.utils.audiogram.Listener.audiogram_right"], [47, "id3"]], "clarity.utils.audiogram": [[47, "module-clarity.utils.audiogram"]], "frequencies (clarity.utils.audiogram.audiogram attribute)": [[47, "clarity.utils.audiogram.Audiogram.frequencies"], [47, "id0"]], "from_dict() (clarity.utils.audiogram.listener static method)": [[47, "clarity.utils.audiogram.Listener.from_dict"]], "has_frequencies() (clarity.utils.audiogram.audiogram method)": [[47, "clarity.utils.audiogram.Audiogram.has_frequencies"]], "id (clarity.utils.audiogram.listener attribute)": [[47, "clarity.utils.audiogram.Listener.id"], [47, "id4"]], "levels (clarity.utils.audiogram.audiogram attribute)": [[47, "clarity.utils.audiogram.Audiogram.levels"], [47, "id1"]], "load_listener_dict() (clarity.utils.audiogram.listener static method)": [[47, "clarity.utils.audiogram.Listener.load_listener_dict"]], "resample() (clarity.utils.audiogram.audiogram method)": [[47, "clarity.utils.audiogram.Audiogram.resample"]], "severity (clarity.utils.audiogram.audiogram property)": [[47, "clarity.utils.audiogram.Audiogram.severity"]], "clarity.utils.car_noise_simulator": [[48, "module-clarity.utils.car_noise_simulator"]], "carnoiseparametersgenerator (class in clarity.utils.car_noise_simulator.carnoise_parameters_generator)": [[49, "clarity.utils.car_noise_simulator.carnoise_parameters_generator.CarNoiseParametersGenerator"]], "gear_lookup (clarity.utils.car_noise_simulator.carnoise_parameters_generator.carnoiseparametersgenerator attribute)": [[49, "clarity.utils.car_noise_simulator.carnoise_parameters_generator.CarNoiseParametersGenerator.GEAR_LOOKUP"]], "reference_constant_db (clarity.utils.car_noise_simulator.carnoise_parameters_generator.carnoiseparametersgenerator attribute)": [[49, "clarity.utils.car_noise_simulator.carnoise_parameters_generator.CarNoiseParametersGenerator.REFERENCE_CONSTANT_DB"]], "rpm_lookup (clarity.utils.car_noise_simulator.carnoise_parameters_generator.carnoiseparametersgenerator attribute)": [[49, "clarity.utils.car_noise_simulator.carnoise_parameters_generator.CarNoiseParametersGenerator.RPM_LOOKUP"]], "clarity.utils.car_noise_simulator.carnoise_parameters_generator": [[49, "module-clarity.utils.car_noise_simulator.carnoise_parameters_generator"]], "gen_parameters() (clarity.utils.car_noise_simulator.carnoise_parameters_generator.carnoiseparametersgenerator method)": [[49, "clarity.utils.car_noise_simulator.carnoise_parameters_generator.CarNoiseParametersGenerator.gen_parameters"]], "set_new_randomisation_range_freq_multiplier() (clarity.utils.car_noise_simulator.carnoise_parameters_generator.carnoiseparametersgenerator method)": [[49, "clarity.utils.car_noise_simulator.carnoise_parameters_generator.CarNoiseParametersGenerator.set_new_randomisation_range_freq_multiplier"]], "carnoisesignalgenerator (class in clarity.utils.car_noise_simulator.carnoise_signal_generator)": [[50, "clarity.utils.car_noise_simulator.carnoise_signal_generator.CarNoiseSignalGenerator"]], "final_multiplier (clarity.utils.car_noise_simulator.carnoise_signal_generator.carnoisesignalgenerator attribute)": [[50, "clarity.utils.car_noise_simulator.carnoise_signal_generator.CarNoiseSignalGenerator.FINAl_MULTIPLIER"]], "reference_constant_db (clarity.utils.car_noise_simulator.carnoise_signal_generator.carnoisesignalgenerator attribute)": [[50, "clarity.utils.car_noise_simulator.carnoise_signal_generator.CarNoiseSignalGenerator.REFERENCE_CONSTANT_DB"]], "apply_commonness() (clarity.utils.car_noise_simulator.carnoise_signal_generator.carnoisesignalgenerator static method)": [[50, "clarity.utils.car_noise_simulator.carnoise_signal_generator.CarNoiseSignalGenerator.apply_commonness"]], "clarity.utils.car_noise_simulator.carnoise_signal_generator": [[50, "module-clarity.utils.car_noise_simulator.carnoise_signal_generator"]], "generate_car_noise() (clarity.utils.car_noise_simulator.carnoise_signal_generator.carnoisesignalgenerator method)": [[50, "clarity.utils.car_noise_simulator.carnoise_signal_generator.CarNoiseSignalGenerator.generate_car_noise"]], "generate_engine_noise() (clarity.utils.car_noise_simulator.carnoise_signal_generator.carnoisesignalgenerator method)": [[50, "clarity.utils.car_noise_simulator.carnoise_signal_generator.CarNoiseSignalGenerator.generate_engine_noise"]], "generate_source_noise() (clarity.utils.car_noise_simulator.carnoise_signal_generator.carnoisesignalgenerator method)": [[50, "clarity.utils.car_noise_simulator.carnoise_signal_generator.CarNoiseSignalGenerator.generate_source_noise"]], "get_bump_params() (clarity.utils.car_noise_simulator.carnoise_signal_generator.carnoisesignalgenerator method)": [[50, "clarity.utils.car_noise_simulator.carnoise_signal_generator.CarNoiseSignalGenerator.get_bump_params"]], "get_engine_params() (clarity.utils.car_noise_simulator.carnoise_signal_generator.carnoisesignalgenerator method)": [[50, "clarity.utils.car_noise_simulator.carnoise_signal_generator.CarNoiseSignalGenerator.get_engine_params"]], "clarity.utils.file_io": [[51, "module-clarity.utils.file_io"]], "read_jsonl() (in module clarity.utils.file_io)": [[51, "clarity.utils.file_io.read_jsonl"]], "read_signal() (in module clarity.utils.file_io)": [[51, "clarity.utils.file_io.read_signal"]], "write_jsonl() (in module clarity.utils.file_io)": [[51, "clarity.utils.file_io.write_jsonl"]], "write_signal() (in module clarity.utils.file_io)": [[51, "clarity.utils.file_io.write_signal"]], "filedecoder (class in clarity.utils.flac_encoder)": [[52, "clarity.utils.flac_encoder.FileDecoder"]], "flacencoder (class in clarity.utils.flac_encoder)": [[52, "clarity.utils.flac_encoder.FlacEncoder"]], "wavencoder (class in clarity.utils.flac_encoder)": [[52, "clarity.utils.flac_encoder.WavEncoder"]], "clarity.utils.flac_encoder": [[52, "module-clarity.utils.flac_encoder"]], "decode() (clarity.utils.flac_encoder.flacencoder static method)": [[52, "clarity.utils.flac_encoder.FlacEncoder.decode"]], "encode() (clarity.utils.flac_encoder.flacencoder method)": [[52, "clarity.utils.flac_encoder.FlacEncoder.encode"]], "process() (clarity.utils.flac_encoder.filedecoder method)": [[52, "clarity.utils.flac_encoder.FileDecoder.process"]], "process() (clarity.utils.flac_encoder.wavencoder method)": [[52, "clarity.utils.flac_encoder.WavEncoder.process"]], "read_flac_signal() (in module clarity.utils.flac_encoder)": [[52, "clarity.utils.flac_encoder.read_flac_signal"]], "resultsfile (class in clarity.utils.results_support)": [[53, "clarity.utils.results_support.ResultsFile"]], "add_result() (clarity.utils.results_support.resultsfile method)": [[53, "clarity.utils.results_support.ResultsFile.add_result"]], "append_results (clarity.utils.results_support.resultsfile attribute)": [[53, "clarity.utils.results_support.ResultsFile.append_results"], [53, "id0"]], "clarity.utils.results_support": [[53, "module-clarity.utils.results_support"]], "file_name (clarity.utils.results_support.resultsfile attribute)": [[53, "clarity.utils.results_support.ResultsFile.file_name"], [53, "id1"]], "header_columns (clarity.utils.results_support.resultsfile attribute)": [[53, "clarity.utils.results_support.ResultsFile.header_columns"], [53, "id2"]], "clarity.utils.signal_processing": [[54, "module-clarity.utils.signal_processing"]], "clip_signal() (in module clarity.utils.signal_processing)": [[54, "clarity.utils.signal_processing.clip_signal"]], "compute_rms() (in module clarity.utils.signal_processing)": [[54, "clarity.utils.signal_processing.compute_rms"]], "denormalize_signals() (in module clarity.utils.signal_processing)": [[54, "clarity.utils.signal_processing.denormalize_signals"]], "normalize_signal() (in module clarity.utils.signal_processing)": [[54, "clarity.utils.signal_processing.normalize_signal"]], "resample() (in module clarity.utils.signal_processing)": [[54, "clarity.utils.signal_processing.resample"]], "to_16bit() (in module clarity.utils.signal_processing)": [[54, "clarity.utils.signal_processing.to_16bit"]], "clarity.utils.source_separation_support": [[55, "module-clarity.utils.source_separation_support"]], "get_device() (in module clarity.utils.source_separation_support)": [[55, "clarity.utils.source_separation_support.get_device"]], "separate_sources() (in module clarity.utils.source_separation_support)": [[55, "clarity.utils.source_separation_support.separate_sources"]], "recipes": [[61, "module-recipes"]], "recipes.cad1": [[62, "module-recipes.cad1"]], "recipes.cad1.task1": [[63, "module-recipes.cad1.task1"]], "recipes.cad1.task1.baseline": [[64, "module-recipes.cad1.task1.baseline"]], "apply_baseline_ha() (in module recipes.cad1.task1.baseline.enhance)": [[65, "recipes.cad1.task1.baseline.enhance.apply_baseline_ha"]], "decompose_signal() (in module recipes.cad1.task1.baseline.enhance)": [[65, "recipes.cad1.task1.baseline.enhance.decompose_signal"]], "enhance() (in module recipes.cad1.task1.baseline.enhance)": [[65, "recipes.cad1.task1.baseline.enhance.enhance"]], "get_device() (in module recipes.cad1.task1.baseline.enhance)": [[65, "recipes.cad1.task1.baseline.enhance.get_device"]], "map_to_dict() (in module recipes.cad1.task1.baseline.enhance)": [[65, "recipes.cad1.task1.baseline.enhance.map_to_dict"]], "process_stems_for_listener() (in module recipes.cad1.task1.baseline.enhance)": [[65, "recipes.cad1.task1.baseline.enhance.process_stems_for_listener"]], "recipes.cad1.task1.baseline.enhance": [[65, "module-recipes.cad1.task1.baseline.enhance"]], "remix_signal() (in module recipes.cad1.task1.baseline.enhance)": [[65, "recipes.cad1.task1.baseline.enhance.remix_signal"]], "save_flac_signal() (in module recipes.cad1.task1.baseline.enhance)": [[65, "recipes.cad1.task1.baseline.enhance.save_flac_signal"]], "separate_sources() (in module recipes.cad1.task1.baseline.enhance)": [[65, "recipes.cad1.task1.baseline.enhance.separate_sources"]], "make_song_listener_list() (in module recipes.cad1.task1.baseline.evaluate)": [[66, "recipes.cad1.task1.baseline.evaluate.make_song_listener_list"]], "recipes.cad1.task1.baseline.evaluate": [[66, "module-recipes.cad1.task1.baseline.evaluate"]], "run_calculate_aq() (in module recipes.cad1.task1.baseline.evaluate)": [[66, "recipes.cad1.task1.baseline.evaluate.run_calculate_aq"]], "set_song_seed() (in module recipes.cad1.task1.baseline.evaluate)": [[66, "recipes.cad1.task1.baseline.evaluate.set_song_seed"]], "join_batches() (in module recipes.cad1.task1.baseline.merge_batches_results)": [[67, "recipes.cad1.task1.baseline.merge_batches_results.join_batches"]], "recipes.cad1.task1.baseline.merge_batches_results": [[67, "module-recipes.cad1.task1.baseline.merge_batches_results"]], "enhance() (in module recipes.cad1.task1.baseline.test)": [[68, "recipes.cad1.task1.baseline.test.enhance"]], "pack_submission() (in module recipes.cad1.task1.baseline.test)": [[68, "recipes.cad1.task1.baseline.test.pack_submission"]], "recipes.cad1.task1.baseline.test": [[68, "module-recipes.cad1.task1.baseline.test"]], "recipes.cad1.task2": [[69, "module-recipes.cad1.task2"]], "recipes.cad1.task2.baseline": [[70, "module-recipes.cad1.task2.baseline"]], "audiomanager (class in recipes.cad1.task2.baseline.audio_manager)": [[71, "recipes.cad1.task2.baseline.audio_manager.AudioManager"]], "add_audios_to_save() (recipes.cad1.task2.baseline.audio_manager.audiomanager method)": [[71, "recipes.cad1.task2.baseline.audio_manager.AudioManager.add_audios_to_save"]], "clip_audio() (recipes.cad1.task2.baseline.audio_manager.audiomanager method)": [[71, "recipes.cad1.task2.baseline.audio_manager.AudioManager.clip_audio"]], "get_lufs_level() (recipes.cad1.task2.baseline.audio_manager.audiomanager method)": [[71, "recipes.cad1.task2.baseline.audio_manager.AudioManager.get_lufs_level"]], "recipes.cad1.task2.baseline.audio_manager": [[71, "module-recipes.cad1.task2.baseline.audio_manager"]], "save_audios() (recipes.cad1.task2.baseline.audio_manager.audiomanager method)": [[71, "recipes.cad1.task2.baseline.audio_manager.AudioManager.save_audios"]], "scale_to_lufs() (recipes.cad1.task2.baseline.audio_manager.audiomanager method)": [[71, "recipes.cad1.task2.baseline.audio_manager.AudioManager.scale_to_lufs"]], "load_hrtf() (in module recipes.cad1.task2.baseline.baseline_utils)": [[72, "recipes.cad1.task2.baseline.baseline_utils.load_hrtf"]], "load_listeners_and_scenes() (in module recipes.cad1.task2.baseline.baseline_utils)": [[72, "recipes.cad1.task2.baseline.baseline_utils.load_listeners_and_scenes"]], "make_scene_listener_list() (in module recipes.cad1.task2.baseline.baseline_utils)": [[72, "recipes.cad1.task2.baseline.baseline_utils.make_scene_listener_list"]], "read_mp3() (in module recipes.cad1.task2.baseline.baseline_utils)": [[72, "recipes.cad1.task2.baseline.baseline_utils.read_mp3"]], "recipes.cad1.task2.baseline.baseline_utils": [[72, "module-recipes.cad1.task2.baseline.baseline_utils"]], "anechoic_hrtf_for_noise (recipes.cad1.task2.baseline.car_scene_acoustics.carsceneacoustics attribute)": [[73, "recipes.cad1.task2.baseline.car_scene_acoustics.CarSceneAcoustics.ANECHOIC_HRTF_FOR_NOISE"]], "carsceneacoustics (class in recipes.cad1.task2.baseline.car_scene_acoustics)": [[73, "recipes.cad1.task2.baseline.car_scene_acoustics.CarSceneAcoustics"]], "add_anechoic_hrtf_to_noise() (recipes.cad1.task2.baseline.car_scene_acoustics.carsceneacoustics method)": [[73, "recipes.cad1.task2.baseline.car_scene_acoustics.CarSceneAcoustics.add_anechoic_hrtf_to_noise"]], "add_hrtf_to_stereo_signal() (recipes.cad1.task2.baseline.car_scene_acoustics.carsceneacoustics method)": [[73, "recipes.cad1.task2.baseline.car_scene_acoustics.CarSceneAcoustics.add_hrtf_to_stereo_signal"]], "add_two_signals() (recipes.cad1.task2.baseline.car_scene_acoustics.carsceneacoustics static method)": [[73, "recipes.cad1.task2.baseline.car_scene_acoustics.CarSceneAcoustics.add_two_signals"]], "apply_car_acoustics_to_signal() (recipes.cad1.task2.baseline.car_scene_acoustics.carsceneacoustics method)": [[73, "recipes.cad1.task2.baseline.car_scene_acoustics.CarSceneAcoustics.apply_car_acoustics_to_signal"]], "apply_hearing_aid() (recipes.cad1.task2.baseline.car_scene_acoustics.carsceneacoustics method)": [[73, "recipes.cad1.task2.baseline.car_scene_acoustics.CarSceneAcoustics.apply_hearing_aid"]], "equalise_level() (recipes.cad1.task2.baseline.car_scene_acoustics.carsceneacoustics method)": [[73, "recipes.cad1.task2.baseline.car_scene_acoustics.CarSceneAcoustics.equalise_level"]], "get_car_noise() (recipes.cad1.task2.baseline.car_scene_acoustics.carsceneacoustics method)": [[73, "recipes.cad1.task2.baseline.car_scene_acoustics.CarSceneAcoustics.get_car_noise"]], "preload_anechoic_hrtf() (recipes.cad1.task2.baseline.car_scene_acoustics.carsceneacoustics method)": [[73, "recipes.cad1.task2.baseline.car_scene_acoustics.CarSceneAcoustics.preload_anechoic_hrtf"]], "recipes.cad1.task2.baseline.car_scene_acoustics": [[73, "module-recipes.cad1.task2.baseline.car_scene_acoustics"]], "scale_signal_to_snr() (recipes.cad1.task2.baseline.car_scene_acoustics.carsceneacoustics method)": [[73, "recipes.cad1.task2.baseline.car_scene_acoustics.CarSceneAcoustics.scale_signal_to_snr"]], "compute_average_hearing_loss() (in module recipes.cad1.task2.baseline.enhance)": [[74, "recipes.cad1.task2.baseline.enhance.compute_average_hearing_loss"]], "enhance() (in module recipes.cad1.task2.baseline.enhance)": [[74, "recipes.cad1.task2.baseline.enhance.enhance"]], "enhance_song() (in module recipes.cad1.task2.baseline.enhance)": [[74, "recipes.cad1.task2.baseline.enhance.enhance_song"]], "recipes.cad1.task2.baseline.enhance": [[74, "module-recipes.cad1.task2.baseline.enhance"]], "evaluate_scene() (in module recipes.cad1.task2.baseline.evaluate)": [[75, "recipes.cad1.task2.baseline.evaluate.evaluate_scene"]], "recipes.cad1.task2.baseline.evaluate": [[75, "module-recipes.cad1.task2.baseline.evaluate"]], "run_calculate_audio_quality() (in module recipes.cad1.task2.baseline.evaluate)": [[75, "recipes.cad1.task2.baseline.evaluate.run_calculate_audio_quality"]], "set_scene_seed() (in module recipes.cad1.task2.baseline.evaluate)": [[75, "recipes.cad1.task2.baseline.evaluate.set_scene_seed"]], "join_batches() (in module recipes.cad1.task2.baseline.merge_batches_results)": [[76, "recipes.cad1.task2.baseline.merge_batches_results.join_batches"]], "recipes.cad1.task2.baseline.merge_batches_results": [[76, "module-recipes.cad1.task2.baseline.merge_batches_results"]], "enhance() (in module recipes.cad1.task2.baseline.test)": [[77, "recipes.cad1.task2.baseline.test.enhance"]], "pack_submission() (in module recipes.cad1.task2.baseline.test)": [[77, "recipes.cad1.task2.baseline.test.pack_submission"]], "recipes.cad1.task2.baseline.test": [[77, "module-recipes.cad1.task2.baseline.test"]], "recipes.cad1.task2.data_preparation": [[78, "module-recipes.cad1.task2.data_preparation"]], "get_random_car_params() (in module recipes.cad1.task2.data_preparation.build_scene_metadata)": [[79, "recipes.cad1.task2.data_preparation.build_scene_metadata.get_random_car_params"]], "get_random_head_rotation() (in module recipes.cad1.task2.data_preparation.build_scene_metadata)": [[79, "recipes.cad1.task2.data_preparation.build_scene_metadata.get_random_head_rotation"]], "get_random_snr() (in module recipes.cad1.task2.data_preparation.build_scene_metadata)": [[79, "recipes.cad1.task2.data_preparation.build_scene_metadata.get_random_snr"]], "read_json() (in module recipes.cad1.task2.data_preparation.build_scene_metadata)": [[79, "recipes.cad1.task2.data_preparation.build_scene_metadata.read_json"]], "recipes.cad1.task2.data_preparation.build_scene_metadata": [[79, "module-recipes.cad1.task2.data_preparation.build_scene_metadata"]], "run() (in module recipes.cad1.task2.data_preparation.build_scene_metadata)": [[79, "recipes.cad1.task2.data_preparation.build_scene_metadata.run"]], "set_seed() (in module recipes.cad1.task2.data_preparation.build_scene_metadata)": [[79, "recipes.cad1.task2.data_preparation.build_scene_metadata.set_seed"]], "recipes.cad_icassp_2024": [[80, "module-recipes.cad_icassp_2024"]], "recipes.cec1": [[81, "module-recipes.cec1"]], "recipes.cec1.baseline": [[82, "module-recipes.cec1.baseline"]], "enhance() (in module recipes.cec1.baseline.enhance)": [[83, "recipes.cec1.baseline.enhance.enhance"]], "recipes.cec1.baseline.enhance": [[83, "module-recipes.cec1.baseline.enhance"]], "listen() (in module recipes.cec1.baseline.evaluate)": [[84, "recipes.cec1.baseline.evaluate.listen"]], "recipes.cec1.baseline.evaluate": [[84, "module-recipes.cec1.baseline.evaluate"]], "run_hl_processing() (in module recipes.cec1.baseline.evaluate)": [[84, "recipes.cec1.baseline.evaluate.run_HL_processing"]], "run_calculate_si() (in module recipes.cec1.baseline.evaluate)": [[84, "recipes.cec1.baseline.evaluate.run_calculate_SI"]], "recipes.cec1.baseline.results": [[85, "module-recipes.cec1.baseline.results"]], "recipes.cec1.data_preparation": [[86, "module-recipes.cec1.data_preparation"]], "recipes.cec1.e009_sheffield": [[88, "module-recipes.cec1.e009_sheffield"]], "recipes.cec1.e009_sheffield.test": [[89, "module-recipes.cec1.e009_sheffield.test"]], "run() (in module recipes.cec1.e009_sheffield.test)": [[89, "recipes.cec1.e009_sheffield.test.run"]], "ampmodule (class in recipes.cec1.e009_sheffield.train)": [[90, "recipes.cec1.e009_sheffield.train.AmpModule"]], "denmodule (class in recipes.cec1.e009_sheffield.train)": [[90, "recipes.cec1.e009_sheffield.train.DenModule"]], "common_step() (recipes.cec1.e009_sheffield.train.ampmodule method)": [[90, "recipes.cec1.e009_sheffield.train.AmpModule.common_step"]], "common_step() (recipes.cec1.e009_sheffield.train.denmodule method)": [[90, "recipes.cec1.e009_sheffield.train.DenModule.common_step"]], "recipes.cec1.e009_sheffield.train": [[90, "module-recipes.cec1.e009_sheffield.train"]], "run() (in module recipes.cec1.e009_sheffield.train)": [[90, "recipes.cec1.e009_sheffield.train.run"]], "train_amp() (in module recipes.cec1.e009_sheffield.train)": [[90, "recipes.cec1.e009_sheffield.train.train_amp"]], "train_den() (in module recipes.cec1.e009_sheffield.train)": [[90, "recipes.cec1.e009_sheffield.train.train_den"]], "recipes.cec2": [[91, "module-recipes.cec2"]], "recipes.cec2.baseline": [[92, "module-recipes.cec2.baseline"]], "enhance() (in module recipes.cec2.baseline.enhance)": [[93, "recipes.cec2.baseline.enhance.enhance"]], "recipes.cec2.baseline.enhance": [[93, "module-recipes.cec2.baseline.enhance"]], "read_csv_scores() (in module recipes.cec2.baseline.evaluate)": [[94, "recipes.cec2.baseline.evaluate.read_csv_scores"]], "recipes.cec2.baseline.evaluate": [[94, "module-recipes.cec2.baseline.evaluate"]], "run_calculate_si() (in module recipes.cec2.baseline.evaluate)": [[94, "recipes.cec2.baseline.evaluate.run_calculate_SI"]], "recipes.cec2.baseline.exp": [[95, "module-recipes.cec2.baseline.exp"]], "recipes.cec2.data_preparation": [[96, "module-recipes.cec2.data_preparation"]], "build_rooms_from_rpf() (in module recipes.cec2.data_preparation.build_scenes)": [[97, "recipes.cec2.data_preparation.build_scenes.build_rooms_from_rpf"]], "instantiate_scenes() (in module recipes.cec2.data_preparation.build_scenes)": [[97, "recipes.cec2.data_preparation.build_scenes.instantiate_scenes"]], "recipes.cec2.data_preparation.build_scenes": [[97, "module-recipes.cec2.data_preparation.build_scenes"]], "run() (in module recipes.cec2.data_preparation.build_scenes)": [[97, "recipes.cec2.data_preparation.build_scenes.run"]], "recipes.cec3": [[99, "module-recipes.cec3"]], "recipes.cec3.baseline": [[100, "module-recipes.cec3.baseline"]], "amplify_signal() (in module recipes.cec3.baseline.enhance)": [[101, "recipes.cec3.baseline.enhance.amplify_signal"]], "enhance() (in module recipes.cec3.baseline.enhance)": [[101, "recipes.cec3.baseline.enhance.enhance"]], "recipes.cec3.baseline.enhance": [[101, "module-recipes.cec3.baseline.enhance"]], "resultsfile (class in recipes.cec3.baseline.evaluate)": [[102, "recipes.cec3.baseline.evaluate.ResultsFile"]], "add_result() (recipes.cec3.baseline.evaluate.resultsfile method)": [[102, "recipes.cec3.baseline.evaluate.ResultsFile.add_result"]], "compute_metric() (in module recipes.cec3.baseline.evaluate)": [[102, "recipes.cec3.baseline.evaluate.compute_metric"]], "make_scene_listener_list() (in module recipes.cec3.baseline.evaluate)": [[102, "recipes.cec3.baseline.evaluate.make_scene_listener_list"]], "recipes.cec3.baseline.evaluate": [[102, "module-recipes.cec3.baseline.evaluate"]], "run_calculate_si() (in module recipes.cec3.baseline.evaluate)": [[102, "recipes.cec3.baseline.evaluate.run_calculate_si"]], "set_scene_seed() (in module recipes.cec3.baseline.evaluate)": [[102, "recipes.cec3.baseline.evaluate.set_scene_seed"]], "write_header() (recipes.cec3.baseline.evaluate.resultsfile method)": [[102, "recipes.cec3.baseline.evaluate.ResultsFile.write_header"]], "load_scenes_data() (in module recipes.cec3.baseline.report_score)": [[103, "recipes.cec3.baseline.report_score.load_scenes_data"]], "main() (in module recipes.cec3.baseline.report_score)": [[103, "recipes.cec3.baseline.report_score.main"]], "recipes.cec3.baseline.report_score": [[103, "module-recipes.cec3.baseline.report_score"]], "recipes.cpc1": [[104, "module-recipes.cpc1"]], "recipes.cpc1.baseline": [[105, "module-recipes.cpc1.baseline"]], "model (class in recipes.cpc1.baseline.compute_scores)": [[106, "recipes.cpc1.baseline.compute_scores.Model"]], "compute_scores() (in module recipes.cpc1.baseline.compute_scores)": [[106, "recipes.cpc1.baseline.compute_scores.compute_scores"]], "fit() (recipes.cpc1.baseline.compute_scores.model method)": [[106, "recipes.cpc1.baseline.compute_scores.Model.fit"]], "kt_score() (in module recipes.cpc1.baseline.compute_scores)": [[106, "recipes.cpc1.baseline.compute_scores.kt_score"]], "ncc_score() (in module recipes.cpc1.baseline.compute_scores)": [[106, "recipes.cpc1.baseline.compute_scores.ncc_score"]], "params (recipes.cpc1.baseline.compute_scores.model attribute)": [[106, "recipes.cpc1.baseline.compute_scores.Model.params"]], "predict() (recipes.cpc1.baseline.compute_scores.model method)": [[106, "recipes.cpc1.baseline.compute_scores.Model.predict"]], "read_data() (in module recipes.cpc1.baseline.compute_scores)": [[106, "recipes.cpc1.baseline.compute_scores.read_data"]], "recipes.cpc1.baseline.compute_scores": [[106, "module-recipes.cpc1.baseline.compute_scores"]], "rmse_score() (in module recipes.cpc1.baseline.compute_scores)": [[106, "recipes.cpc1.baseline.compute_scores.rmse_score"]], "run() (in module recipes.cpc1.baseline.compute_scores)": [[106, "recipes.cpc1.baseline.compute_scores.run"]], "std_err() (in module recipes.cpc1.baseline.compute_scores)": [[106, "recipes.cpc1.baseline.compute_scores.std_err"]], "listen() (in module recipes.cpc1.baseline.run)": [[107, "recipes.cpc1.baseline.run.listen"]], "recipes.cpc1.baseline.run": [[107, "module-recipes.cpc1.baseline.run"]], "run() (in module recipes.cpc1.baseline.run)": [[107, "recipes.cpc1.baseline.run.run"]], "run_hl_processing() (in module recipes.cpc1.baseline.run)": [[107, "recipes.cpc1.baseline.run.run_HL_processing"]], "run_calculate_si() (in module recipes.cpc1.baseline.run)": [[107, "recipes.cpc1.baseline.run.run_calculate_SI"]], "recipes.cpc1.e029_sheffield": [[108, "module-recipes.cpc1.e029_sheffield"]], "model (class in recipes.cpc1.e029_sheffield.evaluate)": [[109, "recipes.cpc1.e029_sheffield.evaluate.Model"]], "compute_scores() (in module recipes.cpc1.e029_sheffield.evaluate)": [[109, "recipes.cpc1.e029_sheffield.evaluate.compute_scores"]], "fit() (recipes.cpc1.e029_sheffield.evaluate.model method)": [[109, "recipes.cpc1.e029_sheffield.evaluate.Model.fit"]], "kt_score() (in module recipes.cpc1.e029_sheffield.evaluate)": [[109, "recipes.cpc1.e029_sheffield.evaluate.kt_score"]], "ncc_score() (in module recipes.cpc1.e029_sheffield.evaluate)": [[109, "recipes.cpc1.e029_sheffield.evaluate.ncc_score"]], "params (recipes.cpc1.e029_sheffield.evaluate.model attribute)": [[109, "recipes.cpc1.e029_sheffield.evaluate.Model.params"]], "predict() (recipes.cpc1.e029_sheffield.evaluate.model method)": [[109, "recipes.cpc1.e029_sheffield.evaluate.Model.predict"]], "read_data() (in module recipes.cpc1.e029_sheffield.evaluate)": [[109, "recipes.cpc1.e029_sheffield.evaluate.read_data"]], "recipes.cpc1.e029_sheffield.evaluate": [[109, "module-recipes.cpc1.e029_sheffield.evaluate"]], "rmse_score() (in module recipes.cpc1.e029_sheffield.evaluate)": [[109, "recipes.cpc1.e029_sheffield.evaluate.rmse_score"]], "run() (in module recipes.cpc1.e029_sheffield.evaluate)": [[109, "recipes.cpc1.e029_sheffield.evaluate.run"]], "std_err() (in module recipes.cpc1.e029_sheffield.evaluate)": [[109, "recipes.cpc1.e029_sheffield.evaluate.std_err"]], "recipes.cpc1.e032_sheffield": [[114, "module-recipes.cpc1.e032_sheffield"]], "model (class in recipes.cpc1.e032_sheffield.evaluate)": [[115, "recipes.cpc1.e032_sheffield.evaluate.Model"]], "compute_scores() (in module recipes.cpc1.e032_sheffield.evaluate)": [[115, "recipes.cpc1.e032_sheffield.evaluate.compute_scores"]], "fit() (recipes.cpc1.e032_sheffield.evaluate.model method)": [[115, "recipes.cpc1.e032_sheffield.evaluate.Model.fit"]], "kt_score() (in module recipes.cpc1.e032_sheffield.evaluate)": [[115, "recipes.cpc1.e032_sheffield.evaluate.kt_score"]], "ncc_score() (in module recipes.cpc1.e032_sheffield.evaluate)": [[115, "recipes.cpc1.e032_sheffield.evaluate.ncc_score"]], "params (recipes.cpc1.e032_sheffield.evaluate.model attribute)": [[115, "recipes.cpc1.e032_sheffield.evaluate.Model.params"]], "predict() (recipes.cpc1.e032_sheffield.evaluate.model method)": [[115, "recipes.cpc1.e032_sheffield.evaluate.Model.predict"]], "read_data() (in module recipes.cpc1.e032_sheffield.evaluate)": [[115, "recipes.cpc1.e032_sheffield.evaluate.read_data"]], "recipes.cpc1.e032_sheffield.evaluate": [[115, "module-recipes.cpc1.e032_sheffield.evaluate"]], "rmse_score() (in module recipes.cpc1.e032_sheffield.evaluate)": [[115, "recipes.cpc1.e032_sheffield.evaluate.rmse_score"]], "run() (in module recipes.cpc1.e032_sheffield.evaluate)": [[115, "recipes.cpc1.e032_sheffield.evaluate.run"]], "std_err() (in module recipes.cpc1.e032_sheffield.evaluate)": [[115, "recipes.cpc1.e032_sheffield.evaluate.std_err"]], "recipes.cpc1.test_listener_responses": [[120, "module-recipes.cpc1.test_listener_responses"]], "recipes.cpc2": [[121, "module-recipes.cpc2"]], "recipes.cpc2.baseline": [[122, "module-recipes.cpc2.baseline"]], "compute_haspi_for_signal() (in module recipes.cpc2.baseline.compute_haspi)": [[123, "recipes.cpc2.baseline.compute_haspi.compute_haspi_for_signal"]], "parse_cec2_signal_name() (in module recipes.cpc2.baseline.compute_haspi)": [[123, "recipes.cpc2.baseline.compute_haspi.parse_cec2_signal_name"]], "recipes.cpc2.baseline.compute_haspi": [[123, "module-recipes.cpc2.baseline.compute_haspi"]], "run_calculate_haspi() (in module recipes.cpc2.baseline.compute_haspi)": [[123, "recipes.cpc2.baseline.compute_haspi.run_calculate_haspi"]], "set_seed_with_string() (in module recipes.cpc2.baseline.compute_haspi)": [[123, "recipes.cpc2.baseline.compute_haspi.set_seed_with_string"]], "compute_scores() (in module recipes.cpc2.baseline.evaluate)": [[124, "recipes.cpc2.baseline.evaluate.compute_scores"]], "evaluate() (in module recipes.cpc2.baseline.evaluate)": [[124, "recipes.cpc2.baseline.evaluate.evaluate"]], "kt_score() (in module recipes.cpc2.baseline.evaluate)": [[124, "recipes.cpc2.baseline.evaluate.kt_score"]], "ncc_score() (in module recipes.cpc2.baseline.evaluate)": [[124, "recipes.cpc2.baseline.evaluate.ncc_score"]], "recipes.cpc2.baseline.evaluate": [[124, "module-recipes.cpc2.baseline.evaluate"]], "rmse_score() (in module recipes.cpc2.baseline.evaluate)": [[124, "recipes.cpc2.baseline.evaluate.rmse_score"]], "std_err() (in module recipes.cpc2.baseline.evaluate)": [[124, "recipes.cpc2.baseline.evaluate.std_err"]], "logisticmodel (class in recipes.cpc2.baseline.predict)": [[125, "recipes.cpc2.baseline.predict.LogisticModel"]], "fit() (recipes.cpc2.baseline.predict.logisticmodel method)": [[125, "recipes.cpc2.baseline.predict.LogisticModel.fit"]], "make_disjoint_train_set() (in module recipes.cpc2.baseline.predict)": [[125, "recipes.cpc2.baseline.predict.make_disjoint_train_set"]], "params (recipes.cpc2.baseline.predict.logisticmodel attribute)": [[125, "recipes.cpc2.baseline.predict.LogisticModel.params"]], "predict() (in module recipes.cpc2.baseline.predict)": [[125, "recipes.cpc2.baseline.predict.predict"]], "predict() (recipes.cpc2.baseline.predict.logisticmodel method)": [[125, "recipes.cpc2.baseline.predict.LogisticModel.predict"]], "recipes.cpc2.baseline.predict": [[125, "module-recipes.cpc2.baseline.predict"]], "recipes.icassp_2023": [[126, "module-recipes.icassp_2023"]], "recipes.icassp_2023.baseline": [[127, "module-recipes.icassp_2023.baseline"]], "enhance() (in module recipes.icassp_2023.baseline.enhance)": [[128, "recipes.icassp_2023.baseline.enhance.enhance"]], "recipes.icassp_2023.baseline.enhance": [[128, "module-recipes.icassp_2023.baseline.enhance"]], "resultsfile (class in recipes.icassp_2023.baseline.evaluate)": [[129, "recipes.icassp_2023.baseline.evaluate.ResultsFile"]], "add_result() (recipes.icassp_2023.baseline.evaluate.resultsfile method)": [[129, "recipes.icassp_2023.baseline.evaluate.ResultsFile.add_result"]], "amplify_signal() (in module recipes.icassp_2023.baseline.evaluate)": [[129, "recipes.icassp_2023.baseline.evaluate.amplify_signal"]], "compute_metric() (in module recipes.icassp_2023.baseline.evaluate)": [[129, "recipes.icassp_2023.baseline.evaluate.compute_metric"]], "make_scene_listener_list() (in module recipes.icassp_2023.baseline.evaluate)": [[129, "recipes.icassp_2023.baseline.evaluate.make_scene_listener_list"]], "recipes.icassp_2023.baseline.evaluate": [[129, "module-recipes.icassp_2023.baseline.evaluate"]], "run_calculate_si() (in module recipes.icassp_2023.baseline.evaluate)": [[129, "recipes.icassp_2023.baseline.evaluate.run_calculate_si"]], "set_scene_seed() (in module recipes.icassp_2023.baseline.evaluate)": [[129, "recipes.icassp_2023.baseline.evaluate.set_scene_seed"]], "write_header() (recipes.icassp_2023.baseline.evaluate.resultsfile method)": [[129, "recipes.icassp_2023.baseline.evaluate.ResultsFile.write_header"]], "recipes.icassp_2023.baseline.report_score": [[130, "module-recipes.icassp_2023.baseline.report_score"]], "report_score() (in module recipes.icassp_2023.baseline.report_score)": [[130, "recipes.icassp_2023.baseline.report_score.report_score"]]}})